2023-08-31 10:38:29,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:38:29,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:38:29,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:38:29,832:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:38:33,302:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 10:39:25,290:INFO:PyCaret RegressionExperiment
2023-08-31 10:39:25,291:INFO:Logging name: reg-default-name
2023-08-31 10:39:25,291:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 10:39:25,291:INFO:version 3.0.2
2023-08-31 10:39:25,291:INFO:Initializing setup()
2023-08-31 10:39:25,291:INFO:self.USI: 3421
2023-08-31 10:39:25,291:INFO:self._variable_keys: {'exp_name_log', 'fold_generator', 'pipeline', 'y_train', 'X_test', '_available_plots', 'X', 'fold_shuffle_param', 'memory', 'USI', 'gpu_n_jobs_param', '_ml_usecase', 'n_jobs_param', 'target_param', 'logging_param', 'data', 'html_param', 'idx', 'transform_target_param', 'log_plots_param', 'y_test', 'fold_groups_param', 'gpu_param', 'X_train', 'exp_id', 'seed', 'y'}
2023-08-31 10:39:25,291:INFO:Checking environment
2023-08-31 10:39:25,291:INFO:python_version: 3.11.4
2023-08-31 10:39:25,291:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 10:39:25,291:INFO:machine: arm64
2023-08-31 10:39:25,291:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 10:39:25,291:INFO:Memory: svmem(total=17179869184, available=5797953536, percent=66.3, used=7830274048, free=151650304, active=5663752192, inactive=5609111552, wired=2166521856)
2023-08-31 10:39:25,291:INFO:Physical Core: 12
2023-08-31 10:39:25,291:INFO:Logical Core: 12
2023-08-31 10:39:25,291:INFO:Checking libraries
2023-08-31 10:39:25,291:INFO:System:
2023-08-31 10:39:25,291:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 10:39:25,291:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 10:39:25,291:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 10:39:25,291:INFO:PyCaret required dependencies:
2023-08-31 10:39:25,291:INFO:                 pip: 23.2.1
2023-08-31 10:39:25,291:INFO:          setuptools: 68.0.0
2023-08-31 10:39:25,291:INFO:             pycaret: 3.0.2
2023-08-31 10:39:25,291:INFO:             IPython: 8.14.0
2023-08-31 10:39:25,291:INFO:          ipywidgets: 8.0.4
2023-08-31 10:39:25,291:INFO:                tqdm: 4.64.1
2023-08-31 10:39:25,291:INFO:               numpy: 1.23.5
2023-08-31 10:39:25,291:INFO:              pandas: 1.5.0
2023-08-31 10:39:25,291:INFO:              jinja2: 3.1.2
2023-08-31 10:39:25,291:INFO:               scipy: 1.9.3
2023-08-31 10:39:25,291:INFO:              joblib: 1.2.0
2023-08-31 10:39:25,291:INFO:             sklearn: 1.2.2
2023-08-31 10:39:25,291:INFO:                pyod: 1.0.9
2023-08-31 10:39:25,291:INFO:            imblearn: 0.10.1
2023-08-31 10:39:25,292:INFO:   category_encoders: 2.6.1
2023-08-31 10:39:25,292:INFO:            lightgbm: 3.3.5
2023-08-31 10:39:25,292:INFO:               numba: 0.57.0
2023-08-31 10:39:25,292:INFO:            requests: 2.28.0
2023-08-31 10:39:25,292:INFO:          matplotlib: 3.6.2
2023-08-31 10:39:25,292:INFO:          scikitplot: 0.3.7
2023-08-31 10:39:25,292:INFO:         yellowbrick: 1.5
2023-08-31 10:39:25,292:INFO:              plotly: 5.9.0
2023-08-31 10:39:25,292:INFO:             kaleido: 0.2.1
2023-08-31 10:39:25,292:INFO:         statsmodels: 0.13.5
2023-08-31 10:39:25,292:INFO:              sktime: 0.17.0
2023-08-31 10:39:25,292:INFO:               tbats: 1.1.3
2023-08-31 10:39:25,292:INFO:            pmdarima: 2.0.3
2023-08-31 10:39:25,292:INFO:              psutil: 5.9.0
2023-08-31 10:39:25,292:INFO:PyCaret optional dependencies:
2023-08-31 10:39:25,302:INFO:                shap: Not installed
2023-08-31 10:39:25,302:INFO:           interpret: Not installed
2023-08-31 10:39:25,302:INFO:                umap: Not installed
2023-08-31 10:39:25,302:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 10:39:25,302:INFO:  explainerdashboard: Not installed
2023-08-31 10:39:25,302:INFO:             autoviz: Not installed
2023-08-31 10:39:25,302:INFO:           fairlearn: Not installed
2023-08-31 10:39:25,302:INFO:             xgboost: Not installed
2023-08-31 10:39:25,302:INFO:            catboost: Not installed
2023-08-31 10:39:25,302:INFO:              kmodes: Not installed
2023-08-31 10:39:25,302:INFO:             mlxtend: Not installed
2023-08-31 10:39:25,302:INFO:       statsforecast: Not installed
2023-08-31 10:39:25,302:INFO:        tune_sklearn: Not installed
2023-08-31 10:39:25,302:INFO:                 ray: Not installed
2023-08-31 10:39:25,302:INFO:            hyperopt: Not installed
2023-08-31 10:39:25,302:INFO:              optuna: Not installed
2023-08-31 10:39:25,302:INFO:               skopt: Not installed
2023-08-31 10:39:25,302:INFO:              mlflow: Not installed
2023-08-31 10:39:25,302:INFO:              gradio: Not installed
2023-08-31 10:39:25,302:INFO:             fastapi: Not installed
2023-08-31 10:39:25,302:INFO:             uvicorn: Not installed
2023-08-31 10:39:25,302:INFO:              m2cgen: Not installed
2023-08-31 10:39:25,302:INFO:           evidently: Not installed
2023-08-31 10:39:25,302:INFO:               fugue: Not installed
2023-08-31 10:39:25,302:INFO:           streamlit: Not installed
2023-08-31 10:39:25,302:INFO:             prophet: Not installed
2023-08-31 10:39:25,302:INFO:None
2023-08-31 10:39:25,303:INFO:Set up data.
2023-08-31 10:39:25,306:INFO:Set up train/test split.
2023-08-31 10:39:25,309:INFO:Set up index.
2023-08-31 10:39:25,309:INFO:Set up folding strategy.
2023-08-31 10:39:25,310:INFO:Assigning column types.
2023-08-31 10:39:25,311:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 10:39:25,311:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,314:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,316:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,345:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,520:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,520:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,522:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,524:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,552:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,573:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 10:39:25,575:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,577:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,604:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,627:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,630:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,632:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,680:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 10:39:25,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,711:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,732:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,737:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,763:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,784:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,784:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 10:39:25,815:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,836:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,836:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,868:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,888:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,889:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 10:39:25,920:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:25,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:25,973:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:39:26,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,000:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 10:39:26,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,105:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,107:INFO:Preparing preprocessing pipeline...
2023-08-31 10:39:26,107:INFO:Set up simple imputation.
2023-08-31 10:39:26,115:INFO:Finished creating preprocessing pipeline.
2023-08-31 10:39:26,117:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 10:39:26,117:INFO:Creating final display dataframe.
2023-08-31 10:39:26,139:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              3421
2023-08-31 10:39:26,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,248:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:39:26,248:INFO:setup() successfully completed in 0.96s...............
2023-08-31 10:40:29,983:INFO:Initializing create_model()
2023-08-31 10:40:29,983:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282c137d0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:40:29,983:INFO:Checking exceptions
2023-08-31 10:43:45,766:INFO:Initializing create_model()
2023-08-31 10:43:45,766:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x282c137d0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:43:45,767:INFO:Checking exceptions
2023-08-31 10:44:42,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:44:42,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:44:42,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:44:42,423:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 10:44:42,806:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 10:44:42,843:INFO:PyCaret RegressionExperiment
2023-08-31 10:44:42,843:INFO:Logging name: reg-default-name
2023-08-31 10:44:42,843:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 10:44:42,843:INFO:version 3.0.2
2023-08-31 10:44:42,843:INFO:Initializing setup()
2023-08-31 10:44:42,843:INFO:self.USI: 7efd
2023-08-31 10:44:42,843:INFO:self._variable_keys: {'USI', 'logging_param', 'html_param', 'fold_shuffle_param', 'data', 'fold_groups_param', '_available_plots', 'memory', 'pipeline', 'exp_name_log', 'transform_target_param', 'gpu_param', 'X_test', 'gpu_n_jobs_param', 'X_train', 'idx', 'seed', 'y_test', 'y', 'X', 'fold_generator', '_ml_usecase', 'n_jobs_param', 'log_plots_param', 'y_train', 'target_param', 'exp_id'}
2023-08-31 10:44:42,843:INFO:Checking environment
2023-08-31 10:44:42,843:INFO:python_version: 3.11.4
2023-08-31 10:44:42,843:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 10:44:42,843:INFO:machine: arm64
2023-08-31 10:44:42,843:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 10:44:42,843:INFO:Memory: svmem(total=17179869184, available=5784502272, percent=66.3, used=7572291584, free=433160192, active=5364039680, inactive=5272502272, wired=2208251904)
2023-08-31 10:44:42,843:INFO:Physical Core: 12
2023-08-31 10:44:42,843:INFO:Logical Core: 12
2023-08-31 10:44:42,843:INFO:Checking libraries
2023-08-31 10:44:42,843:INFO:System:
2023-08-31 10:44:42,843:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 10:44:42,843:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 10:44:42,843:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 10:44:42,843:INFO:PyCaret required dependencies:
2023-08-31 10:44:42,843:INFO:                 pip: 23.2.1
2023-08-31 10:44:42,843:INFO:          setuptools: 68.0.0
2023-08-31 10:44:42,843:INFO:             pycaret: 3.0.2
2023-08-31 10:44:42,843:INFO:             IPython: 8.14.0
2023-08-31 10:44:42,843:INFO:          ipywidgets: 8.1.0
2023-08-31 10:44:42,843:INFO:                tqdm: 4.64.1
2023-08-31 10:44:42,843:INFO:               numpy: 1.25.2
2023-08-31 10:44:42,843:INFO:              pandas: 1.5.0
2023-08-31 10:44:42,843:INFO:              jinja2: 3.1.2
2023-08-31 10:44:42,843:INFO:               scipy: 1.9.3
2023-08-31 10:44:42,843:INFO:              joblib: 1.2.0
2023-08-31 10:44:42,843:INFO:             sklearn: 1.2.2
2023-08-31 10:44:42,843:INFO:                pyod: 1.0.9
2023-08-31 10:44:42,843:INFO:            imblearn: 0.10.1
2023-08-31 10:44:42,843:INFO:   category_encoders: 2.6.1
2023-08-31 10:44:42,843:INFO:            lightgbm: 3.3.5
2023-08-31 10:44:42,843:INFO:               numba: 0.57.0
2023-08-31 10:44:42,843:INFO:            requests: 2.28.0
2023-08-31 10:44:42,843:INFO:          matplotlib: 3.6.2
2023-08-31 10:44:42,843:INFO:          scikitplot: 0.3.7
2023-08-31 10:44:42,843:INFO:         yellowbrick: 1.5
2023-08-31 10:44:42,843:INFO:              plotly: 5.9.0
2023-08-31 10:44:42,843:INFO:             kaleido: 0.2.1
2023-08-31 10:44:42,843:INFO:         statsmodels: 0.13.5
2023-08-31 10:44:42,843:INFO:              sktime: 0.17.0
2023-08-31 10:44:42,843:INFO:               tbats: 1.1.3
2023-08-31 10:44:42,843:INFO:            pmdarima: 2.0.3
2023-08-31 10:44:42,843:INFO:              psutil: 5.9.0
2023-08-31 10:44:42,843:INFO:PyCaret optional dependencies:
2023-08-31 10:44:42,850:INFO:                shap: Not installed
2023-08-31 10:44:42,850:INFO:           interpret: Not installed
2023-08-31 10:44:42,850:INFO:                umap: Not installed
2023-08-31 10:44:42,850:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 10:44:42,850:INFO:  explainerdashboard: Not installed
2023-08-31 10:44:42,850:INFO:             autoviz: Not installed
2023-08-31 10:44:42,850:INFO:           fairlearn: Not installed
2023-08-31 10:44:42,850:INFO:             xgboost: Not installed
2023-08-31 10:44:42,850:INFO:            catboost: Not installed
2023-08-31 10:44:42,850:INFO:              kmodes: Not installed
2023-08-31 10:44:42,850:INFO:             mlxtend: Not installed
2023-08-31 10:44:42,850:INFO:       statsforecast: Not installed
2023-08-31 10:44:42,850:INFO:        tune_sklearn: Not installed
2023-08-31 10:44:42,850:INFO:                 ray: Not installed
2023-08-31 10:44:42,850:INFO:            hyperopt: Not installed
2023-08-31 10:44:42,850:INFO:              optuna: Not installed
2023-08-31 10:44:42,850:INFO:               skopt: Not installed
2023-08-31 10:44:42,850:INFO:              mlflow: Not installed
2023-08-31 10:44:42,850:INFO:              gradio: Not installed
2023-08-31 10:44:42,850:INFO:             fastapi: Not installed
2023-08-31 10:44:42,850:INFO:             uvicorn: Not installed
2023-08-31 10:44:42,850:INFO:              m2cgen: Not installed
2023-08-31 10:44:42,850:INFO:           evidently: Not installed
2023-08-31 10:44:42,850:INFO:               fugue: Not installed
2023-08-31 10:44:42,850:INFO:           streamlit: Not installed
2023-08-31 10:44:42,850:INFO:             prophet: Not installed
2023-08-31 10:44:42,850:INFO:None
2023-08-31 10:44:42,850:INFO:Set up data.
2023-08-31 10:44:42,853:INFO:Set up train/test split.
2023-08-31 10:44:42,855:INFO:Set up index.
2023-08-31 10:44:42,855:INFO:Set up folding strategy.
2023-08-31 10:44:42,855:INFO:Assigning column types.
2023-08-31 10:44:42,856:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 10:44:42,856:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,859:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,861:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,890:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,913:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:42,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:42,930:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,932:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,934:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,986:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:42,987:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:42,987:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 10:44:42,989:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:44:42,991:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,021:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,044:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,044:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,047:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,049:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,102:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,103:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,103:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 10:44:43,107:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,137:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,161:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,166:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,195:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,219:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 10:44:43,252:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,275:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,275:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,309:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,332:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,333:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 10:44:43,367:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,424:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 10:44:43,447:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,447:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,447:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 10:44:43,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,561:INFO:Preparing preprocessing pipeline...
2023-08-31 10:44:43,561:INFO:Set up simple imputation.
2023-08-31 10:44:43,570:INFO:Finished creating preprocessing pipeline.
2023-08-31 10:44:43,572:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 10:44:43,572:INFO:Creating final display dataframe.
2023-08-31 10:44:43,597:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              7efd
2023-08-31 10:44:43,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 10:44:43,715:INFO:setup() successfully completed in 0.87s...............
2023-08-31 10:44:46,886:INFO:Initializing create_model()
2023-08-31 10:44:46,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:44:46,886:INFO:Checking exceptions
2023-08-31 10:44:46,897:INFO:Importing libraries
2023-08-31 10:44:46,897:INFO:Copying training dataset
2023-08-31 10:44:46,900:INFO:Defining folds
2023-08-31 10:44:46,900:INFO:Declaring metric variables
2023-08-31 10:44:46,902:INFO:Importing untrained model
2023-08-31 10:44:46,903:INFO:Ridge Regression Imported successfully
2023-08-31 10:44:46,906:INFO:Starting cross validation
2023-08-31 10:44:46,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:44:48,493:INFO:Calculating mean and std
2023-08-31 10:44:48,495:INFO:Creating metrics dataframe
2023-08-31 10:44:48,501:INFO:Finalizing model
2023-08-31 10:44:48,656:INFO:Uploading results into container
2023-08-31 10:44:48,657:INFO:Uploading model into container now
2023-08-31 10:44:48,667:INFO:_master_model_container: 1
2023-08-31 10:44:48,667:INFO:_display_container: 2
2023-08-31 10:44:48,667:INFO:Ridge(random_state=123)
2023-08-31 10:44:48,668:INFO:create_model() successfully completed......................................
2023-08-31 10:45:09,218:INFO:Initializing create_model()
2023-08-31 10:45:09,218:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:45:09,218:INFO:Checking exceptions
2023-08-31 10:45:09,227:INFO:Importing libraries
2023-08-31 10:45:09,227:INFO:Copying training dataset
2023-08-31 10:45:09,233:INFO:Defining folds
2023-08-31 10:45:09,233:INFO:Declaring metric variables
2023-08-31 10:45:09,235:INFO:Importing untrained model
2023-08-31 10:45:09,237:INFO:Bayesian Ridge Imported successfully
2023-08-31 10:45:09,240:INFO:Starting cross validation
2023-08-31 10:45:09,241:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:45:10,250:INFO:Calculating mean and std
2023-08-31 10:45:10,251:INFO:Creating metrics dataframe
2023-08-31 10:45:10,254:INFO:Finalizing model
2023-08-31 10:45:10,363:INFO:Uploading results into container
2023-08-31 10:45:10,364:INFO:Uploading model into container now
2023-08-31 10:45:10,372:INFO:_master_model_container: 2
2023-08-31 10:45:10,373:INFO:_display_container: 3
2023-08-31 10:45:10,373:INFO:BayesianRidge()
2023-08-31 10:45:10,373:INFO:create_model() successfully completed......................................
2023-08-31 10:45:20,562:INFO:Initializing create_model()
2023-08-31 10:45:20,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:45:20,562:INFO:Checking exceptions
2023-08-31 10:45:20,571:INFO:Importing libraries
2023-08-31 10:45:20,571:INFO:Copying training dataset
2023-08-31 10:45:20,576:INFO:Defining folds
2023-08-31 10:45:20,577:INFO:Declaring metric variables
2023-08-31 10:45:20,579:INFO:Importing untrained model
2023-08-31 10:45:20,582:INFO:Least Angle Regression Imported successfully
2023-08-31 10:45:20,586:INFO:Starting cross validation
2023-08-31 10:45:20,587:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:45:20,653:INFO:Calculating mean and std
2023-08-31 10:45:20,653:INFO:Creating metrics dataframe
2023-08-31 10:45:20,655:INFO:Finalizing model
2023-08-31 10:45:20,669:INFO:Uploading results into container
2023-08-31 10:45:20,669:INFO:Uploading model into container now
2023-08-31 10:45:20,674:INFO:_master_model_container: 3
2023-08-31 10:45:20,674:INFO:_display_container: 4
2023-08-31 10:45:20,674:INFO:Lars(random_state=123)
2023-08-31 10:45:20,674:INFO:create_model() successfully completed......................................
2023-08-31 10:45:48,330:INFO:Initializing tune_model()
2023-08-31 10:45:48,331:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 10:45:48,331:INFO:Checking exceptions
2023-08-31 10:45:48,337:INFO:Copying training dataset
2023-08-31 10:45:48,339:INFO:Checking base model
2023-08-31 10:45:48,340:INFO:Base model : Ridge Regression
2023-08-31 10:45:48,341:INFO:Declaring metric variables
2023-08-31 10:45:48,343:INFO:Defining Hyperparameters
2023-08-31 10:45:48,440:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 10:45:48,440:INFO:Tuning with n_jobs=-1
2023-08-31 10:45:48,440:INFO:Initializing RandomizedSearchCV
2023-08-31 10:45:48,442:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 10:45:48,591:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 10:45:48,592:INFO:Hyperparameter search completed
2023-08-31 10:45:48,592:INFO:SubProcess create_model() called ==================================
2023-08-31 10:45:48,592:INFO:Initializing create_model()
2023-08-31 10:45:48,592:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a6948610>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 10:45:48,592:INFO:Checking exceptions
2023-08-31 10:45:48,592:INFO:Importing libraries
2023-08-31 10:45:48,592:INFO:Copying training dataset
2023-08-31 10:45:48,594:INFO:Defining folds
2023-08-31 10:45:48,594:INFO:Declaring metric variables
2023-08-31 10:45:48,596:INFO:Importing untrained model
2023-08-31 10:45:48,596:INFO:Declaring custom model
2023-08-31 10:45:48,598:INFO:Ridge Regression Imported successfully
2023-08-31 10:45:48,600:INFO:Starting cross validation
2023-08-31 10:45:48,600:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:45:48,645:INFO:Calculating mean and std
2023-08-31 10:45:48,645:INFO:Creating metrics dataframe
2023-08-31 10:45:48,647:INFO:Finalizing model
2023-08-31 10:45:48,657:INFO:Uploading results into container
2023-08-31 10:45:48,658:INFO:Uploading model into container now
2023-08-31 10:45:48,658:INFO:_master_model_container: 4
2023-08-31 10:45:48,658:INFO:_display_container: 5
2023-08-31 10:45:48,658:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 10:45:48,658:INFO:create_model() successfully completed......................................
2023-08-31 10:45:48,747:INFO:SubProcess create_model() end ==================================
2023-08-31 10:45:48,747:INFO:choose_better activated
2023-08-31 10:45:48,749:INFO:SubProcess create_model() called ==================================
2023-08-31 10:45:48,749:INFO:Initializing create_model()
2023-08-31 10:45:48,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:45:48,749:INFO:Checking exceptions
2023-08-31 10:45:48,750:INFO:Importing libraries
2023-08-31 10:45:48,750:INFO:Copying training dataset
2023-08-31 10:45:48,752:INFO:Defining folds
2023-08-31 10:45:48,752:INFO:Declaring metric variables
2023-08-31 10:45:48,752:INFO:Importing untrained model
2023-08-31 10:45:48,752:INFO:Declaring custom model
2023-08-31 10:45:48,753:INFO:Ridge Regression Imported successfully
2023-08-31 10:45:48,753:INFO:Starting cross validation
2023-08-31 10:45:48,753:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:45:48,797:INFO:Calculating mean and std
2023-08-31 10:45:48,797:INFO:Creating metrics dataframe
2023-08-31 10:45:48,798:INFO:Finalizing model
2023-08-31 10:45:48,806:INFO:Uploading results into container
2023-08-31 10:45:48,806:INFO:Uploading model into container now
2023-08-31 10:45:48,807:INFO:_master_model_container: 5
2023-08-31 10:45:48,807:INFO:_display_container: 6
2023-08-31 10:45:48,807:INFO:Ridge(random_state=123)
2023-08-31 10:45:48,807:INFO:create_model() successfully completed......................................
2023-08-31 10:45:48,896:INFO:SubProcess create_model() end ==================================
2023-08-31 10:45:48,896:INFO:Ridge(random_state=123) result for RMSE is 1.6159
2023-08-31 10:45:48,896:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 1.6158
2023-08-31 10:45:48,897:INFO:Ridge(alpha=0.02, random_state=123) is best model
2023-08-31 10:45:48,897:INFO:choose_better completed
2023-08-31 10:45:48,901:INFO:_master_model_container: 5
2023-08-31 10:45:48,901:INFO:_display_container: 5
2023-08-31 10:45:48,901:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 10:45:48,901:INFO:tune_model() successfully completed......................................
2023-08-31 10:46:00,974:INFO:Initializing tune_model()
2023-08-31 10:46:00,974:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 10:46:00,974:INFO:Checking exceptions
2023-08-31 10:46:00,985:INFO:Copying training dataset
2023-08-31 10:46:00,987:INFO:Checking base model
2023-08-31 10:46:00,987:INFO:Base model : Bayesian Ridge
2023-08-31 10:46:00,989:INFO:Declaring metric variables
2023-08-31 10:46:00,990:INFO:Defining Hyperparameters
2023-08-31 10:46:01,112:INFO:Tuning with n_jobs=-1
2023-08-31 10:46:01,112:INFO:Initializing RandomizedSearchCV
2023-08-31 10:46:20,678:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-07, 'actual_estimator__fit_intercept': False, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.0005, 'actual_estimator__alpha_1': 0.3}
2023-08-31 10:46:20,680:INFO:Hyperparameter search completed
2023-08-31 10:46:20,680:INFO:SubProcess create_model() called ==================================
2023-08-31 10:46:20,680:INFO:Initializing create_model()
2023-08-31 10:46:20,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a1fda990>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 1e-07, 'fit_intercept': False, 'compute_score': True, 'alpha_2': 0.0005, 'alpha_1': 0.3})
2023-08-31 10:46:20,680:INFO:Checking exceptions
2023-08-31 10:46:20,680:INFO:Importing libraries
2023-08-31 10:46:20,680:INFO:Copying training dataset
2023-08-31 10:46:20,683:INFO:Defining folds
2023-08-31 10:46:20,683:INFO:Declaring metric variables
2023-08-31 10:46:20,684:INFO:Importing untrained model
2023-08-31 10:46:20,684:INFO:Declaring custom model
2023-08-31 10:46:20,686:INFO:Bayesian Ridge Imported successfully
2023-08-31 10:46:20,688:INFO:Starting cross validation
2023-08-31 10:46:20,688:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:46:20,732:INFO:Calculating mean and std
2023-08-31 10:46:20,732:INFO:Creating metrics dataframe
2023-08-31 10:46:20,734:INFO:Finalizing model
2023-08-31 10:46:20,777:INFO:Uploading results into container
2023-08-31 10:46:20,778:INFO:Uploading model into container now
2023-08-31 10:46:20,778:INFO:_master_model_container: 6
2023-08-31 10:46:20,778:INFO:_display_container: 6
2023-08-31 10:46:20,779:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 10:46:20,779:INFO:create_model() successfully completed......................................
2023-08-31 10:46:20,895:INFO:SubProcess create_model() end ==================================
2023-08-31 10:46:20,896:INFO:choose_better activated
2023-08-31 10:46:20,899:INFO:SubProcess create_model() called ==================================
2023-08-31 10:46:20,899:INFO:Initializing create_model()
2023-08-31 10:46:20,899:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:46:20,900:INFO:Checking exceptions
2023-08-31 10:46:20,901:INFO:Importing libraries
2023-08-31 10:46:20,901:INFO:Copying training dataset
2023-08-31 10:46:20,903:INFO:Defining folds
2023-08-31 10:46:20,903:INFO:Declaring metric variables
2023-08-31 10:46:20,903:INFO:Importing untrained model
2023-08-31 10:46:20,903:INFO:Declaring custom model
2023-08-31 10:46:20,903:INFO:Bayesian Ridge Imported successfully
2023-08-31 10:46:20,903:INFO:Starting cross validation
2023-08-31 10:46:20,904:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:46:20,997:INFO:Calculating mean and std
2023-08-31 10:46:20,998:INFO:Creating metrics dataframe
2023-08-31 10:46:21,000:INFO:Finalizing model
2023-08-31 10:46:21,057:INFO:Uploading results into container
2023-08-31 10:46:21,058:INFO:Uploading model into container now
2023-08-31 10:46:21,058:INFO:_master_model_container: 7
2023-08-31 10:46:21,058:INFO:_display_container: 7
2023-08-31 10:46:21,059:INFO:BayesianRidge()
2023-08-31 10:46:21,059:INFO:create_model() successfully completed......................................
2023-08-31 10:46:21,168:INFO:SubProcess create_model() end ==================================
2023-08-31 10:46:21,168:INFO:BayesianRidge() result for RMSE is 1.6159
2023-08-31 10:46:21,169:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) result for RMSE is 1.6157
2023-08-31 10:46:21,169:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) is best model
2023-08-31 10:46:21,169:INFO:choose_better completed
2023-08-31 10:46:21,181:INFO:_master_model_container: 7
2023-08-31 10:46:21,181:INFO:_display_container: 6
2023-08-31 10:46:21,181:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 10:46:21,182:INFO:tune_model() successfully completed......................................
2023-08-31 10:46:55,378:INFO:Initializing tune_model()
2023-08-31 10:46:55,378:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 10:46:55,378:INFO:Checking exceptions
2023-08-31 10:46:55,387:INFO:Copying training dataset
2023-08-31 10:46:55,390:INFO:Checking base model
2023-08-31 10:46:55,390:INFO:Base model : Least Angle Regression
2023-08-31 10:46:55,391:INFO:Declaring metric variables
2023-08-31 10:46:55,393:INFO:Defining Hyperparameters
2023-08-31 10:46:55,393:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 10:46:55,499:INFO:Tuning with n_jobs=-1
2023-08-31 10:46:55,499:INFO:Initializing GridSearchCV
2023-08-31 10:46:56,014:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 10:46:56,014:INFO:Hyperparameter search completed
2023-08-31 10:46:56,014:INFO:SubProcess create_model() called ==================================
2023-08-31 10:46:56,015:INFO:Initializing create_model()
2023-08-31 10:46:56,015:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a19be3d0>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 10:46:56,015:INFO:Checking exceptions
2023-08-31 10:46:56,015:INFO:Importing libraries
2023-08-31 10:46:56,015:INFO:Copying training dataset
2023-08-31 10:46:56,017:INFO:Defining folds
2023-08-31 10:46:56,017:INFO:Declaring metric variables
2023-08-31 10:46:56,018:INFO:Importing untrained model
2023-08-31 10:46:56,018:INFO:Declaring custom model
2023-08-31 10:46:56,020:INFO:Least Angle Regression Imported successfully
2023-08-31 10:46:56,022:INFO:Starting cross validation
2023-08-31 10:46:56,022:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:46:56,066:INFO:Calculating mean and std
2023-08-31 10:46:56,066:INFO:Creating metrics dataframe
2023-08-31 10:46:56,068:INFO:Finalizing model
2023-08-31 10:46:56,079:INFO:Uploading results into container
2023-08-31 10:46:56,079:INFO:Uploading model into container now
2023-08-31 10:46:56,080:INFO:_master_model_container: 8
2023-08-31 10:46:56,080:INFO:_display_container: 7
2023-08-31 10:46:56,080:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 10:46:56,080:INFO:create_model() successfully completed......................................
2023-08-31 10:46:56,185:INFO:SubProcess create_model() end ==================================
2023-08-31 10:46:56,186:INFO:choose_better activated
2023-08-31 10:46:56,187:INFO:SubProcess create_model() called ==================================
2023-08-31 10:46:56,188:INFO:Initializing create_model()
2023-08-31 10:46:56,188:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 10:46:56,188:INFO:Checking exceptions
2023-08-31 10:46:56,188:INFO:Importing libraries
2023-08-31 10:46:56,188:INFO:Copying training dataset
2023-08-31 10:46:56,191:INFO:Defining folds
2023-08-31 10:46:56,191:INFO:Declaring metric variables
2023-08-31 10:46:56,191:INFO:Importing untrained model
2023-08-31 10:46:56,191:INFO:Declaring custom model
2023-08-31 10:46:56,191:INFO:Least Angle Regression Imported successfully
2023-08-31 10:46:56,191:INFO:Starting cross validation
2023-08-31 10:46:56,192:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 10:46:56,240:INFO:Calculating mean and std
2023-08-31 10:46:56,241:INFO:Creating metrics dataframe
2023-08-31 10:46:56,242:INFO:Finalizing model
2023-08-31 10:46:56,251:INFO:Uploading results into container
2023-08-31 10:46:56,251:INFO:Uploading model into container now
2023-08-31 10:46:56,251:INFO:_master_model_container: 9
2023-08-31 10:46:56,251:INFO:_display_container: 8
2023-08-31 10:46:56,251:INFO:Lars(random_state=123)
2023-08-31 10:46:56,251:INFO:create_model() successfully completed......................................
2023-08-31 10:46:56,340:INFO:SubProcess create_model() end ==================================
2023-08-31 10:46:56,341:INFO:Lars(random_state=123) result for RMSE is 2.2877
2023-08-31 10:46:56,341:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 1.6155
2023-08-31 10:46:56,341:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 10:46:56,341:INFO:choose_better completed
2023-08-31 10:46:56,346:INFO:_master_model_container: 9
2023-08-31 10:46:56,346:INFO:_display_container: 7
2023-08-31 10:46:56,346:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 10:46:56,346:INFO:tune_model() successfully completed......................................
2023-08-31 10:48:08,882:INFO:Initializing plot_model()
2023-08-31 10:48:08,883:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 10:48:08,883:INFO:Checking exceptions
2023-08-31 10:48:08,887:INFO:Preloading libraries
2023-08-31 10:48:08,887:INFO:Copying training dataset
2023-08-31 10:48:08,887:INFO:Plot type: error
2023-08-31 10:48:08,929:INFO:Fitting Model
2023-08-31 10:48:08,929:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 10:48:08,929:INFO:Scoring test/hold-out set
2023-08-31 10:48:09,170:INFO:Visual Rendered Successfully
2023-08-31 10:48:09,283:INFO:plot_model() successfully completed......................................
2023-08-31 10:48:19,211:INFO:Initializing plot_model()
2023-08-31 10:48:19,212:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 10:48:19,212:INFO:Checking exceptions
2023-08-31 10:48:19,214:INFO:Preloading libraries
2023-08-31 10:48:19,215:INFO:Copying training dataset
2023-08-31 10:48:19,215:INFO:Plot type: feature
2023-08-31 10:48:19,273:INFO:Visual Rendered Successfully
2023-08-31 10:48:19,363:INFO:plot_model() successfully completed......................................
2023-08-31 10:48:44,175:INFO:Initializing finalize_model()
2023-08-31 10:48:44,176:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 10:48:44,176:INFO:Finalizing BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 10:48:44,178:INFO:Initializing create_model()
2023-08-31 10:48:44,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 10:48:44,178:INFO:Checking exceptions
2023-08-31 10:48:44,179:INFO:Importing libraries
2023-08-31 10:48:44,179:INFO:Copying training dataset
2023-08-31 10:48:44,179:INFO:Defining folds
2023-08-31 10:48:44,179:INFO:Declaring metric variables
2023-08-31 10:48:44,179:INFO:Importing untrained model
2023-08-31 10:48:44,179:INFO:Declaring custom model
2023-08-31 10:48:44,179:INFO:Bayesian Ridge Imported successfully
2023-08-31 10:48:44,179:INFO:Cross validation set to False
2023-08-31 10:48:44,179:INFO:Fitting Model
2023-08-31 10:48:44,231:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 10:48:44,231:INFO:create_model() successfully completed......................................
2023-08-31 10:48:44,372:INFO:_master_model_container: 9
2023-08-31 10:48:44,372:INFO:_display_container: 7
2023-08-31 10:48:44,374:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 10:48:44,374:INFO:finalize_model() successfully completed......................................
2023-08-31 10:49:02,804:INFO:Initializing predict_model()
2023-08-31 10:49:02,805:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2a7c1ad40>)
2023-08-31 10:49:02,805:INFO:Checking exceptions
2023-08-31 10:49:02,805:INFO:Preloading libraries
2023-08-31 10:49:02,806:INFO:Set up data.
2023-08-31 10:49:02,809:INFO:Set up index.
2023-08-31 11:11:42,073:INFO:Initializing blend_models()
2023-08-31 11:11:42,073:INFO:blend_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator_list=[Ridge(alpha=0.02, random_state=123), BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), Lars(eps=1e-05, fit_intercept=False, random_state=123)], fold=10, round=4, choose_better=False, optimize=R2, method=auto, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-08-31 11:11:42,073:INFO:Checking exceptions
2023-08-31 11:11:42,083:INFO:Importing libraries
2023-08-31 11:11:42,083:INFO:Copying training dataset
2023-08-31 11:11:42,084:INFO:Getting model names
2023-08-31 11:11:42,086:INFO:SubProcess create_model() called ==================================
2023-08-31 11:11:42,088:INFO:Initializing create_model()
2023-08-31 11:11:42,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b29d00d0>, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:11:42,088:INFO:Checking exceptions
2023-08-31 11:11:42,089:INFO:Importing libraries
2023-08-31 11:11:42,089:INFO:Copying training dataset
2023-08-31 11:11:42,093:INFO:Defining folds
2023-08-31 11:11:42,093:INFO:Declaring metric variables
2023-08-31 11:11:42,094:INFO:Importing untrained model
2023-08-31 11:11:42,094:INFO:Declaring custom model
2023-08-31 11:11:42,096:INFO:Voting Regressor Imported successfully
2023-08-31 11:11:42,098:INFO:Starting cross validation
2023-08-31 11:11:42,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:11:43,538:INFO:Calculating mean and std
2023-08-31 11:11:43,541:INFO:Creating metrics dataframe
2023-08-31 11:11:43,549:INFO:Finalizing model
2023-08-31 11:11:44,033:INFO:Uploading results into container
2023-08-31 11:11:44,033:INFO:Uploading model into container now
2023-08-31 11:11:44,033:INFO:_master_model_container: 10
2023-08-31 11:11:44,033:INFO:_display_container: 9
2023-08-31 11:11:44,035:INFO:VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1)
2023-08-31 11:11:44,035:INFO:create_model() successfully completed......................................
2023-08-31 11:11:44,252:INFO:SubProcess create_model() end ==================================
2023-08-31 11:11:44,258:INFO:_master_model_container: 10
2023-08-31 11:11:44,258:INFO:_display_container: 9
2023-08-31 11:11:44,259:INFO:VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1)
2023-08-31 11:11:44,260:INFO:blend_models() successfully completed......................................
2023-08-31 11:12:00,339:INFO:Initializing evaluate_model()
2023-08-31 11:12:00,340:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-08-31 11:12:00,349:INFO:Initializing plot_model()
2023-08-31 11:12:00,349:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=pipeline, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:00,349:INFO:Checking exceptions
2023-08-31 11:12:00,351:INFO:Preloading libraries
2023-08-31 11:12:00,351:INFO:Copying training dataset
2023-08-31 11:12:00,351:INFO:Plot type: pipeline
2023-08-31 11:12:00,401:INFO:Visual Rendered Successfully
2023-08-31 11:12:00,542:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:03,333:INFO:Initializing plot_model()
2023-08-31 11:12:03,333:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=parameter, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:03,333:INFO:Checking exceptions
2023-08-31 11:12:03,335:INFO:Preloading libraries
2023-08-31 11:12:03,336:INFO:Copying training dataset
2023-08-31 11:12:03,336:INFO:Plot type: parameter
2023-08-31 11:12:03,338:INFO:Visual Rendered Successfully
2023-08-31 11:12:03,500:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:04,200:INFO:Initializing plot_model()
2023-08-31 11:12:04,200:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=residuals_interactive, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:04,200:INFO:Checking exceptions
2023-08-31 11:12:04,201:INFO:Preloading libraries
2023-08-31 11:12:04,202:INFO:Copying training dataset
2023-08-31 11:12:04,202:INFO:Plot type: residuals_interactive
2023-08-31 11:12:04,244:INFO:Calculated model residuals
2023-08-31 11:12:04,855:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:557: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:04,873:INFO:Calculated Tunkey-Anscombe Plot
2023-08-31 11:12:05,132:INFO:Calculated Normal QQ Plot
2023-08-31 11:12:05,675:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:244: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:05,687:INFO:Calculated Scale-Location Plot
2023-08-31 11:12:06,368:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:382: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:06,383:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2023-08-31 11:12:06,398:INFO:Visual Rendered Successfully
2023-08-31 11:12:06,549:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:06,599:INFO:Initializing plot_model()
2023-08-31 11:12:06,599:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=cooks, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:06,599:INFO:Checking exceptions
2023-08-31 11:12:06,601:INFO:Preloading libraries
2023-08-31 11:12:06,601:INFO:Copying training dataset
2023-08-31 11:12:06,602:INFO:Plot type: cooks
2023-08-31 11:12:06,627:INFO:Fitting Model
2023-08-31 11:12:06,892:INFO:Visual Rendered Successfully
2023-08-31 11:12:07,027:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:07,174:INFO:Initializing plot_model()
2023-08-31 11:12:07,174:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=rfe, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:07,174:INFO:Checking exceptions
2023-08-31 11:12:09,524:INFO:Initializing plot_model()
2023-08-31 11:12:09,524:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=learning, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:09,524:INFO:Checking exceptions
2023-08-31 11:12:09,527:INFO:Preloading libraries
2023-08-31 11:12:09,527:INFO:Copying training dataset
2023-08-31 11:12:09,527:INFO:Plot type: learning
2023-08-31 11:12:09,561:INFO:Fitting Model
2023-08-31 11:12:10,236:INFO:Visual Rendered Successfully
2023-08-31 11:12:10,364:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:10,444:INFO:Initializing plot_model()
2023-08-31 11:12:10,445:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=manifold, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:10,445:INFO:Checking exceptions
2023-08-31 11:12:10,446:INFO:Preloading libraries
2023-08-31 11:12:10,446:INFO:Copying training dataset
2023-08-31 11:12:10,446:INFO:Plot type: manifold
2023-08-31 11:12:10,478:INFO:Fitting & Transforming Model
2023-08-31 11:12:16,818:INFO:Visual Rendered Successfully
2023-08-31 11:12:16,944:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:16,953:INFO:Initializing plot_model()
2023-08-31 11:12:16,954:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=feature_all, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:16,954:INFO:Checking exceptions
2023-08-31 11:12:17,208:INFO:Initializing plot_model()
2023-08-31 11:12:17,208:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=tree, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:17,208:INFO:Checking exceptions
2023-08-31 11:12:18,191:INFO:Initializing plot_model()
2023-08-31 11:12:18,191:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), plot=residuals_interactive, scale=1, save=False, fold=KFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=False, system=True, display=None, display_format=None)
2023-08-31 11:12:18,191:INFO:Checking exceptions
2023-08-31 11:12:18,194:INFO:Preloading libraries
2023-08-31 11:12:18,194:INFO:Copying training dataset
2023-08-31 11:12:18,195:INFO:Plot type: residuals_interactive
2023-08-31 11:12:18,231:INFO:Calculated model residuals
2023-08-31 11:12:18,819:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:557: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:18,831:INFO:Calculated Tunkey-Anscombe Plot
2023-08-31 11:12:19,090:INFO:Calculated Normal QQ Plot
2023-08-31 11:12:19,640:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:244: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:19,652:INFO:Calculated Scale-Location Plot
2023-08-31 11:12:20,398:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/pycaret/internal/plots/residual_plots.py:382: FutureWarning:

The behavior of `series[i:j]` with an integer-dtype index is deprecated. In a future version, this will be treated as *label-based* indexing, consistent with e.g. `series[i]` lookups. To retain the old behavior, use `series.iloc[i:j]`. To get the future behavior, use `series.loc[i:j]`.


2023-08-31 11:12:20,415:INFO:Calculated Residual vs Leverage Plot inc. Cook's distance
2023-08-31 11:12:20,430:INFO:Visual Rendered Successfully
2023-08-31 11:12:20,611:INFO:plot_model() successfully completed......................................
2023-08-31 11:12:34,452:INFO:Initializing finalize_model()
2023-08-31 11:12:34,453:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 11:12:34,455:INFO:Finalizing VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1)
2023-08-31 11:12:34,458:INFO:Initializing create_model()
2023-08-31 11:12:34,458:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=VotingRegressor(estimators=[('Ridge Regression',
                             Ridge(alpha=0.02, random_state=123)),
                            ('Bayesian Ridge',
                             BayesianRidge(alpha_1=0.3, alpha_2=0.0005,
                                           compute_score=True,
                                           fit_intercept=False, lambda_1=1e-07,
                                           lambda_2=0.3)),
                            ('Least Angle Regression',
                             Lars(eps=1e-05, fit_intercept=False,
                                  random_state=123))],
                n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 11:12:34,458:INFO:Checking exceptions
2023-08-31 11:12:34,459:INFO:Importing libraries
2023-08-31 11:12:34,459:INFO:Copying training dataset
2023-08-31 11:12:34,459:INFO:Defining folds
2023-08-31 11:12:34,459:INFO:Declaring metric variables
2023-08-31 11:12:34,459:INFO:Importing untrained model
2023-08-31 11:12:34,459:INFO:Declaring custom model
2023-08-31 11:12:34,460:INFO:Voting Regressor Imported successfully
2023-08-31 11:12:34,460:INFO:Cross validation set to False
2023-08-31 11:12:34,460:INFO:Fitting Model
2023-08-31 11:12:34,482:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 VotingRegressor(estimators=[('Ridge Regression',
                                              Ridge(alpha=0.02,
                                                    random_state=123)),
                                             ('Bayesian Ridge',
                                              BayesianRidge(alpha_1=0.3,
                                                            alpha_2=0.0005,
                                                            compute_score=True,
                                                            fit_intercept=False,
                                                            lambda_1=1e-07,
                                                            lambda_2=0.3)),
                                             ('Least Angle Regression',
                                              Lars(eps=1e-05,
                                                   fit_intercept=False,
                                                   random_state=123))],
                                 n_jobs=-1))])
2023-08-31 11:12:34,482:INFO:create_model() successfully completed......................................
2023-08-31 11:12:34,678:INFO:_master_model_container: 10
2023-08-31 11:12:34,678:INFO:_display_container: 9
2023-08-31 11:12:34,684:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 VotingRegressor(estimators=[('Ridge Regression',
                                              Ridge(alpha=0.02,
                                                    random_state=123)),
                                             ('Bayesian Ridge',
                                              BayesianRidge(alpha_1=0.3,
                                                            alpha_2=0.0005,
                                                            compute_score=True,
                                                            fit_intercept=False,
                                                            lambda_1=1e-07,
                                                            lambda_2=0.3)),
                                             ('Least Angle Regression',
                                              Lars(eps=1e-05,
                                                   fit_intercept=False,
                                                   random_state=123))],
                                 n_jobs=-1))])
2023-08-31 11:12:34,684:INFO:finalize_model() successfully completed......................................
2023-08-31 11:12:34,948:INFO:Initializing predict_model()
2023-08-31 11:12:34,948:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a1a5f7d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 VotingRegressor(estimators=[('Ridge Regression',
                                              Ridge(alpha=0.02,
                                                    random_state=123)),
                                             ('Bayesian Ridge',
                                              BayesianRidge(alpha_1=0.3,
                                                            alpha_2=0.0005,
                                                            compute_score=True,
                                                            fit_intercept=False,
                                                            lambda_1=1e-07,
                                                            lambda_2=0.3)),
                                             ('Least Angle Regression',
                                              Lars(eps=1e-05,
                                                   fit_intercept=False,
                                                   random_state=123))],
                                 n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2b44c49a0>)
2023-08-31 11:12:34,949:INFO:Checking exceptions
2023-08-31 11:12:34,949:INFO:Preloading libraries
2023-08-31 11:12:34,950:INFO:Set up data.
2023-08-31 11:12:34,953:INFO:Set up index.
2023-08-31 11:19:07,754:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 11:19:07,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 11:19:07,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 11:19:07,755:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 11:19:08,187:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 11:19:08,223:INFO:PyCaret RegressionExperiment
2023-08-31 11:19:08,223:INFO:Logging name: reg-default-name
2023-08-31 11:19:08,223:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 11:19:08,223:INFO:version 3.0.2
2023-08-31 11:19:08,223:INFO:Initializing setup()
2023-08-31 11:19:08,223:INFO:self.USI: 07c2
2023-08-31 11:19:08,223:INFO:self._variable_keys: {'html_param', 'data', 'X_test', 'memory', 'n_jobs_param', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'idx', 'X', 'target_param', 'y_test', 'X_train', 'log_plots_param', 'y', 'exp_name_log', 'gpu_param', '_available_plots', 'fold_generator', 'transform_target_param', 'pipeline', 'fold_shuffle_param', 'y_train', 'USI', 'fold_groups_param', 'seed', '_ml_usecase'}
2023-08-31 11:19:08,223:INFO:Checking environment
2023-08-31 11:19:08,223:INFO:python_version: 3.11.4
2023-08-31 11:19:08,223:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 11:19:08,223:INFO:machine: arm64
2023-08-31 11:19:08,223:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 11:19:08,223:INFO:Memory: svmem(total=17179869184, available=6297272320, percent=63.3, used=7975354368, free=520880128, active=5782323200, inactive=5724585984, wired=2193031168)
2023-08-31 11:19:08,223:INFO:Physical Core: 12
2023-08-31 11:19:08,223:INFO:Logical Core: 12
2023-08-31 11:19:08,223:INFO:Checking libraries
2023-08-31 11:19:08,223:INFO:System:
2023-08-31 11:19:08,223:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 11:19:08,223:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 11:19:08,223:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 11:19:08,223:INFO:PyCaret required dependencies:
2023-08-31 11:19:08,223:INFO:                 pip: 23.2.1
2023-08-31 11:19:08,223:INFO:          setuptools: 68.0.0
2023-08-31 11:19:08,223:INFO:             pycaret: 3.0.2
2023-08-31 11:19:08,223:INFO:             IPython: 8.14.0
2023-08-31 11:19:08,223:INFO:          ipywidgets: 8.1.0
2023-08-31 11:19:08,223:INFO:                tqdm: 4.64.1
2023-08-31 11:19:08,223:INFO:               numpy: 1.25.2
2023-08-31 11:19:08,223:INFO:              pandas: 1.5.0
2023-08-31 11:19:08,223:INFO:              jinja2: 3.1.2
2023-08-31 11:19:08,223:INFO:               scipy: 1.9.3
2023-08-31 11:19:08,223:INFO:              joblib: 1.2.0
2023-08-31 11:19:08,223:INFO:             sklearn: 1.2.2
2023-08-31 11:19:08,223:INFO:                pyod: 1.0.9
2023-08-31 11:19:08,223:INFO:            imblearn: 0.10.1
2023-08-31 11:19:08,223:INFO:   category_encoders: 2.6.1
2023-08-31 11:19:08,223:INFO:            lightgbm: 3.3.5
2023-08-31 11:19:08,223:INFO:               numba: 0.57.0
2023-08-31 11:19:08,223:INFO:            requests: 2.28.0
2023-08-31 11:19:08,223:INFO:          matplotlib: 3.6.2
2023-08-31 11:19:08,223:INFO:          scikitplot: 0.3.7
2023-08-31 11:19:08,223:INFO:         yellowbrick: 1.5
2023-08-31 11:19:08,223:INFO:              plotly: 5.9.0
2023-08-31 11:19:08,223:INFO:             kaleido: 0.2.1
2023-08-31 11:19:08,223:INFO:         statsmodels: 0.13.5
2023-08-31 11:19:08,223:INFO:              sktime: 0.17.0
2023-08-31 11:19:08,223:INFO:               tbats: 1.1.3
2023-08-31 11:19:08,223:INFO:            pmdarima: 2.0.3
2023-08-31 11:19:08,223:INFO:              psutil: 5.9.0
2023-08-31 11:19:08,223:INFO:PyCaret optional dependencies:
2023-08-31 11:19:08,230:INFO:                shap: Not installed
2023-08-31 11:19:08,230:INFO:           interpret: Not installed
2023-08-31 11:19:08,230:INFO:                umap: Not installed
2023-08-31 11:19:08,230:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 11:19:08,230:INFO:  explainerdashboard: Not installed
2023-08-31 11:19:08,230:INFO:             autoviz: Not installed
2023-08-31 11:19:08,230:INFO:           fairlearn: Not installed
2023-08-31 11:19:08,230:INFO:             xgboost: Not installed
2023-08-31 11:19:08,230:INFO:            catboost: Not installed
2023-08-31 11:19:08,230:INFO:              kmodes: Not installed
2023-08-31 11:19:08,230:INFO:             mlxtend: Not installed
2023-08-31 11:19:08,230:INFO:       statsforecast: Not installed
2023-08-31 11:19:08,230:INFO:        tune_sklearn: Not installed
2023-08-31 11:19:08,230:INFO:                 ray: Not installed
2023-08-31 11:19:08,230:INFO:            hyperopt: Not installed
2023-08-31 11:19:08,230:INFO:              optuna: Not installed
2023-08-31 11:19:08,230:INFO:               skopt: Not installed
2023-08-31 11:19:08,230:INFO:              mlflow: Not installed
2023-08-31 11:19:08,230:INFO:              gradio: Not installed
2023-08-31 11:19:08,230:INFO:             fastapi: Not installed
2023-08-31 11:19:08,230:INFO:             uvicorn: Not installed
2023-08-31 11:19:08,230:INFO:              m2cgen: Not installed
2023-08-31 11:19:08,230:INFO:           evidently: Not installed
2023-08-31 11:19:08,230:INFO:               fugue: Not installed
2023-08-31 11:19:08,230:INFO:           streamlit: Not installed
2023-08-31 11:19:08,230:INFO:             prophet: Not installed
2023-08-31 11:19:08,230:INFO:None
2023-08-31 11:19:08,230:INFO:Set up data.
2023-08-31 11:19:08,233:INFO:Set up train/test split.
2023-08-31 11:19:08,235:INFO:Set up index.
2023-08-31 11:19:08,235:INFO:Set up folding strategy.
2023-08-31 11:19:08,235:INFO:Assigning column types.
2023-08-31 11:19:08,236:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 11:19:08,236:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,239:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,241:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,268:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,288:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,305:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,307:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,309:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,336:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,356:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,356:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 11:19:08,358:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,360:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,386:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,407:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,410:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,412:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,460:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 11:19:08,465:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,492:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,513:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,517:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,544:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,564:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 11:19:08,594:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,615:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,615:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,666:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 11:19:08,697:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,748:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:19:08,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,769:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 11:19:08,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,819:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,872:INFO:Preparing preprocessing pipeline...
2023-08-31 11:19:08,872:INFO:Set up simple imputation.
2023-08-31 11:19:08,880:INFO:Finished creating preprocessing pipeline.
2023-08-31 11:19:08,882:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 11:19:08,882:INFO:Creating final display dataframe.
2023-08-31 11:19:08,904:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              07c2
2023-08-31 11:19:08,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:08,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:09,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:09,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:19:09,009:INFO:setup() successfully completed in 0.79s...............
2023-08-31 11:19:09,545:INFO:Initializing create_model()
2023-08-31 11:19:09,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:09,545:INFO:Checking exceptions
2023-08-31 11:19:09,555:INFO:Importing libraries
2023-08-31 11:19:09,555:INFO:Copying training dataset
2023-08-31 11:19:09,559:INFO:Defining folds
2023-08-31 11:19:09,559:INFO:Declaring metric variables
2023-08-31 11:19:09,560:INFO:Importing untrained model
2023-08-31 11:19:09,562:INFO:Ridge Regression Imported successfully
2023-08-31 11:19:09,564:INFO:Starting cross validation
2023-08-31 11:19:09,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:11,037:INFO:Calculating mean and std
2023-08-31 11:19:11,043:INFO:Creating metrics dataframe
2023-08-31 11:19:11,052:INFO:Finalizing model
2023-08-31 11:19:11,088:INFO:Uploading results into container
2023-08-31 11:19:11,089:INFO:Uploading model into container now
2023-08-31 11:19:11,118:INFO:_master_model_container: 1
2023-08-31 11:19:11,118:INFO:_display_container: 2
2023-08-31 11:19:11,119:INFO:Ridge(random_state=123)
2023-08-31 11:19:11,119:INFO:create_model() successfully completed......................................
2023-08-31 11:19:12,328:INFO:Initializing create_model()
2023-08-31 11:19:12,328:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:12,328:INFO:Checking exceptions
2023-08-31 11:19:12,337:INFO:Importing libraries
2023-08-31 11:19:12,337:INFO:Copying training dataset
2023-08-31 11:19:12,342:INFO:Defining folds
2023-08-31 11:19:12,343:INFO:Declaring metric variables
2023-08-31 11:19:12,345:INFO:Importing untrained model
2023-08-31 11:19:12,346:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:19:12,349:INFO:Starting cross validation
2023-08-31 11:19:12,349:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:13,124:INFO:Calculating mean and std
2023-08-31 11:19:13,124:INFO:Creating metrics dataframe
2023-08-31 11:19:13,127:INFO:Finalizing model
2023-08-31 11:19:13,291:INFO:Uploading results into container
2023-08-31 11:19:13,292:INFO:Uploading model into container now
2023-08-31 11:19:13,301:INFO:_master_model_container: 2
2023-08-31 11:19:13,301:INFO:_display_container: 3
2023-08-31 11:19:13,301:INFO:BayesianRidge()
2023-08-31 11:19:13,301:INFO:create_model() successfully completed......................................
2023-08-31 11:19:14,237:INFO:Initializing create_model()
2023-08-31 11:19:14,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:14,237:INFO:Checking exceptions
2023-08-31 11:19:14,244:INFO:Importing libraries
2023-08-31 11:19:14,244:INFO:Copying training dataset
2023-08-31 11:19:14,248:INFO:Defining folds
2023-08-31 11:19:14,248:INFO:Declaring metric variables
2023-08-31 11:19:14,250:INFO:Importing untrained model
2023-08-31 11:19:14,254:INFO:Least Angle Regression Imported successfully
2023-08-31 11:19:14,259:INFO:Starting cross validation
2023-08-31 11:19:14,260:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:14,316:INFO:Calculating mean and std
2023-08-31 11:19:14,316:INFO:Creating metrics dataframe
2023-08-31 11:19:14,318:INFO:Finalizing model
2023-08-31 11:19:14,330:INFO:Uploading results into container
2023-08-31 11:19:14,330:INFO:Uploading model into container now
2023-08-31 11:19:14,334:INFO:_master_model_container: 3
2023-08-31 11:19:14,334:INFO:_display_container: 4
2023-08-31 11:19:14,334:INFO:Lars(random_state=123)
2023-08-31 11:19:14,334:INFO:create_model() successfully completed......................................
2023-08-31 11:19:16,297:INFO:Initializing tune_model()
2023-08-31 11:19:16,297:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:19:16,298:INFO:Checking exceptions
2023-08-31 11:19:16,306:INFO:Copying training dataset
2023-08-31 11:19:16,309:INFO:Checking base model
2023-08-31 11:19:16,309:INFO:Base model : Ridge Regression
2023-08-31 11:19:16,310:INFO:Declaring metric variables
2023-08-31 11:19:16,312:INFO:Defining Hyperparameters
2023-08-31 11:19:16,443:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 11:19:16,443:INFO:Tuning with n_jobs=-1
2023-08-31 11:19:16,443:INFO:Initializing RandomizedSearchCV
2023-08-31 11:19:16,445:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 11:19:16,585:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 11:19:16,585:INFO:Hyperparameter search completed
2023-08-31 11:19:16,585:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:16,586:INFO:Initializing create_model()
2023-08-31 11:19:16,586:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x112302750>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 11:19:16,586:INFO:Checking exceptions
2023-08-31 11:19:16,586:INFO:Importing libraries
2023-08-31 11:19:16,586:INFO:Copying training dataset
2023-08-31 11:19:16,588:INFO:Defining folds
2023-08-31 11:19:16,588:INFO:Declaring metric variables
2023-08-31 11:19:16,590:INFO:Importing untrained model
2023-08-31 11:19:16,590:INFO:Declaring custom model
2023-08-31 11:19:16,591:INFO:Ridge Regression Imported successfully
2023-08-31 11:19:16,593:INFO:Starting cross validation
2023-08-31 11:19:16,594:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:16,640:INFO:Calculating mean and std
2023-08-31 11:19:16,640:INFO:Creating metrics dataframe
2023-08-31 11:19:16,642:INFO:Finalizing model
2023-08-31 11:19:16,654:INFO:Uploading results into container
2023-08-31 11:19:16,654:INFO:Uploading model into container now
2023-08-31 11:19:16,654:INFO:_master_model_container: 4
2023-08-31 11:19:16,654:INFO:_display_container: 5
2023-08-31 11:19:16,655:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 11:19:16,655:INFO:create_model() successfully completed......................................
2023-08-31 11:19:16,746:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:16,746:INFO:choose_better activated
2023-08-31 11:19:16,748:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:16,748:INFO:Initializing create_model()
2023-08-31 11:19:16,748:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:16,748:INFO:Checking exceptions
2023-08-31 11:19:16,749:INFO:Importing libraries
2023-08-31 11:19:16,749:INFO:Copying training dataset
2023-08-31 11:19:16,752:INFO:Defining folds
2023-08-31 11:19:16,752:INFO:Declaring metric variables
2023-08-31 11:19:16,752:INFO:Importing untrained model
2023-08-31 11:19:16,752:INFO:Declaring custom model
2023-08-31 11:19:16,752:INFO:Ridge Regression Imported successfully
2023-08-31 11:19:16,752:INFO:Starting cross validation
2023-08-31 11:19:16,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:16,801:INFO:Calculating mean and std
2023-08-31 11:19:16,801:INFO:Creating metrics dataframe
2023-08-31 11:19:16,802:INFO:Finalizing model
2023-08-31 11:19:16,811:INFO:Uploading results into container
2023-08-31 11:19:16,812:INFO:Uploading model into container now
2023-08-31 11:19:16,812:INFO:_master_model_container: 5
2023-08-31 11:19:16,812:INFO:_display_container: 6
2023-08-31 11:19:16,812:INFO:Ridge(random_state=123)
2023-08-31 11:19:16,812:INFO:create_model() successfully completed......................................
2023-08-31 11:19:16,904:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:16,904:INFO:Ridge(random_state=123) result for RMSE is 1.6159
2023-08-31 11:19:16,905:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 1.6158
2023-08-31 11:19:16,905:INFO:Ridge(alpha=0.02, random_state=123) is best model
2023-08-31 11:19:16,905:INFO:choose_better completed
2023-08-31 11:19:16,909:INFO:_master_model_container: 5
2023-08-31 11:19:16,909:INFO:_display_container: 5
2023-08-31 11:19:16,909:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 11:19:16,909:INFO:tune_model() successfully completed......................................
2023-08-31 11:19:17,854:INFO:Initializing tune_model()
2023-08-31 11:19:17,855:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:19:17,855:INFO:Checking exceptions
2023-08-31 11:19:17,863:INFO:Copying training dataset
2023-08-31 11:19:17,865:INFO:Checking base model
2023-08-31 11:19:17,865:INFO:Base model : Bayesian Ridge
2023-08-31 11:19:17,867:INFO:Declaring metric variables
2023-08-31 11:19:17,869:INFO:Defining Hyperparameters
2023-08-31 11:19:17,977:INFO:Tuning with n_jobs=-1
2023-08-31 11:19:17,977:INFO:Initializing RandomizedSearchCV
2023-08-31 11:19:35,843:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-07, 'actual_estimator__fit_intercept': False, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.0005, 'actual_estimator__alpha_1': 0.3}
2023-08-31 11:19:35,843:INFO:Hyperparameter search completed
2023-08-31 11:19:35,843:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:35,844:INFO:Initializing create_model()
2023-08-31 11:19:35,844:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a0e73150>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 1e-07, 'fit_intercept': False, 'compute_score': True, 'alpha_2': 0.0005, 'alpha_1': 0.3})
2023-08-31 11:19:35,844:INFO:Checking exceptions
2023-08-31 11:19:35,844:INFO:Importing libraries
2023-08-31 11:19:35,844:INFO:Copying training dataset
2023-08-31 11:19:35,846:INFO:Defining folds
2023-08-31 11:19:35,846:INFO:Declaring metric variables
2023-08-31 11:19:35,848:INFO:Importing untrained model
2023-08-31 11:19:35,848:INFO:Declaring custom model
2023-08-31 11:19:35,849:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:19:35,852:INFO:Starting cross validation
2023-08-31 11:19:35,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:35,895:INFO:Calculating mean and std
2023-08-31 11:19:35,896:INFO:Creating metrics dataframe
2023-08-31 11:19:35,898:INFO:Finalizing model
2023-08-31 11:19:35,931:INFO:Uploading results into container
2023-08-31 11:19:35,932:INFO:Uploading model into container now
2023-08-31 11:19:35,933:INFO:_master_model_container: 6
2023-08-31 11:19:35,933:INFO:_display_container: 6
2023-08-31 11:19:35,934:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 11:19:35,934:INFO:create_model() successfully completed......................................
2023-08-31 11:19:36,062:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:36,062:INFO:choose_better activated
2023-08-31 11:19:36,064:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:36,065:INFO:Initializing create_model()
2023-08-31 11:19:36,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:36,065:INFO:Checking exceptions
2023-08-31 11:19:36,066:INFO:Importing libraries
2023-08-31 11:19:36,066:INFO:Copying training dataset
2023-08-31 11:19:36,070:INFO:Defining folds
2023-08-31 11:19:36,070:INFO:Declaring metric variables
2023-08-31 11:19:36,071:INFO:Importing untrained model
2023-08-31 11:19:36,071:INFO:Declaring custom model
2023-08-31 11:19:36,071:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:19:36,071:INFO:Starting cross validation
2023-08-31 11:19:36,072:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:36,156:INFO:Calculating mean and std
2023-08-31 11:19:36,157:INFO:Creating metrics dataframe
2023-08-31 11:19:36,158:INFO:Finalizing model
2023-08-31 11:19:36,183:INFO:Uploading results into container
2023-08-31 11:19:36,184:INFO:Uploading model into container now
2023-08-31 11:19:36,184:INFO:_master_model_container: 7
2023-08-31 11:19:36,184:INFO:_display_container: 7
2023-08-31 11:19:36,184:INFO:BayesianRidge()
2023-08-31 11:19:36,184:INFO:create_model() successfully completed......................................
2023-08-31 11:19:36,277:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:36,277:INFO:BayesianRidge() result for RMSE is 1.6159
2023-08-31 11:19:36,278:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) result for RMSE is 1.6157
2023-08-31 11:19:36,278:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) is best model
2023-08-31 11:19:36,278:INFO:choose_better completed
2023-08-31 11:19:36,286:INFO:_master_model_container: 7
2023-08-31 11:19:36,286:INFO:_display_container: 6
2023-08-31 11:19:36,287:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 11:19:36,287:INFO:tune_model() successfully completed......................................
2023-08-31 11:19:38,661:INFO:Initializing tune_model()
2023-08-31 11:19:38,662:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:19:38,662:INFO:Checking exceptions
2023-08-31 11:19:38,669:INFO:Copying training dataset
2023-08-31 11:19:38,671:INFO:Checking base model
2023-08-31 11:19:38,671:INFO:Base model : Least Angle Regression
2023-08-31 11:19:38,673:INFO:Declaring metric variables
2023-08-31 11:19:38,674:INFO:Defining Hyperparameters
2023-08-31 11:19:38,675:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 11:19:38,775:INFO:Tuning with n_jobs=-1
2023-08-31 11:19:38,775:INFO:Initializing GridSearchCV
2023-08-31 11:19:39,242:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 11:19:39,242:INFO:Hyperparameter search completed
2023-08-31 11:19:39,242:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:39,242:INFO:Initializing create_model()
2023-08-31 11:19:39,242:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a0e15b10>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 11:19:39,242:INFO:Checking exceptions
2023-08-31 11:19:39,242:INFO:Importing libraries
2023-08-31 11:19:39,242:INFO:Copying training dataset
2023-08-31 11:19:39,244:INFO:Defining folds
2023-08-31 11:19:39,244:INFO:Declaring metric variables
2023-08-31 11:19:39,246:INFO:Importing untrained model
2023-08-31 11:19:39,246:INFO:Declaring custom model
2023-08-31 11:19:39,247:INFO:Least Angle Regression Imported successfully
2023-08-31 11:19:39,249:INFO:Starting cross validation
2023-08-31 11:19:39,250:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:39,291:INFO:Calculating mean and std
2023-08-31 11:19:39,291:INFO:Creating metrics dataframe
2023-08-31 11:19:39,293:INFO:Finalizing model
2023-08-31 11:19:39,304:INFO:Uploading results into container
2023-08-31 11:19:39,305:INFO:Uploading model into container now
2023-08-31 11:19:39,305:INFO:_master_model_container: 8
2023-08-31 11:19:39,305:INFO:_display_container: 7
2023-08-31 11:19:39,305:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 11:19:39,305:INFO:create_model() successfully completed......................................
2023-08-31 11:19:39,392:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:39,393:INFO:choose_better activated
2023-08-31 11:19:39,394:INFO:SubProcess create_model() called ==================================
2023-08-31 11:19:39,395:INFO:Initializing create_model()
2023-08-31 11:19:39,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:19:39,395:INFO:Checking exceptions
2023-08-31 11:19:39,396:INFO:Importing libraries
2023-08-31 11:19:39,396:INFO:Copying training dataset
2023-08-31 11:19:39,398:INFO:Defining folds
2023-08-31 11:19:39,398:INFO:Declaring metric variables
2023-08-31 11:19:39,398:INFO:Importing untrained model
2023-08-31 11:19:39,398:INFO:Declaring custom model
2023-08-31 11:19:39,398:INFO:Least Angle Regression Imported successfully
2023-08-31 11:19:39,398:INFO:Starting cross validation
2023-08-31 11:19:39,399:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:19:39,444:INFO:Calculating mean and std
2023-08-31 11:19:39,444:INFO:Creating metrics dataframe
2023-08-31 11:19:39,445:INFO:Finalizing model
2023-08-31 11:19:39,454:INFO:Uploading results into container
2023-08-31 11:19:39,455:INFO:Uploading model into container now
2023-08-31 11:19:39,455:INFO:_master_model_container: 9
2023-08-31 11:19:39,455:INFO:_display_container: 8
2023-08-31 11:19:39,455:INFO:Lars(random_state=123)
2023-08-31 11:19:39,455:INFO:create_model() successfully completed......................................
2023-08-31 11:19:39,543:INFO:SubProcess create_model() end ==================================
2023-08-31 11:19:39,544:INFO:Lars(random_state=123) result for RMSE is 2.2877
2023-08-31 11:19:39,544:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 1.6155
2023-08-31 11:19:39,544:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 11:19:39,544:INFO:choose_better completed
2023-08-31 11:19:39,548:INFO:_master_model_container: 9
2023-08-31 11:19:39,548:INFO:_display_container: 7
2023-08-31 11:19:39,548:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 11:19:39,548:INFO:tune_model() successfully completed......................................
2023-08-31 11:19:41,018:INFO:Initializing plot_model()
2023-08-31 11:19:41,019:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 11:19:41,019:INFO:Checking exceptions
2023-08-31 11:19:41,021:INFO:Preloading libraries
2023-08-31 11:19:41,021:INFO:Copying training dataset
2023-08-31 11:19:41,021:INFO:Plot type: error
2023-08-31 11:19:41,057:INFO:Fitting Model
2023-08-31 11:19:41,057:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 11:19:41,058:INFO:Scoring test/hold-out set
2023-08-31 11:19:41,266:INFO:Visual Rendered Successfully
2023-08-31 11:19:41,386:INFO:plot_model() successfully completed......................................
2023-08-31 11:19:41,941:INFO:Initializing plot_model()
2023-08-31 11:19:41,941:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 11:19:41,942:INFO:Checking exceptions
2023-08-31 11:19:41,945:INFO:Preloading libraries
2023-08-31 11:19:41,945:INFO:Copying training dataset
2023-08-31 11:19:41,945:INFO:Plot type: feature
2023-08-31 11:19:42,006:INFO:Visual Rendered Successfully
2023-08-31 11:19:42,098:INFO:plot_model() successfully completed......................................
2023-08-31 11:19:44,673:INFO:Initializing finalize_model()
2023-08-31 11:19:44,674:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 11:19:44,674:INFO:Finalizing BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 11:19:44,676:INFO:Initializing create_model()
2023-08-31 11:19:44,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 11:19:44,676:INFO:Checking exceptions
2023-08-31 11:19:44,678:INFO:Importing libraries
2023-08-31 11:19:44,678:INFO:Copying training dataset
2023-08-31 11:19:44,678:INFO:Defining folds
2023-08-31 11:19:44,678:INFO:Declaring metric variables
2023-08-31 11:19:44,678:INFO:Importing untrained model
2023-08-31 11:19:44,678:INFO:Declaring custom model
2023-08-31 11:19:44,678:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:19:44,679:INFO:Cross validation set to False
2023-08-31 11:19:44,679:INFO:Fitting Model
2023-08-31 11:19:44,705:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 11:19:44,705:INFO:create_model() successfully completed......................................
2023-08-31 11:19:44,818:INFO:_master_model_container: 9
2023-08-31 11:19:44,818:INFO:_display_container: 7
2023-08-31 11:19:44,820:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 11:19:44,821:INFO:finalize_model() successfully completed......................................
2023-08-31 11:19:45,075:INFO:Initializing predict_model()
2023-08-31 11:19:45,076:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a072fcd0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x17904fec0>)
2023-08-31 11:19:45,076:INFO:Checking exceptions
2023-08-31 11:19:45,076:INFO:Preloading libraries
2023-08-31 11:19:45,077:INFO:Set up data.
2023-08-31 11:19:45,079:INFO:Set up index.
2023-08-31 11:20:29,826:INFO:PyCaret RegressionExperiment
2023-08-31 11:20:29,827:INFO:Logging name: reg-default-name
2023-08-31 11:20:29,827:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 11:20:29,827:INFO:version 3.0.2
2023-08-31 11:20:29,827:INFO:Initializing setup()
2023-08-31 11:20:29,827:INFO:self.USI: 694b
2023-08-31 11:20:29,827:INFO:self._variable_keys: {'html_param', 'data', 'X_test', 'memory', 'n_jobs_param', 'exp_id', 'logging_param', 'gpu_n_jobs_param', 'idx', 'X', 'target_param', 'y_test', 'X_train', 'log_plots_param', 'y', 'exp_name_log', 'gpu_param', '_available_plots', 'fold_generator', 'transform_target_param', 'pipeline', 'fold_shuffle_param', 'y_train', 'USI', 'fold_groups_param', 'seed', '_ml_usecase'}
2023-08-31 11:20:29,827:INFO:Checking environment
2023-08-31 11:20:29,827:INFO:python_version: 3.11.4
2023-08-31 11:20:29,827:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 11:20:29,827:INFO:machine: arm64
2023-08-31 11:20:29,827:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 11:20:29,827:INFO:Memory: svmem(total=17179869184, available=5895864320, percent=65.7, used=7906181120, free=115900416, active=5744934912, inactive=5773590528, wired=2161246208)
2023-08-31 11:20:29,827:INFO:Physical Core: 12
2023-08-31 11:20:29,827:INFO:Logical Core: 12
2023-08-31 11:20:29,827:INFO:Checking libraries
2023-08-31 11:20:29,827:INFO:System:
2023-08-31 11:20:29,827:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 11:20:29,827:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 11:20:29,827:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 11:20:29,827:INFO:PyCaret required dependencies:
2023-08-31 11:20:29,827:INFO:                 pip: 23.2.1
2023-08-31 11:20:29,827:INFO:          setuptools: 68.0.0
2023-08-31 11:20:29,827:INFO:             pycaret: 3.0.2
2023-08-31 11:20:29,827:INFO:             IPython: 8.14.0
2023-08-31 11:20:29,827:INFO:          ipywidgets: 8.1.0
2023-08-31 11:20:29,827:INFO:                tqdm: 4.64.1
2023-08-31 11:20:29,827:INFO:               numpy: 1.25.2
2023-08-31 11:20:29,827:INFO:              pandas: 1.5.0
2023-08-31 11:20:29,827:INFO:              jinja2: 3.1.2
2023-08-31 11:20:29,827:INFO:               scipy: 1.9.3
2023-08-31 11:20:29,827:INFO:              joblib: 1.2.0
2023-08-31 11:20:29,828:INFO:             sklearn: 1.2.2
2023-08-31 11:20:29,828:INFO:                pyod: 1.0.9
2023-08-31 11:20:29,828:INFO:            imblearn: 0.10.1
2023-08-31 11:20:29,828:INFO:   category_encoders: 2.6.1
2023-08-31 11:20:29,828:INFO:            lightgbm: 3.3.5
2023-08-31 11:20:29,828:INFO:               numba: 0.57.0
2023-08-31 11:20:29,828:INFO:            requests: 2.28.0
2023-08-31 11:20:29,828:INFO:          matplotlib: 3.6.2
2023-08-31 11:20:29,828:INFO:          scikitplot: 0.3.7
2023-08-31 11:20:29,828:INFO:         yellowbrick: 1.5
2023-08-31 11:20:29,828:INFO:              plotly: 5.9.0
2023-08-31 11:20:29,828:INFO:             kaleido: 0.2.1
2023-08-31 11:20:29,828:INFO:         statsmodels: 0.13.5
2023-08-31 11:20:29,828:INFO:              sktime: 0.17.0
2023-08-31 11:20:29,828:INFO:               tbats: 1.1.3
2023-08-31 11:20:29,828:INFO:            pmdarima: 2.0.3
2023-08-31 11:20:29,828:INFO:              psutil: 5.9.0
2023-08-31 11:20:29,828:INFO:PyCaret optional dependencies:
2023-08-31 11:20:29,828:INFO:                shap: Not installed
2023-08-31 11:20:29,828:INFO:           interpret: Not installed
2023-08-31 11:20:29,828:INFO:                umap: Not installed
2023-08-31 11:20:29,828:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 11:20:29,828:INFO:  explainerdashboard: Not installed
2023-08-31 11:20:29,828:INFO:             autoviz: Not installed
2023-08-31 11:20:29,828:INFO:           fairlearn: Not installed
2023-08-31 11:20:29,828:INFO:             xgboost: Not installed
2023-08-31 11:20:29,828:INFO:            catboost: Not installed
2023-08-31 11:20:29,828:INFO:              kmodes: Not installed
2023-08-31 11:20:29,828:INFO:             mlxtend: Not installed
2023-08-31 11:20:29,828:INFO:       statsforecast: Not installed
2023-08-31 11:20:29,828:INFO:        tune_sklearn: Not installed
2023-08-31 11:20:29,828:INFO:                 ray: Not installed
2023-08-31 11:20:29,828:INFO:            hyperopt: Not installed
2023-08-31 11:20:29,828:INFO:              optuna: Not installed
2023-08-31 11:20:29,828:INFO:               skopt: Not installed
2023-08-31 11:20:29,828:INFO:              mlflow: Not installed
2023-08-31 11:20:29,828:INFO:              gradio: Not installed
2023-08-31 11:20:29,828:INFO:             fastapi: Not installed
2023-08-31 11:20:29,828:INFO:             uvicorn: Not installed
2023-08-31 11:20:29,828:INFO:              m2cgen: Not installed
2023-08-31 11:20:29,828:INFO:           evidently: Not installed
2023-08-31 11:20:29,828:INFO:               fugue: Not installed
2023-08-31 11:20:29,828:INFO:           streamlit: Not installed
2023-08-31 11:20:29,828:INFO:             prophet: Not installed
2023-08-31 11:20:29,828:INFO:None
2023-08-31 11:20:29,828:INFO:Set up data.
2023-08-31 11:20:29,831:INFO:Set up train/test split.
2023-08-31 11:20:29,833:INFO:Set up index.
2023-08-31 11:20:29,833:INFO:Set up folding strategy.
2023-08-31 11:20:29,833:INFO:Assigning column types.
2023-08-31 11:20:29,834:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 11:20:29,835:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,837:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,840:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,867:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,890:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,890:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,893:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,895:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,944:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 11:20:29,946:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,948:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,996:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:29,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:29,999:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,001:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,028:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,050:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 11:20:30,054:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,132:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,153:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,153:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 11:20:30,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,236:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,257:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,257:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 11:20:30,288:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,308:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,308:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,338:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 11:20:30,359:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,359:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 11:20:30,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,466:INFO:Preparing preprocessing pipeline...
2023-08-31 11:20:30,466:INFO:Set up simple imputation.
2023-08-31 11:20:30,475:INFO:Finished creating preprocessing pipeline.
2023-08-31 11:20:30,476:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA7'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 11:20:30,476:INFO:Creating final display dataframe.
2023-08-31 11:20:30,499:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             SMA30
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              694b
2023-08-31 11:20:30,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,607:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 11:20:30,608:INFO:setup() successfully completed in 0.78s...............
2023-08-31 11:20:48,096:INFO:Initializing create_model()
2023-08-31 11:20:48,096:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:20:48,097:INFO:Checking exceptions
2023-08-31 11:20:48,103:INFO:Importing libraries
2023-08-31 11:20:48,103:INFO:Copying training dataset
2023-08-31 11:20:48,106:INFO:Defining folds
2023-08-31 11:20:48,107:INFO:Declaring metric variables
2023-08-31 11:20:48,108:INFO:Importing untrained model
2023-08-31 11:20:48,109:INFO:Ridge Regression Imported successfully
2023-08-31 11:20:48,112:INFO:Starting cross validation
2023-08-31 11:20:48,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:20:48,164:INFO:Calculating mean and std
2023-08-31 11:20:48,164:INFO:Creating metrics dataframe
2023-08-31 11:20:48,167:INFO:Finalizing model
2023-08-31 11:20:48,177:INFO:Uploading results into container
2023-08-31 11:20:48,178:INFO:Uploading model into container now
2023-08-31 11:20:48,182:INFO:_master_model_container: 1
2023-08-31 11:20:48,182:INFO:_display_container: 2
2023-08-31 11:20:48,182:INFO:Ridge(random_state=123)
2023-08-31 11:20:48,182:INFO:create_model() successfully completed......................................
2023-08-31 11:21:03,390:INFO:Initializing create_model()
2023-08-31 11:21:03,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:21:03,391:INFO:Checking exceptions
2023-08-31 11:21:03,397:INFO:Importing libraries
2023-08-31 11:21:03,397:INFO:Copying training dataset
2023-08-31 11:21:03,401:INFO:Defining folds
2023-08-31 11:21:03,401:INFO:Declaring metric variables
2023-08-31 11:21:03,403:INFO:Importing untrained model
2023-08-31 11:21:03,405:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:21:03,410:INFO:Starting cross validation
2023-08-31 11:21:03,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:21:03,465:INFO:Calculating mean and std
2023-08-31 11:21:03,465:INFO:Creating metrics dataframe
2023-08-31 11:21:03,468:INFO:Finalizing model
2023-08-31 11:21:03,543:INFO:Uploading results into container
2023-08-31 11:21:03,544:INFO:Uploading model into container now
2023-08-31 11:21:03,553:INFO:_master_model_container: 2
2023-08-31 11:21:03,553:INFO:_display_container: 3
2023-08-31 11:21:03,554:INFO:BayesianRidge()
2023-08-31 11:21:03,554:INFO:create_model() successfully completed......................................
2023-08-31 11:21:18,013:INFO:Initializing create_model()
2023-08-31 11:21:18,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:21:18,014:INFO:Checking exceptions
2023-08-31 11:21:18,020:INFO:Importing libraries
2023-08-31 11:21:18,020:INFO:Copying training dataset
2023-08-31 11:21:18,024:INFO:Defining folds
2023-08-31 11:21:18,024:INFO:Declaring metric variables
2023-08-31 11:21:18,026:INFO:Importing untrained model
2023-08-31 11:21:18,027:INFO:Least Angle Regression Imported successfully
2023-08-31 11:21:18,031:INFO:Starting cross validation
2023-08-31 11:21:18,031:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:21:18,090:INFO:Calculating mean and std
2023-08-31 11:21:18,090:INFO:Creating metrics dataframe
2023-08-31 11:21:18,093:INFO:Finalizing model
2023-08-31 11:21:18,103:INFO:Uploading results into container
2023-08-31 11:21:18,104:INFO:Uploading model into container now
2023-08-31 11:21:18,107:INFO:_master_model_container: 3
2023-08-31 11:21:18,107:INFO:_display_container: 4
2023-08-31 11:21:18,107:INFO:Lars(random_state=123)
2023-08-31 11:21:18,108:INFO:create_model() successfully completed......................................
2023-08-31 11:21:58,276:INFO:Initializing tune_model()
2023-08-31 11:21:58,276:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:21:58,276:INFO:Checking exceptions
2023-08-31 11:21:58,284:INFO:Copying training dataset
2023-08-31 11:21:58,286:INFO:Checking base model
2023-08-31 11:21:58,287:INFO:Base model : Ridge Regression
2023-08-31 11:21:58,288:INFO:Declaring metric variables
2023-08-31 11:21:58,290:INFO:Defining Hyperparameters
2023-08-31 11:21:58,401:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 11:21:58,401:INFO:Tuning with n_jobs=-1
2023-08-31 11:21:58,401:INFO:Initializing RandomizedSearchCV
2023-08-31 11:21:58,403:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 11:21:58,541:INFO:best_params: {'actual_estimator__alpha': 0.03}
2023-08-31 11:21:58,541:INFO:Hyperparameter search completed
2023-08-31 11:21:58,541:INFO:SubProcess create_model() called ==================================
2023-08-31 11:21:58,541:INFO:Initializing create_model()
2023-08-31 11:21:58,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a070a750>, model_only=True, return_train_score=False, kwargs={'alpha': 0.03})
2023-08-31 11:21:58,541:INFO:Checking exceptions
2023-08-31 11:21:58,541:INFO:Importing libraries
2023-08-31 11:21:58,541:INFO:Copying training dataset
2023-08-31 11:21:58,543:INFO:Defining folds
2023-08-31 11:21:58,543:INFO:Declaring metric variables
2023-08-31 11:21:58,545:INFO:Importing untrained model
2023-08-31 11:21:58,545:INFO:Declaring custom model
2023-08-31 11:21:58,547:INFO:Ridge Regression Imported successfully
2023-08-31 11:21:58,549:INFO:Starting cross validation
2023-08-31 11:21:58,549:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:21:58,592:INFO:Calculating mean and std
2023-08-31 11:21:58,592:INFO:Creating metrics dataframe
2023-08-31 11:21:58,595:INFO:Finalizing model
2023-08-31 11:21:58,605:INFO:Uploading results into container
2023-08-31 11:21:58,605:INFO:Uploading model into container now
2023-08-31 11:21:58,606:INFO:_master_model_container: 4
2023-08-31 11:21:58,606:INFO:_display_container: 5
2023-08-31 11:21:58,606:INFO:Ridge(alpha=0.03, random_state=123)
2023-08-31 11:21:58,606:INFO:create_model() successfully completed......................................
2023-08-31 11:21:58,705:INFO:SubProcess create_model() end ==================================
2023-08-31 11:21:58,706:INFO:choose_better activated
2023-08-31 11:21:58,707:INFO:SubProcess create_model() called ==================================
2023-08-31 11:21:58,708:INFO:Initializing create_model()
2023-08-31 11:21:58,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:21:58,708:INFO:Checking exceptions
2023-08-31 11:21:58,708:INFO:Importing libraries
2023-08-31 11:21:58,709:INFO:Copying training dataset
2023-08-31 11:21:58,711:INFO:Defining folds
2023-08-31 11:21:58,711:INFO:Declaring metric variables
2023-08-31 11:21:58,711:INFO:Importing untrained model
2023-08-31 11:21:58,711:INFO:Declaring custom model
2023-08-31 11:21:58,711:INFO:Ridge Regression Imported successfully
2023-08-31 11:21:58,711:INFO:Starting cross validation
2023-08-31 11:21:58,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:21:58,756:INFO:Calculating mean and std
2023-08-31 11:21:58,757:INFO:Creating metrics dataframe
2023-08-31 11:21:58,758:INFO:Finalizing model
2023-08-31 11:21:58,766:INFO:Uploading results into container
2023-08-31 11:21:58,767:INFO:Uploading model into container now
2023-08-31 11:21:58,767:INFO:_master_model_container: 5
2023-08-31 11:21:58,767:INFO:_display_container: 6
2023-08-31 11:21:58,767:INFO:Ridge(random_state=123)
2023-08-31 11:21:58,767:INFO:create_model() successfully completed......................................
2023-08-31 11:21:58,867:INFO:SubProcess create_model() end ==================================
2023-08-31 11:21:58,867:INFO:Ridge(random_state=123) result for RMSE is 9.0877
2023-08-31 11:21:58,867:INFO:Ridge(alpha=0.03, random_state=123) result for RMSE is 9.0877
2023-08-31 11:21:58,867:INFO:Ridge(random_state=123) is best model
2023-08-31 11:21:58,868:INFO:choose_better completed
2023-08-31 11:21:58,868:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 11:21:58,872:INFO:_master_model_container: 5
2023-08-31 11:21:58,872:INFO:_display_container: 5
2023-08-31 11:21:58,872:INFO:Ridge(random_state=123)
2023-08-31 11:21:58,872:INFO:tune_model() successfully completed......................................
2023-08-31 11:22:25,646:INFO:Initializing tune_model()
2023-08-31 11:22:25,647:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:22:25,647:INFO:Checking exceptions
2023-08-31 11:22:25,655:INFO:Copying training dataset
2023-08-31 11:22:25,657:INFO:Checking base model
2023-08-31 11:22:25,658:INFO:Base model : Bayesian Ridge
2023-08-31 11:22:25,659:INFO:Declaring metric variables
2023-08-31 11:22:25,661:INFO:Defining Hyperparameters
2023-08-31 11:22:25,776:INFO:Tuning with n_jobs=-1
2023-08-31 11:22:25,777:INFO:Initializing RandomizedSearchCV
2023-08-31 11:22:43,822:INFO:best_params: {'actual_estimator__lambda_2': 0.05, 'actual_estimator__lambda_1': 0.3, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.0001}
2023-08-31 11:22:43,822:INFO:Hyperparameter search completed
2023-08-31 11:22:43,823:INFO:SubProcess create_model() called ==================================
2023-08-31 11:22:43,823:INFO:Initializing create_model()
2023-08-31 11:22:43,823:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a070a750>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.05, 'lambda_1': 0.3, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.3, 'alpha_1': 0.0001})
2023-08-31 11:22:43,823:INFO:Checking exceptions
2023-08-31 11:22:43,823:INFO:Importing libraries
2023-08-31 11:22:43,823:INFO:Copying training dataset
2023-08-31 11:22:43,826:INFO:Defining folds
2023-08-31 11:22:43,826:INFO:Declaring metric variables
2023-08-31 11:22:43,827:INFO:Importing untrained model
2023-08-31 11:22:43,827:INFO:Declaring custom model
2023-08-31 11:22:43,829:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:22:43,831:INFO:Starting cross validation
2023-08-31 11:22:43,832:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:22:43,877:INFO:Calculating mean and std
2023-08-31 11:22:43,877:INFO:Creating metrics dataframe
2023-08-31 11:22:43,880:INFO:Finalizing model
2023-08-31 11:22:44,010:INFO:Uploading results into container
2023-08-31 11:22:44,011:INFO:Uploading model into container now
2023-08-31 11:22:44,012:INFO:_master_model_container: 6
2023-08-31 11:22:44,012:INFO:_display_container: 6
2023-08-31 11:22:44,013:INFO:BayesianRidge(alpha_1=0.0001, alpha_2=0.3, lambda_1=0.3, lambda_2=0.05)
2023-08-31 11:22:44,013:INFO:create_model() successfully completed......................................
2023-08-31 11:22:44,170:INFO:SubProcess create_model() end ==================================
2023-08-31 11:22:44,170:INFO:choose_better activated
2023-08-31 11:22:44,172:INFO:SubProcess create_model() called ==================================
2023-08-31 11:22:44,172:INFO:Initializing create_model()
2023-08-31 11:22:44,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:22:44,173:INFO:Checking exceptions
2023-08-31 11:22:44,174:INFO:Importing libraries
2023-08-31 11:22:44,174:INFO:Copying training dataset
2023-08-31 11:22:44,176:INFO:Defining folds
2023-08-31 11:22:44,176:INFO:Declaring metric variables
2023-08-31 11:22:44,176:INFO:Importing untrained model
2023-08-31 11:22:44,176:INFO:Declaring custom model
2023-08-31 11:22:44,176:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:22:44,176:INFO:Starting cross validation
2023-08-31 11:22:44,176:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:22:44,221:INFO:Calculating mean and std
2023-08-31 11:22:44,222:INFO:Creating metrics dataframe
2023-08-31 11:22:44,222:INFO:Finalizing model
2023-08-31 11:22:44,258:INFO:Uploading results into container
2023-08-31 11:22:44,259:INFO:Uploading model into container now
2023-08-31 11:22:44,259:INFO:_master_model_container: 7
2023-08-31 11:22:44,259:INFO:_display_container: 7
2023-08-31 11:22:44,259:INFO:BayesianRidge()
2023-08-31 11:22:44,259:INFO:create_model() successfully completed......................................
2023-08-31 11:22:44,397:INFO:SubProcess create_model() end ==================================
2023-08-31 11:22:44,397:INFO:BayesianRidge() result for RMSE is 9.0875
2023-08-31 11:22:44,397:INFO:BayesianRidge(alpha_1=0.0001, alpha_2=0.3, lambda_1=0.3, lambda_2=0.05) result for RMSE is 9.0875
2023-08-31 11:22:44,397:INFO:BayesianRidge() is best model
2023-08-31 11:22:44,397:INFO:choose_better completed
2023-08-31 11:22:44,398:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 11:22:44,406:INFO:_master_model_container: 7
2023-08-31 11:22:44,406:INFO:_display_container: 6
2023-08-31 11:22:44,407:INFO:BayesianRidge()
2023-08-31 11:22:44,407:INFO:tune_model() successfully completed......................................
2023-08-31 11:23:17,655:INFO:Initializing tune_model()
2023-08-31 11:23:17,655:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 11:23:17,655:INFO:Checking exceptions
2023-08-31 11:23:17,663:INFO:Copying training dataset
2023-08-31 11:23:17,665:INFO:Checking base model
2023-08-31 11:23:17,665:INFO:Base model : Least Angle Regression
2023-08-31 11:23:17,666:INFO:Declaring metric variables
2023-08-31 11:23:17,668:INFO:Defining Hyperparameters
2023-08-31 11:23:17,668:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 11:23:17,779:INFO:Tuning with n_jobs=-1
2023-08-31 11:23:17,780:INFO:Initializing GridSearchCV
2023-08-31 11:23:18,236:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 11:23:18,236:INFO:Hyperparameter search completed
2023-08-31 11:23:18,236:INFO:SubProcess create_model() called ==================================
2023-08-31 11:23:18,236:INFO:Initializing create_model()
2023-08-31 11:23:18,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2a070a750>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 11:23:18,236:INFO:Checking exceptions
2023-08-31 11:23:18,236:INFO:Importing libraries
2023-08-31 11:23:18,236:INFO:Copying training dataset
2023-08-31 11:23:18,238:INFO:Defining folds
2023-08-31 11:23:18,238:INFO:Declaring metric variables
2023-08-31 11:23:18,240:INFO:Importing untrained model
2023-08-31 11:23:18,240:INFO:Declaring custom model
2023-08-31 11:23:18,241:INFO:Least Angle Regression Imported successfully
2023-08-31 11:23:18,244:INFO:Starting cross validation
2023-08-31 11:23:18,244:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:23:18,287:INFO:Calculating mean and std
2023-08-31 11:23:18,287:INFO:Creating metrics dataframe
2023-08-31 11:23:18,290:INFO:Finalizing model
2023-08-31 11:23:18,302:INFO:Uploading results into container
2023-08-31 11:23:18,302:INFO:Uploading model into container now
2023-08-31 11:23:18,302:INFO:_master_model_container: 8
2023-08-31 11:23:18,302:INFO:_display_container: 7
2023-08-31 11:23:18,303:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 11:23:18,303:INFO:create_model() successfully completed......................................
2023-08-31 11:23:18,399:INFO:SubProcess create_model() end ==================================
2023-08-31 11:23:18,399:INFO:choose_better activated
2023-08-31 11:23:18,401:INFO:SubProcess create_model() called ==================================
2023-08-31 11:23:18,401:INFO:Initializing create_model()
2023-08-31 11:23:18,401:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 11:23:18,401:INFO:Checking exceptions
2023-08-31 11:23:18,402:INFO:Importing libraries
2023-08-31 11:23:18,402:INFO:Copying training dataset
2023-08-31 11:23:18,404:INFO:Defining folds
2023-08-31 11:23:18,404:INFO:Declaring metric variables
2023-08-31 11:23:18,404:INFO:Importing untrained model
2023-08-31 11:23:18,404:INFO:Declaring custom model
2023-08-31 11:23:18,404:INFO:Least Angle Regression Imported successfully
2023-08-31 11:23:18,404:INFO:Starting cross validation
2023-08-31 11:23:18,405:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 11:23:18,450:INFO:Calculating mean and std
2023-08-31 11:23:18,450:INFO:Creating metrics dataframe
2023-08-31 11:23:18,451:INFO:Finalizing model
2023-08-31 11:23:18,461:INFO:Uploading results into container
2023-08-31 11:23:18,461:INFO:Uploading model into container now
2023-08-31 11:23:18,461:INFO:_master_model_container: 9
2023-08-31 11:23:18,461:INFO:_display_container: 8
2023-08-31 11:23:18,461:INFO:Lars(random_state=123)
2023-08-31 11:23:18,461:INFO:create_model() successfully completed......................................
2023-08-31 11:23:18,560:INFO:SubProcess create_model() end ==================================
2023-08-31 11:23:18,560:INFO:Lars(random_state=123) result for RMSE is 11.1381
2023-08-31 11:23:18,561:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 11.1354
2023-08-31 11:23:18,561:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 11:23:18,561:INFO:choose_better completed
2023-08-31 11:23:18,565:INFO:_master_model_container: 9
2023-08-31 11:23:18,565:INFO:_display_container: 7
2023-08-31 11:23:18,565:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 11:23:18,566:INFO:tune_model() successfully completed......................................
2023-08-31 11:24:10,132:INFO:Initializing plot_model()
2023-08-31 11:24:10,132:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 11:24:10,132:INFO:Checking exceptions
2023-08-31 11:24:10,135:INFO:Preloading libraries
2023-08-31 11:24:10,135:INFO:Copying training dataset
2023-08-31 11:24:10,135:INFO:Plot type: error
2023-08-31 11:24:10,161:INFO:Fitting Model
2023-08-31 11:24:10,161:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 11:24:10,161:INFO:Scoring test/hold-out set
2023-08-31 11:24:10,273:INFO:Visual Rendered Successfully
2023-08-31 11:24:10,400:INFO:plot_model() successfully completed......................................
2023-08-31 11:24:21,626:INFO:Initializing plot_model()
2023-08-31 11:24:21,626:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 11:24:21,626:INFO:Checking exceptions
2023-08-31 11:24:21,629:INFO:Preloading libraries
2023-08-31 11:24:21,629:INFO:Copying training dataset
2023-08-31 11:24:21,629:INFO:Plot type: feature
2023-08-31 11:24:21,691:INFO:Visual Rendered Successfully
2023-08-31 11:24:21,786:INFO:plot_model() successfully completed......................................
2023-08-31 11:24:50,925:INFO:Initializing finalize_model()
2023-08-31 11:24:50,925:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 11:24:50,925:INFO:Finalizing BayesianRidge()
2023-08-31 11:24:50,927:INFO:Initializing create_model()
2023-08-31 11:24:50,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 11:24:50,927:INFO:Checking exceptions
2023-08-31 11:24:50,928:INFO:Importing libraries
2023-08-31 11:24:50,928:INFO:Copying training dataset
2023-08-31 11:24:50,928:INFO:Defining folds
2023-08-31 11:24:50,928:INFO:Declaring metric variables
2023-08-31 11:24:50,928:INFO:Importing untrained model
2023-08-31 11:24:50,928:INFO:Declaring custom model
2023-08-31 11:24:50,929:INFO:Bayesian Ridge Imported successfully
2023-08-31 11:24:50,929:INFO:Cross validation set to False
2023-08-31 11:24:50,929:INFO:Fitting Model
2023-08-31 11:24:50,953:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA7'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 11:24:50,953:INFO:create_model() successfully completed......................................
2023-08-31 11:24:51,079:INFO:_master_model_container: 9
2023-08-31 11:24:51,079:INFO:_display_container: 7
2023-08-31 11:24:51,081:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA7'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 11:24:51,081:INFO:finalize_model() successfully completed......................................
2023-08-31 11:25:05,359:INFO:Initializing predict_model()
2023-08-31 11:25:05,359:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2a0c63f50>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA7'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2a6dfd8a0>)
2023-08-31 11:25:05,359:INFO:Checking exceptions
2023-08-31 11:25:05,359:INFO:Preloading libraries
2023-08-31 11:25:05,360:INFO:Set up data.
2023-08-31 11:25:05,363:INFO:Set up index.
2023-08-31 16:21:41,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:21:41,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:21:41,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:21:41,457:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:21:42,155:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 16:21:42,356:INFO:PyCaret RegressionExperiment
2023-08-31 16:21:42,356:INFO:Logging name: reg-default-name
2023-08-31 16:21:42,356:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 16:21:42,357:INFO:version 3.0.2
2023-08-31 16:21:42,357:INFO:Initializing setup()
2023-08-31 16:21:42,357:INFO:self.USI: 8aaa
2023-08-31 16:21:42,357:INFO:self._variable_keys: {'seed', 'pipeline', 'X_train', 'y_train', 'fold_groups_param', 'y_test', 'USI', 'logging_param', 'X_test', 'html_param', '_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'target_param', 'log_plots_param', 'gpu_param', 'y', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'idx', 'exp_name_log', 'exp_id', 'X', 'memory'}
2023-08-31 16:21:42,357:INFO:Checking environment
2023-08-31 16:21:42,357:INFO:python_version: 3.11.4
2023-08-31 16:21:42,357:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 16:21:42,357:INFO:machine: arm64
2023-08-31 16:21:42,357:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:21:42,357:INFO:Memory: svmem(total=17179869184, available=4533714944, percent=73.6, used=7002570752, free=104349696, active=4443226112, inactive=4382408704, wired=2559344640)
2023-08-31 16:21:42,357:INFO:Physical Core: 12
2023-08-31 16:21:42,357:INFO:Logical Core: 12
2023-08-31 16:21:42,357:INFO:Checking libraries
2023-08-31 16:21:42,357:INFO:System:
2023-08-31 16:21:42,357:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 16:21:42,357:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 16:21:42,357:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:21:42,357:INFO:PyCaret required dependencies:
2023-08-31 16:21:42,357:INFO:                 pip: 23.2.1
2023-08-31 16:21:42,357:INFO:          setuptools: 68.0.0
2023-08-31 16:21:42,357:INFO:             pycaret: 3.0.2
2023-08-31 16:21:42,357:INFO:             IPython: 8.14.0
2023-08-31 16:21:42,357:INFO:          ipywidgets: 8.1.0
2023-08-31 16:21:42,357:INFO:                tqdm: 4.64.1
2023-08-31 16:21:42,357:INFO:               numpy: 1.25.2
2023-08-31 16:21:42,357:INFO:              pandas: 1.5.0
2023-08-31 16:21:42,357:INFO:              jinja2: 3.1.2
2023-08-31 16:21:42,357:INFO:               scipy: 1.9.3
2023-08-31 16:21:42,357:INFO:              joblib: 1.2.0
2023-08-31 16:21:42,357:INFO:             sklearn: 1.2.2
2023-08-31 16:21:42,357:INFO:                pyod: 1.0.9
2023-08-31 16:21:42,357:INFO:            imblearn: 0.10.1
2023-08-31 16:21:42,357:INFO:   category_encoders: 2.6.1
2023-08-31 16:21:42,357:INFO:            lightgbm: 3.3.5
2023-08-31 16:21:42,357:INFO:               numba: 0.57.0
2023-08-31 16:21:42,357:INFO:            requests: 2.28.0
2023-08-31 16:21:42,357:INFO:          matplotlib: 3.6.2
2023-08-31 16:21:42,357:INFO:          scikitplot: 0.3.7
2023-08-31 16:21:42,357:INFO:         yellowbrick: 1.5
2023-08-31 16:21:42,357:INFO:              plotly: 5.9.0
2023-08-31 16:21:42,357:INFO:             kaleido: 0.2.1
2023-08-31 16:21:42,357:INFO:         statsmodels: 0.13.5
2023-08-31 16:21:42,357:INFO:              sktime: 0.17.0
2023-08-31 16:21:42,357:INFO:               tbats: 1.1.3
2023-08-31 16:21:42,357:INFO:            pmdarima: 2.0.3
2023-08-31 16:21:42,357:INFO:              psutil: 5.9.0
2023-08-31 16:21:42,357:INFO:PyCaret optional dependencies:
2023-08-31 16:21:42,364:INFO:                shap: Not installed
2023-08-31 16:21:42,364:INFO:           interpret: Not installed
2023-08-31 16:21:42,365:INFO:                umap: Not installed
2023-08-31 16:21:42,365:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 16:21:42,365:INFO:  explainerdashboard: Not installed
2023-08-31 16:21:42,365:INFO:             autoviz: Not installed
2023-08-31 16:21:42,365:INFO:           fairlearn: Not installed
2023-08-31 16:21:42,365:INFO:             xgboost: Not installed
2023-08-31 16:21:42,365:INFO:            catboost: Not installed
2023-08-31 16:21:42,365:INFO:              kmodes: Not installed
2023-08-31 16:21:42,365:INFO:             mlxtend: Not installed
2023-08-31 16:21:42,365:INFO:       statsforecast: Not installed
2023-08-31 16:21:42,365:INFO:        tune_sklearn: Not installed
2023-08-31 16:21:42,365:INFO:                 ray: Not installed
2023-08-31 16:21:42,365:INFO:            hyperopt: Not installed
2023-08-31 16:21:42,365:INFO:              optuna: Not installed
2023-08-31 16:21:42,365:INFO:               skopt: Not installed
2023-08-31 16:21:42,365:INFO:              mlflow: Not installed
2023-08-31 16:21:42,365:INFO:              gradio: Not installed
2023-08-31 16:21:42,365:INFO:             fastapi: Not installed
2023-08-31 16:21:42,365:INFO:             uvicorn: Not installed
2023-08-31 16:21:42,365:INFO:              m2cgen: Not installed
2023-08-31 16:21:42,365:INFO:           evidently: Not installed
2023-08-31 16:21:42,365:INFO:               fugue: Not installed
2023-08-31 16:21:42,365:INFO:           streamlit: Not installed
2023-08-31 16:21:42,365:INFO:             prophet: Not installed
2023-08-31 16:21:42,365:INFO:None
2023-08-31 16:21:42,365:INFO:Set up data.
2023-08-31 16:21:42,367:INFO:Set up train/test split.
2023-08-31 16:22:01,469:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-08-31 16:22:04,474:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-08-31 16:23:22,513:INFO:PyCaret RegressionExperiment
2023-08-31 16:23:22,515:INFO:Logging name: reg-default-name
2023-08-31 16:23:22,515:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 16:23:22,515:INFO:version 3.0.2
2023-08-31 16:23:22,515:INFO:Initializing setup()
2023-08-31 16:23:22,515:INFO:self.USI: aedc
2023-08-31 16:23:22,515:INFO:self._variable_keys: {'seed', 'pipeline', 'X_train', 'y_train', 'fold_groups_param', 'y_test', 'USI', 'logging_param', 'X_test', 'html_param', '_available_plots', 'n_jobs_param', 'fold_shuffle_param', 'data', '_ml_usecase', 'target_param', 'log_plots_param', 'gpu_param', 'y', 'fold_generator', 'transform_target_param', 'gpu_n_jobs_param', 'idx', 'exp_name_log', 'exp_id', 'X', 'memory'}
2023-08-31 16:23:22,515:INFO:Checking environment
2023-08-31 16:23:22,515:INFO:python_version: 3.11.4
2023-08-31 16:23:22,515:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 16:23:22,515:INFO:machine: arm64
2023-08-31 16:23:22,515:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:23:22,515:INFO:Memory: svmem(total=17179869184, available=4638588928, percent=73.0, used=6804062208, free=296452096, active=4369645568, inactive=4334075904, wired=2434416640)
2023-08-31 16:23:22,515:INFO:Physical Core: 12
2023-08-31 16:23:22,515:INFO:Logical Core: 12
2023-08-31 16:23:22,515:INFO:Checking libraries
2023-08-31 16:23:22,515:INFO:System:
2023-08-31 16:23:22,515:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 16:23:22,515:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 16:23:22,515:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:23:22,515:INFO:PyCaret required dependencies:
2023-08-31 16:23:22,515:INFO:                 pip: 23.2.1
2023-08-31 16:23:22,515:INFO:          setuptools: 68.0.0
2023-08-31 16:23:22,515:INFO:             pycaret: 3.0.2
2023-08-31 16:23:22,515:INFO:             IPython: 8.14.0
2023-08-31 16:23:22,515:INFO:          ipywidgets: 8.1.0
2023-08-31 16:23:22,515:INFO:                tqdm: 4.64.1
2023-08-31 16:23:22,515:INFO:               numpy: 1.25.2
2023-08-31 16:23:22,515:INFO:              pandas: 1.5.0
2023-08-31 16:23:22,515:INFO:              jinja2: 3.1.2
2023-08-31 16:23:22,515:INFO:               scipy: 1.9.3
2023-08-31 16:23:22,516:INFO:              joblib: 1.2.0
2023-08-31 16:23:22,516:INFO:             sklearn: 1.2.2
2023-08-31 16:23:22,516:INFO:                pyod: 1.0.9
2023-08-31 16:23:22,516:INFO:            imblearn: 0.10.1
2023-08-31 16:23:22,516:INFO:   category_encoders: 2.6.1
2023-08-31 16:23:22,516:INFO:            lightgbm: 3.3.5
2023-08-31 16:23:22,516:INFO:               numba: 0.57.0
2023-08-31 16:23:22,516:INFO:            requests: 2.28.0
2023-08-31 16:23:22,516:INFO:          matplotlib: 3.6.2
2023-08-31 16:23:22,516:INFO:          scikitplot: 0.3.7
2023-08-31 16:23:22,516:INFO:         yellowbrick: 1.5
2023-08-31 16:23:22,516:INFO:              plotly: 5.9.0
2023-08-31 16:23:22,516:INFO:             kaleido: 0.2.1
2023-08-31 16:23:22,516:INFO:         statsmodels: 0.13.5
2023-08-31 16:23:22,516:INFO:              sktime: 0.17.0
2023-08-31 16:23:22,516:INFO:               tbats: 1.1.3
2023-08-31 16:23:22,516:INFO:            pmdarima: 2.0.3
2023-08-31 16:23:22,516:INFO:              psutil: 5.9.0
2023-08-31 16:23:22,516:INFO:PyCaret optional dependencies:
2023-08-31 16:23:22,516:INFO:                shap: Not installed
2023-08-31 16:23:22,516:INFO:           interpret: Not installed
2023-08-31 16:23:22,516:INFO:                umap: Not installed
2023-08-31 16:23:22,516:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 16:23:22,516:INFO:  explainerdashboard: Not installed
2023-08-31 16:23:22,516:INFO:             autoviz: Not installed
2023-08-31 16:23:22,516:INFO:           fairlearn: Not installed
2023-08-31 16:23:22,516:INFO:             xgboost: Not installed
2023-08-31 16:23:22,516:INFO:            catboost: Not installed
2023-08-31 16:23:22,516:INFO:              kmodes: Not installed
2023-08-31 16:23:22,516:INFO:             mlxtend: Not installed
2023-08-31 16:23:22,516:INFO:       statsforecast: Not installed
2023-08-31 16:23:22,516:INFO:        tune_sklearn: Not installed
2023-08-31 16:23:22,516:INFO:                 ray: Not installed
2023-08-31 16:23:22,516:INFO:            hyperopt: Not installed
2023-08-31 16:23:22,516:INFO:              optuna: Not installed
2023-08-31 16:23:22,516:INFO:               skopt: Not installed
2023-08-31 16:23:22,516:INFO:              mlflow: Not installed
2023-08-31 16:23:22,516:INFO:              gradio: Not installed
2023-08-31 16:23:22,516:INFO:             fastapi: Not installed
2023-08-31 16:23:22,516:INFO:             uvicorn: Not installed
2023-08-31 16:23:22,516:INFO:              m2cgen: Not installed
2023-08-31 16:23:22,516:INFO:           evidently: Not installed
2023-08-31 16:23:22,516:INFO:               fugue: Not installed
2023-08-31 16:23:22,516:INFO:           streamlit: Not installed
2023-08-31 16:23:22,516:INFO:             prophet: Not installed
2023-08-31 16:23:22,516:INFO:None
2023-08-31 16:23:22,516:INFO:Set up data.
2023-08-31 16:23:22,519:INFO:Set up train/test split.
2023-08-31 16:23:22,521:INFO:Set up index.
2023-08-31 16:23:22,521:INFO:Set up folding strategy.
2023-08-31 16:23:22,521:INFO:Assigning column types.
2023-08-31 16:23:22,523:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 16:23:22,523:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,525:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,527:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,555:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,593:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,595:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,646:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,646:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 16:23:22,648:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,651:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,677:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,701:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,703:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,730:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,751:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 16:23:22,755:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,781:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,854:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,854:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 16:23:22,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,957:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:23:22,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:22,957:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 16:23:22,988:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:23,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:23:23,062:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,062:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 16:23:23,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,168:INFO:Preparing preprocessing pipeline...
2023-08-31 16:23:23,168:INFO:Set up simple imputation.
2023-08-31 16:23:23,176:INFO:Finished creating preprocessing pipeline.
2023-08-31 16:23:23,178:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 16:23:23,179:INFO:Creating final display dataframe.
2023-08-31 16:23:23,205:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (3489, 7)
4        Transformed data shape         (3489, 7)
5   Transformed train set shape         (2442, 7)
6    Transformed test set shape         (1047, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              aedc
2023-08-31 16:23:23,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,261:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:23:23,314:INFO:setup() successfully completed in 0.8s...............
2023-08-31 16:23:26,637:INFO:Initializing create_model()
2023-08-31 16:23:26,637:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:23:26,637:INFO:Checking exceptions
2023-08-31 16:23:26,643:INFO:Importing libraries
2023-08-31 16:23:26,643:INFO:Copying training dataset
2023-08-31 16:23:26,646:INFO:Defining folds
2023-08-31 16:23:26,646:INFO:Declaring metric variables
2023-08-31 16:23:26,647:INFO:Importing untrained model
2023-08-31 16:23:26,649:INFO:Ridge Regression Imported successfully
2023-08-31 16:23:26,652:INFO:Starting cross validation
2023-08-31 16:23:26,656:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:23:28,200:INFO:Calculating mean and std
2023-08-31 16:23:28,202:INFO:Creating metrics dataframe
2023-08-31 16:23:28,210:INFO:Finalizing model
2023-08-31 16:23:28,292:INFO:Uploading results into container
2023-08-31 16:23:28,292:INFO:Uploading model into container now
2023-08-31 16:23:28,304:INFO:_master_model_container: 1
2023-08-31 16:23:28,304:INFO:_display_container: 2
2023-08-31 16:23:28,304:INFO:Ridge(random_state=123)
2023-08-31 16:23:28,305:INFO:create_model() successfully completed......................................
2023-08-31 16:23:30,582:INFO:Initializing create_model()
2023-08-31 16:23:30,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:23:30,583:INFO:Checking exceptions
2023-08-31 16:23:30,589:INFO:Importing libraries
2023-08-31 16:23:30,589:INFO:Copying training dataset
2023-08-31 16:23:30,593:INFO:Defining folds
2023-08-31 16:23:30,593:INFO:Declaring metric variables
2023-08-31 16:23:30,594:INFO:Importing untrained model
2023-08-31 16:23:30,596:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:23:30,598:INFO:Starting cross validation
2023-08-31 16:23:30,599:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:23:31,375:INFO:Calculating mean and std
2023-08-31 16:23:31,375:INFO:Creating metrics dataframe
2023-08-31 16:23:31,378:INFO:Finalizing model
2023-08-31 16:23:31,469:INFO:Uploading results into container
2023-08-31 16:23:31,470:INFO:Uploading model into container now
2023-08-31 16:23:31,477:INFO:_master_model_container: 2
2023-08-31 16:23:31,477:INFO:_display_container: 3
2023-08-31 16:23:31,478:INFO:BayesianRidge()
2023-08-31 16:23:31,479:INFO:create_model() successfully completed......................................
2023-08-31 16:23:35,177:INFO:Initializing create_model()
2023-08-31 16:23:35,178:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:23:35,178:INFO:Checking exceptions
2023-08-31 16:23:35,184:INFO:Importing libraries
2023-08-31 16:23:35,184:INFO:Copying training dataset
2023-08-31 16:23:35,188:INFO:Defining folds
2023-08-31 16:23:35,188:INFO:Declaring metric variables
2023-08-31 16:23:35,189:INFO:Importing untrained model
2023-08-31 16:23:35,191:INFO:Least Angle Regression Imported successfully
2023-08-31 16:23:35,194:INFO:Starting cross validation
2023-08-31 16:23:35,195:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:23:35,247:INFO:Calculating mean and std
2023-08-31 16:23:35,248:INFO:Creating metrics dataframe
2023-08-31 16:23:35,250:INFO:Finalizing model
2023-08-31 16:23:35,261:INFO:Uploading results into container
2023-08-31 16:23:35,261:INFO:Uploading model into container now
2023-08-31 16:23:35,265:INFO:_master_model_container: 3
2023-08-31 16:23:35,265:INFO:_display_container: 4
2023-08-31 16:23:35,265:INFO:Lars(random_state=123)
2023-08-31 16:23:35,265:INFO:create_model() successfully completed......................................
2023-08-31 16:23:38,062:INFO:Initializing tune_model()
2023-08-31 16:23:38,062:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:23:38,062:INFO:Checking exceptions
2023-08-31 16:23:38,070:INFO:Copying training dataset
2023-08-31 16:23:38,072:INFO:Checking base model
2023-08-31 16:23:38,072:INFO:Base model : Ridge Regression
2023-08-31 16:23:38,074:INFO:Declaring metric variables
2023-08-31 16:23:38,075:INFO:Defining Hyperparameters
2023-08-31 16:23:38,197:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 16:23:38,197:INFO:Tuning with n_jobs=-1
2023-08-31 16:23:38,197:INFO:Initializing RandomizedSearchCV
2023-08-31 16:23:38,200:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 16:23:39,089:INFO:best_params: {'actual_estimator__alpha': 0.03}
2023-08-31 16:23:39,089:INFO:Hyperparameter search completed
2023-08-31 16:23:39,089:INFO:SubProcess create_model() called ==================================
2023-08-31 16:23:39,089:INFO:Initializing create_model()
2023-08-31 16:23:39,089:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b6378650>, model_only=True, return_train_score=False, kwargs={'alpha': 0.03})
2023-08-31 16:23:39,090:INFO:Checking exceptions
2023-08-31 16:23:39,090:INFO:Importing libraries
2023-08-31 16:23:39,090:INFO:Copying training dataset
2023-08-31 16:23:39,092:INFO:Defining folds
2023-08-31 16:23:39,092:INFO:Declaring metric variables
2023-08-31 16:23:39,094:INFO:Importing untrained model
2023-08-31 16:23:39,094:INFO:Declaring custom model
2023-08-31 16:23:39,095:INFO:Ridge Regression Imported successfully
2023-08-31 16:23:39,098:INFO:Starting cross validation
2023-08-31 16:23:39,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:23:39,154:INFO:Calculating mean and std
2023-08-31 16:23:39,155:INFO:Creating metrics dataframe
2023-08-31 16:23:39,157:INFO:Finalizing model
2023-08-31 16:23:39,168:INFO:Uploading results into container
2023-08-31 16:23:39,168:INFO:Uploading model into container now
2023-08-31 16:23:39,168:INFO:_master_model_container: 4
2023-08-31 16:23:39,168:INFO:_display_container: 5
2023-08-31 16:23:39,169:INFO:Ridge(alpha=0.03, random_state=123)
2023-08-31 16:23:39,169:INFO:create_model() successfully completed......................................
2023-08-31 16:23:39,279:INFO:SubProcess create_model() end ==================================
2023-08-31 16:23:39,279:INFO:choose_better activated
2023-08-31 16:23:39,281:INFO:SubProcess create_model() called ==================================
2023-08-31 16:23:39,282:INFO:Initializing create_model()
2023-08-31 16:23:39,282:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:23:39,282:INFO:Checking exceptions
2023-08-31 16:23:39,283:INFO:Importing libraries
2023-08-31 16:23:39,283:INFO:Copying training dataset
2023-08-31 16:23:39,285:INFO:Defining folds
2023-08-31 16:23:39,285:INFO:Declaring metric variables
2023-08-31 16:23:39,285:INFO:Importing untrained model
2023-08-31 16:23:39,285:INFO:Declaring custom model
2023-08-31 16:23:39,285:INFO:Ridge Regression Imported successfully
2023-08-31 16:23:39,285:INFO:Starting cross validation
2023-08-31 16:23:39,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:23:39,332:INFO:Calculating mean and std
2023-08-31 16:23:39,333:INFO:Creating metrics dataframe
2023-08-31 16:23:39,333:INFO:Finalizing model
2023-08-31 16:23:39,342:INFO:Uploading results into container
2023-08-31 16:23:39,342:INFO:Uploading model into container now
2023-08-31 16:23:39,342:INFO:_master_model_container: 5
2023-08-31 16:23:39,342:INFO:_display_container: 6
2023-08-31 16:23:39,342:INFO:Ridge(random_state=123)
2023-08-31 16:23:39,342:INFO:create_model() successfully completed......................................
2023-08-31 16:23:39,458:INFO:SubProcess create_model() end ==================================
2023-08-31 16:23:39,458:INFO:Ridge(random_state=123) result for RMSE is 0.9358
2023-08-31 16:23:39,458:INFO:Ridge(alpha=0.03, random_state=123) result for RMSE is 0.9358
2023-08-31 16:23:39,458:INFO:Ridge(random_state=123) is best model
2023-08-31 16:23:39,458:INFO:choose_better completed
2023-08-31 16:23:39,458:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:23:39,462:INFO:_master_model_container: 5
2023-08-31 16:23:39,463:INFO:_display_container: 5
2023-08-31 16:23:39,463:INFO:Ridge(random_state=123)
2023-08-31 16:23:39,463:INFO:tune_model() successfully completed......................................
2023-08-31 16:23:42,745:INFO:Initializing tune_model()
2023-08-31 16:23:42,745:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:23:42,745:INFO:Checking exceptions
2023-08-31 16:23:42,752:INFO:Copying training dataset
2023-08-31 16:23:42,754:INFO:Checking base model
2023-08-31 16:23:42,754:INFO:Base model : Bayesian Ridge
2023-08-31 16:23:42,756:INFO:Declaring metric variables
2023-08-31 16:23:42,757:INFO:Defining Hyperparameters
2023-08-31 16:23:42,880:INFO:Tuning with n_jobs=-1
2023-08-31 16:23:42,880:INFO:Initializing RandomizedSearchCV
2023-08-31 16:24:00,688:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 0.3, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.2, 'actual_estimator__alpha_1': 0.15}
2023-08-31 16:24:00,689:INFO:Hyperparameter search completed
2023-08-31 16:24:00,689:INFO:SubProcess create_model() called ==================================
2023-08-31 16:24:00,689:INFO:Initializing create_model()
2023-08-31 16:24:00,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b65d4710>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 0.3, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.2, 'alpha_1': 0.15})
2023-08-31 16:24:00,689:INFO:Checking exceptions
2023-08-31 16:24:00,689:INFO:Importing libraries
2023-08-31 16:24:00,689:INFO:Copying training dataset
2023-08-31 16:24:00,691:INFO:Defining folds
2023-08-31 16:24:00,691:INFO:Declaring metric variables
2023-08-31 16:24:00,693:INFO:Importing untrained model
2023-08-31 16:24:00,693:INFO:Declaring custom model
2023-08-31 16:24:00,694:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:24:00,697:INFO:Starting cross validation
2023-08-31 16:24:00,697:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:24:00,741:INFO:Calculating mean and std
2023-08-31 16:24:00,742:INFO:Creating metrics dataframe
2023-08-31 16:24:00,744:INFO:Finalizing model
2023-08-31 16:24:00,876:INFO:Uploading results into container
2023-08-31 16:24:00,877:INFO:Uploading model into container now
2023-08-31 16:24:00,878:INFO:_master_model_container: 6
2023-08-31 16:24:00,878:INFO:_display_container: 6
2023-08-31 16:24:00,878:INFO:BayesianRidge(alpha_1=0.15, alpha_2=0.2, lambda_1=0.3, lambda_2=0.3)
2023-08-31 16:24:00,878:INFO:create_model() successfully completed......................................
2023-08-31 16:24:01,005:INFO:SubProcess create_model() end ==================================
2023-08-31 16:24:01,005:INFO:choose_better activated
2023-08-31 16:24:01,007:INFO:SubProcess create_model() called ==================================
2023-08-31 16:24:01,008:INFO:Initializing create_model()
2023-08-31 16:24:01,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:24:01,008:INFO:Checking exceptions
2023-08-31 16:24:01,010:INFO:Importing libraries
2023-08-31 16:24:01,010:INFO:Copying training dataset
2023-08-31 16:24:01,013:INFO:Defining folds
2023-08-31 16:24:01,013:INFO:Declaring metric variables
2023-08-31 16:24:01,013:INFO:Importing untrained model
2023-08-31 16:24:01,013:INFO:Declaring custom model
2023-08-31 16:24:01,013:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:24:01,013:INFO:Starting cross validation
2023-08-31 16:24:01,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:24:01,066:INFO:Calculating mean and std
2023-08-31 16:24:01,067:INFO:Creating metrics dataframe
2023-08-31 16:24:01,067:INFO:Finalizing model
2023-08-31 16:24:01,100:INFO:Uploading results into container
2023-08-31 16:24:01,100:INFO:Uploading model into container now
2023-08-31 16:24:01,101:INFO:_master_model_container: 7
2023-08-31 16:24:01,101:INFO:_display_container: 7
2023-08-31 16:24:01,101:INFO:BayesianRidge()
2023-08-31 16:24:01,101:INFO:create_model() successfully completed......................................
2023-08-31 16:24:01,239:INFO:SubProcess create_model() end ==================================
2023-08-31 16:24:01,240:INFO:BayesianRidge() result for RMSE is 0.9358
2023-08-31 16:24:01,240:INFO:BayesianRidge(alpha_1=0.15, alpha_2=0.2, lambda_1=0.3, lambda_2=0.3) result for RMSE is 0.9358
2023-08-31 16:24:01,240:INFO:BayesianRidge() is best model
2023-08-31 16:24:01,240:INFO:choose_better completed
2023-08-31 16:24:01,244:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:24:01,255:INFO:_master_model_container: 7
2023-08-31 16:24:01,255:INFO:_display_container: 6
2023-08-31 16:24:01,255:INFO:BayesianRidge()
2023-08-31 16:24:01,256:INFO:tune_model() successfully completed......................................
2023-08-31 16:24:06,662:INFO:Initializing tune_model()
2023-08-31 16:24:06,663:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:24:06,663:INFO:Checking exceptions
2023-08-31 16:24:06,670:INFO:Copying training dataset
2023-08-31 16:24:06,673:INFO:Checking base model
2023-08-31 16:24:06,673:INFO:Base model : Least Angle Regression
2023-08-31 16:24:06,674:INFO:Declaring metric variables
2023-08-31 16:24:06,676:INFO:Defining Hyperparameters
2023-08-31 16:24:06,676:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 16:24:06,798:INFO:Tuning with n_jobs=-1
2023-08-31 16:24:06,798:INFO:Initializing GridSearchCV
2023-08-31 16:24:07,257:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': True}
2023-08-31 16:24:07,257:INFO:Hyperparameter search completed
2023-08-31 16:24:07,257:INFO:SubProcess create_model() called ==================================
2023-08-31 16:24:07,258:INFO:Initializing create_model()
2023-08-31 16:24:07,258:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x29b7c7a10>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': True})
2023-08-31 16:24:07,258:INFO:Checking exceptions
2023-08-31 16:24:07,258:INFO:Importing libraries
2023-08-31 16:24:07,258:INFO:Copying training dataset
2023-08-31 16:24:07,260:INFO:Defining folds
2023-08-31 16:24:07,260:INFO:Declaring metric variables
2023-08-31 16:24:07,261:INFO:Importing untrained model
2023-08-31 16:24:07,261:INFO:Declaring custom model
2023-08-31 16:24:07,263:INFO:Least Angle Regression Imported successfully
2023-08-31 16:24:07,265:INFO:Starting cross validation
2023-08-31 16:24:07,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:24:07,307:INFO:Calculating mean and std
2023-08-31 16:24:07,307:INFO:Creating metrics dataframe
2023-08-31 16:24:07,309:INFO:Finalizing model
2023-08-31 16:24:07,320:INFO:Uploading results into container
2023-08-31 16:24:07,320:INFO:Uploading model into container now
2023-08-31 16:24:07,321:INFO:_master_model_container: 8
2023-08-31 16:24:07,321:INFO:_display_container: 7
2023-08-31 16:24:07,321:INFO:Lars(eps=1e-05, random_state=123)
2023-08-31 16:24:07,321:INFO:create_model() successfully completed......................................
2023-08-31 16:24:07,426:INFO:SubProcess create_model() end ==================================
2023-08-31 16:24:07,426:INFO:choose_better activated
2023-08-31 16:24:07,427:INFO:SubProcess create_model() called ==================================
2023-08-31 16:24:07,428:INFO:Initializing create_model()
2023-08-31 16:24:07,428:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:24:07,428:INFO:Checking exceptions
2023-08-31 16:24:07,429:INFO:Importing libraries
2023-08-31 16:24:07,429:INFO:Copying training dataset
2023-08-31 16:24:07,431:INFO:Defining folds
2023-08-31 16:24:07,431:INFO:Declaring metric variables
2023-08-31 16:24:07,431:INFO:Importing untrained model
2023-08-31 16:24:07,431:INFO:Declaring custom model
2023-08-31 16:24:07,431:INFO:Least Angle Regression Imported successfully
2023-08-31 16:24:07,431:INFO:Starting cross validation
2023-08-31 16:24:07,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:24:07,481:INFO:Calculating mean and std
2023-08-31 16:24:07,481:INFO:Creating metrics dataframe
2023-08-31 16:24:07,482:INFO:Finalizing model
2023-08-31 16:24:07,492:INFO:Uploading results into container
2023-08-31 16:24:07,492:INFO:Uploading model into container now
2023-08-31 16:24:07,492:INFO:_master_model_container: 9
2023-08-31 16:24:07,492:INFO:_display_container: 8
2023-08-31 16:24:07,492:INFO:Lars(random_state=123)
2023-08-31 16:24:07,492:INFO:create_model() successfully completed......................................
2023-08-31 16:24:07,602:INFO:SubProcess create_model() end ==================================
2023-08-31 16:24:07,603:INFO:Lars(random_state=123) result for RMSE is 0.9358
2023-08-31 16:24:07,603:INFO:Lars(eps=1e-05, random_state=123) result for RMSE is 0.9358
2023-08-31 16:24:07,603:INFO:Lars(random_state=123) is best model
2023-08-31 16:24:07,603:INFO:choose_better completed
2023-08-31 16:24:07,603:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:24:07,608:INFO:_master_model_container: 9
2023-08-31 16:24:07,608:INFO:_display_container: 7
2023-08-31 16:24:07,608:INFO:Lars(random_state=123)
2023-08-31 16:24:07,608:INFO:tune_model() successfully completed......................................
2023-08-31 16:24:10,595:INFO:Initializing plot_model()
2023-08-31 16:24:10,596:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:24:10,596:INFO:Checking exceptions
2023-08-31 16:24:10,598:INFO:Preloading libraries
2023-08-31 16:24:10,598:INFO:Copying training dataset
2023-08-31 16:24:10,598:INFO:Plot type: error
2023-08-31 16:24:10,635:INFO:Fitting Model
2023-08-31 16:24:10,635:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 16:24:10,635:INFO:Scoring test/hold-out set
2023-08-31 16:24:10,789:INFO:Visual Rendered Successfully
2023-08-31 16:24:10,906:INFO:plot_model() successfully completed......................................
2023-08-31 16:24:12,992:INFO:Initializing plot_model()
2023-08-31 16:24:12,992:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:24:12,992:INFO:Checking exceptions
2023-08-31 16:24:12,996:INFO:Preloading libraries
2023-08-31 16:24:12,997:INFO:Copying training dataset
2023-08-31 16:24:12,997:INFO:Plot type: feature
2023-08-31 16:24:13,055:INFO:Visual Rendered Successfully
2023-08-31 16:24:13,163:INFO:plot_model() successfully completed......................................
2023-08-31 16:24:15,446:INFO:Initializing finalize_model()
2023-08-31 16:24:15,446:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 16:24:15,446:INFO:Finalizing BayesianRidge()
2023-08-31 16:24:15,448:INFO:Initializing create_model()
2023-08-31 16:24:15,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 16:24:15,448:INFO:Checking exceptions
2023-08-31 16:24:15,449:INFO:Importing libraries
2023-08-31 16:24:15,449:INFO:Copying training dataset
2023-08-31 16:24:15,449:INFO:Defining folds
2023-08-31 16:24:15,449:INFO:Declaring metric variables
2023-08-31 16:24:15,450:INFO:Importing untrained model
2023-08-31 16:24:15,450:INFO:Declaring custom model
2023-08-31 16:24:15,450:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:24:15,450:INFO:Cross validation set to False
2023-08-31 16:24:15,450:INFO:Fitting Model
2023-08-31 16:24:15,474:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:24:15,474:INFO:create_model() successfully completed......................................
2023-08-31 16:24:15,616:INFO:_master_model_container: 9
2023-08-31 16:24:15,616:INFO:_display_container: 7
2023-08-31 16:24:15,618:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:24:15,618:INFO:finalize_model() successfully completed......................................
2023-08-31 16:24:16,944:INFO:Initializing predict_model()
2023-08-31 16:24:16,944:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x29b77e590>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2b187ad40>)
2023-08-31 16:24:16,944:INFO:Checking exceptions
2023-08-31 16:24:16,945:INFO:Preloading libraries
2023-08-31 16:24:16,946:INFO:Set up data.
2023-08-31 16:24:16,949:INFO:Set up index.
2023-08-31 16:43:43,029:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:43:43,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:43:43,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:43:43,030:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 16:43:43,322:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 16:43:43,358:INFO:PyCaret RegressionExperiment
2023-08-31 16:43:43,358:INFO:Logging name: reg-default-name
2023-08-31 16:43:43,358:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 16:43:43,358:INFO:version 3.0.2
2023-08-31 16:43:43,358:INFO:Initializing setup()
2023-08-31 16:43:43,358:INFO:self.USI: 7dd0
2023-08-31 16:43:43,358:INFO:self._variable_keys: {'seed', 'X_test', 'fold_generator', 'target_param', 'logging_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'data', 'log_plots_param', 'idx', 'X', 'y_train', 'html_param', 'y', 'gpu_param', 'n_jobs_param', 'exp_name_log', 'pipeline', 'gpu_n_jobs_param', 'memory', 'USI', 'exp_id', 'X_train', 'y_test', 'fold_shuffle_param', 'transform_target_param'}
2023-08-31 16:43:43,358:INFO:Checking environment
2023-08-31 16:43:43,358:INFO:python_version: 3.11.4
2023-08-31 16:43:43,358:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 16:43:43,358:INFO:machine: arm64
2023-08-31 16:43:43,358:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:43:43,358:INFO:Memory: svmem(total=17179869184, available=4799447040, percent=72.1, used=6612631552, free=405471232, active=4394467328, inactive=4311089152, wired=2218164224)
2023-08-31 16:43:43,358:INFO:Physical Core: 12
2023-08-31 16:43:43,358:INFO:Logical Core: 12
2023-08-31 16:43:43,358:INFO:Checking libraries
2023-08-31 16:43:43,358:INFO:System:
2023-08-31 16:43:43,358:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 16:43:43,359:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 16:43:43,359:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:43:43,359:INFO:PyCaret required dependencies:
2023-08-31 16:43:43,359:INFO:                 pip: 23.2.1
2023-08-31 16:43:43,359:INFO:          setuptools: 68.0.0
2023-08-31 16:43:43,359:INFO:             pycaret: 3.0.2
2023-08-31 16:43:43,359:INFO:             IPython: 8.14.0
2023-08-31 16:43:43,359:INFO:          ipywidgets: 8.1.0
2023-08-31 16:43:43,359:INFO:                tqdm: 4.64.1
2023-08-31 16:43:43,359:INFO:               numpy: 1.25.2
2023-08-31 16:43:43,359:INFO:              pandas: 1.5.0
2023-08-31 16:43:43,359:INFO:              jinja2: 3.1.2
2023-08-31 16:43:43,359:INFO:               scipy: 1.9.3
2023-08-31 16:43:43,359:INFO:              joblib: 1.2.0
2023-08-31 16:43:43,359:INFO:             sklearn: 1.2.2
2023-08-31 16:43:43,359:INFO:                pyod: 1.0.9
2023-08-31 16:43:43,359:INFO:            imblearn: 0.10.1
2023-08-31 16:43:43,359:INFO:   category_encoders: 2.6.1
2023-08-31 16:43:43,359:INFO:            lightgbm: 3.3.5
2023-08-31 16:43:43,359:INFO:               numba: 0.57.0
2023-08-31 16:43:43,359:INFO:            requests: 2.28.0
2023-08-31 16:43:43,359:INFO:          matplotlib: 3.6.2
2023-08-31 16:43:43,359:INFO:          scikitplot: 0.3.7
2023-08-31 16:43:43,359:INFO:         yellowbrick: 1.5
2023-08-31 16:43:43,359:INFO:              plotly: 5.9.0
2023-08-31 16:43:43,359:INFO:             kaleido: 0.2.1
2023-08-31 16:43:43,359:INFO:         statsmodels: 0.13.5
2023-08-31 16:43:43,359:INFO:              sktime: 0.17.0
2023-08-31 16:43:43,359:INFO:               tbats: 1.1.3
2023-08-31 16:43:43,359:INFO:            pmdarima: 2.0.3
2023-08-31 16:43:43,359:INFO:              psutil: 5.9.0
2023-08-31 16:43:43,359:INFO:PyCaret optional dependencies:
2023-08-31 16:43:43,365:INFO:                shap: Not installed
2023-08-31 16:43:43,365:INFO:           interpret: Not installed
2023-08-31 16:43:43,365:INFO:                umap: Not installed
2023-08-31 16:43:43,365:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 16:43:43,365:INFO:  explainerdashboard: Not installed
2023-08-31 16:43:43,365:INFO:             autoviz: Not installed
2023-08-31 16:43:43,365:INFO:           fairlearn: Not installed
2023-08-31 16:43:43,365:INFO:             xgboost: Not installed
2023-08-31 16:43:43,365:INFO:            catboost: Not installed
2023-08-31 16:43:43,365:INFO:              kmodes: Not installed
2023-08-31 16:43:43,365:INFO:             mlxtend: Not installed
2023-08-31 16:43:43,365:INFO:       statsforecast: Not installed
2023-08-31 16:43:43,365:INFO:        tune_sklearn: Not installed
2023-08-31 16:43:43,365:INFO:                 ray: Not installed
2023-08-31 16:43:43,365:INFO:            hyperopt: Not installed
2023-08-31 16:43:43,365:INFO:              optuna: Not installed
2023-08-31 16:43:43,365:INFO:               skopt: Not installed
2023-08-31 16:43:43,365:INFO:              mlflow: Not installed
2023-08-31 16:43:43,365:INFO:              gradio: Not installed
2023-08-31 16:43:43,365:INFO:             fastapi: Not installed
2023-08-31 16:43:43,365:INFO:             uvicorn: Not installed
2023-08-31 16:43:43,365:INFO:              m2cgen: Not installed
2023-08-31 16:43:43,365:INFO:           evidently: Not installed
2023-08-31 16:43:43,365:INFO:               fugue: Not installed
2023-08-31 16:43:43,365:INFO:           streamlit: Not installed
2023-08-31 16:43:43,365:INFO:             prophet: Not installed
2023-08-31 16:43:43,365:INFO:None
2023-08-31 16:43:43,365:INFO:Set up data.
2023-08-31 16:43:43,368:INFO:Set up train/test split.
2023-08-31 16:43:43,370:INFO:Set up index.
2023-08-31 16:43:43,370:INFO:Set up folding strategy.
2023-08-31 16:43:43,370:INFO:Assigning column types.
2023-08-31 16:43:43,372:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 16:43:43,372:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,374:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,376:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,440:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,440:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,442:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,445:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,471:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,492:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 16:43:43,494:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,496:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,545:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,548:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,596:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 16:43:43,600:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,627:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,648:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,653:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,701:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,701:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,701:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 16:43:43,731:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,782:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,802:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,803:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,803:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 16:43:43,833:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,855:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,855:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,886:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:43:43,907:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,907:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 16:43:43,958:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:43,958:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,011:INFO:Preparing preprocessing pipeline...
2023-08-31 16:43:44,011:INFO:Set up simple imputation.
2023-08-31 16:43:44,019:INFO:Finished creating preprocessing pipeline.
2023-08-31 16:43:44,021:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 16:43:44,021:INFO:Creating final display dataframe.
2023-08-31 16:43:44,046:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (3489, 7)
4        Transformed data shape         (3489, 7)
5   Transformed train set shape         (2442, 7)
6    Transformed test set shape         (1047, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              7dd0
2023-08-31 16:43:44,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:43:44,154:INFO:setup() successfully completed in 0.8s...............
2023-08-31 16:43:44,165:INFO:Initializing create_model()
2023-08-31 16:43:44,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:43:44,165:INFO:Checking exceptions
2023-08-31 16:43:44,171:INFO:Importing libraries
2023-08-31 16:43:44,171:INFO:Copying training dataset
2023-08-31 16:43:44,174:INFO:Defining folds
2023-08-31 16:43:44,174:INFO:Declaring metric variables
2023-08-31 16:43:44,176:INFO:Importing untrained model
2023-08-31 16:43:44,177:INFO:Ridge Regression Imported successfully
2023-08-31 16:43:44,179:INFO:Starting cross validation
2023-08-31 16:43:44,183:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:43:45,721:INFO:Calculating mean and std
2023-08-31 16:43:45,723:INFO:Creating metrics dataframe
2023-08-31 16:43:45,730:INFO:Finalizing model
2023-08-31 16:43:45,784:INFO:Uploading results into container
2023-08-31 16:43:45,785:INFO:Uploading model into container now
2023-08-31 16:43:45,799:INFO:_master_model_container: 1
2023-08-31 16:43:45,799:INFO:_display_container: 2
2023-08-31 16:43:45,799:INFO:Ridge(random_state=123)
2023-08-31 16:43:45,799:INFO:create_model() successfully completed......................................
2023-08-31 16:43:45,950:INFO:Initializing create_model()
2023-08-31 16:43:45,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:43:45,950:INFO:Checking exceptions
2023-08-31 16:43:45,959:INFO:Importing libraries
2023-08-31 16:43:45,959:INFO:Copying training dataset
2023-08-31 16:43:45,965:INFO:Defining folds
2023-08-31 16:43:45,965:INFO:Declaring metric variables
2023-08-31 16:43:45,969:INFO:Importing untrained model
2023-08-31 16:43:45,972:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:43:45,977:INFO:Starting cross validation
2023-08-31 16:43:45,978:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:43:46,806:INFO:Calculating mean and std
2023-08-31 16:43:46,807:INFO:Creating metrics dataframe
2023-08-31 16:43:46,809:INFO:Finalizing model
2023-08-31 16:43:46,946:INFO:Uploading results into container
2023-08-31 16:43:46,946:INFO:Uploading model into container now
2023-08-31 16:43:46,968:INFO:_master_model_container: 2
2023-08-31 16:43:46,968:INFO:_display_container: 3
2023-08-31 16:43:46,969:INFO:BayesianRidge()
2023-08-31 16:43:46,969:INFO:create_model() successfully completed......................................
2023-08-31 16:43:47,187:INFO:Initializing create_model()
2023-08-31 16:43:47,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:43:47,187:INFO:Checking exceptions
2023-08-31 16:43:47,193:INFO:Importing libraries
2023-08-31 16:43:47,193:INFO:Copying training dataset
2023-08-31 16:43:47,197:INFO:Defining folds
2023-08-31 16:43:47,197:INFO:Declaring metric variables
2023-08-31 16:43:47,199:INFO:Importing untrained model
2023-08-31 16:43:47,200:INFO:Least Angle Regression Imported successfully
2023-08-31 16:43:47,203:INFO:Starting cross validation
2023-08-31 16:43:47,203:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:43:47,982:INFO:Calculating mean and std
2023-08-31 16:43:47,982:INFO:Creating metrics dataframe
2023-08-31 16:43:47,985:INFO:Finalizing model
2023-08-31 16:43:47,997:INFO:Uploading results into container
2023-08-31 16:43:47,997:INFO:Uploading model into container now
2023-08-31 16:43:48,001:INFO:_master_model_container: 3
2023-08-31 16:43:48,001:INFO:_display_container: 4
2023-08-31 16:43:48,001:INFO:Lars(random_state=123)
2023-08-31 16:43:48,001:INFO:create_model() successfully completed......................................
2023-08-31 16:43:48,128:INFO:Initializing tune_model()
2023-08-31 16:43:48,128:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:43:48,129:INFO:Checking exceptions
2023-08-31 16:43:48,135:INFO:Copying training dataset
2023-08-31 16:43:48,137:INFO:Checking base model
2023-08-31 16:43:48,137:INFO:Base model : Ridge Regression
2023-08-31 16:43:48,139:INFO:Declaring metric variables
2023-08-31 16:43:48,141:INFO:Defining Hyperparameters
2023-08-31 16:43:48,241:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 16:43:48,242:INFO:Tuning with n_jobs=-1
2023-08-31 16:43:48,242:INFO:Initializing RandomizedSearchCV
2023-08-31 16:43:48,244:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 16:43:48,382:INFO:best_params: {'actual_estimator__alpha': 0.03}
2023-08-31 16:43:48,383:INFO:Hyperparameter search completed
2023-08-31 16:43:48,383:INFO:SubProcess create_model() called ==================================
2023-08-31 16:43:48,383:INFO:Initializing create_model()
2023-08-31 16:43:48,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ac51ba10>, model_only=True, return_train_score=False, kwargs={'alpha': 0.03})
2023-08-31 16:43:48,383:INFO:Checking exceptions
2023-08-31 16:43:48,383:INFO:Importing libraries
2023-08-31 16:43:48,383:INFO:Copying training dataset
2023-08-31 16:43:48,385:INFO:Defining folds
2023-08-31 16:43:48,385:INFO:Declaring metric variables
2023-08-31 16:43:48,386:INFO:Importing untrained model
2023-08-31 16:43:48,386:INFO:Declaring custom model
2023-08-31 16:43:48,388:INFO:Ridge Regression Imported successfully
2023-08-31 16:43:48,390:INFO:Starting cross validation
2023-08-31 16:43:48,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:43:48,431:INFO:Calculating mean and std
2023-08-31 16:43:48,431:INFO:Creating metrics dataframe
2023-08-31 16:43:48,434:INFO:Finalizing model
2023-08-31 16:43:48,445:INFO:Uploading results into container
2023-08-31 16:43:48,445:INFO:Uploading model into container now
2023-08-31 16:43:48,445:INFO:_master_model_container: 4
2023-08-31 16:43:48,445:INFO:_display_container: 5
2023-08-31 16:43:48,445:INFO:Ridge(alpha=0.03, random_state=123)
2023-08-31 16:43:48,445:INFO:create_model() successfully completed......................................
2023-08-31 16:43:48,538:INFO:SubProcess create_model() end ==================================
2023-08-31 16:43:48,538:INFO:choose_better activated
2023-08-31 16:43:48,540:INFO:SubProcess create_model() called ==================================
2023-08-31 16:43:48,540:INFO:Initializing create_model()
2023-08-31 16:43:48,540:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:43:48,540:INFO:Checking exceptions
2023-08-31 16:43:48,541:INFO:Importing libraries
2023-08-31 16:43:48,541:INFO:Copying training dataset
2023-08-31 16:43:48,544:INFO:Defining folds
2023-08-31 16:43:48,544:INFO:Declaring metric variables
2023-08-31 16:43:48,544:INFO:Importing untrained model
2023-08-31 16:43:48,544:INFO:Declaring custom model
2023-08-31 16:43:48,544:INFO:Ridge Regression Imported successfully
2023-08-31 16:43:48,544:INFO:Starting cross validation
2023-08-31 16:43:48,544:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:43:48,588:INFO:Calculating mean and std
2023-08-31 16:43:48,589:INFO:Creating metrics dataframe
2023-08-31 16:43:48,589:INFO:Finalizing model
2023-08-31 16:43:48,598:INFO:Uploading results into container
2023-08-31 16:43:48,598:INFO:Uploading model into container now
2023-08-31 16:43:48,599:INFO:_master_model_container: 5
2023-08-31 16:43:48,599:INFO:_display_container: 6
2023-08-31 16:43:48,599:INFO:Ridge(random_state=123)
2023-08-31 16:43:48,599:INFO:create_model() successfully completed......................................
2023-08-31 16:43:48,695:INFO:SubProcess create_model() end ==================================
2023-08-31 16:43:48,695:INFO:Ridge(random_state=123) result for RMSE is 0.9358
2023-08-31 16:43:48,695:INFO:Ridge(alpha=0.03, random_state=123) result for RMSE is 0.9358
2023-08-31 16:43:48,695:INFO:Ridge(random_state=123) is best model
2023-08-31 16:43:48,695:INFO:choose_better completed
2023-08-31 16:43:48,696:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:43:48,700:INFO:_master_model_container: 5
2023-08-31 16:43:48,700:INFO:_display_container: 5
2023-08-31 16:43:48,700:INFO:Ridge(random_state=123)
2023-08-31 16:43:48,700:INFO:tune_model() successfully completed......................................
2023-08-31 16:43:48,818:INFO:Initializing tune_model()
2023-08-31 16:43:48,819:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:43:48,819:INFO:Checking exceptions
2023-08-31 16:43:48,825:INFO:Copying training dataset
2023-08-31 16:43:48,827:INFO:Checking base model
2023-08-31 16:43:48,827:INFO:Base model : Bayesian Ridge
2023-08-31 16:43:48,828:INFO:Declaring metric variables
2023-08-31 16:43:48,830:INFO:Defining Hyperparameters
2023-08-31 16:43:48,941:INFO:Tuning with n_jobs=-1
2023-08-31 16:43:48,941:INFO:Initializing RandomizedSearchCV
2023-08-31 16:44:08,355:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 0.3, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.2, 'actual_estimator__alpha_1': 0.15}
2023-08-31 16:44:08,355:INFO:Hyperparameter search completed
2023-08-31 16:44:08,355:INFO:SubProcess create_model() called ==================================
2023-08-31 16:44:08,355:INFO:Initializing create_model()
2023-08-31 16:44:08,355:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2af327b10>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 0.3, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.2, 'alpha_1': 0.15})
2023-08-31 16:44:08,355:INFO:Checking exceptions
2023-08-31 16:44:08,356:INFO:Importing libraries
2023-08-31 16:44:08,356:INFO:Copying training dataset
2023-08-31 16:44:08,358:INFO:Defining folds
2023-08-31 16:44:08,358:INFO:Declaring metric variables
2023-08-31 16:44:08,360:INFO:Importing untrained model
2023-08-31 16:44:08,360:INFO:Declaring custom model
2023-08-31 16:44:08,361:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:44:08,364:INFO:Starting cross validation
2023-08-31 16:44:08,364:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:44:08,406:INFO:Calculating mean and std
2023-08-31 16:44:08,406:INFO:Creating metrics dataframe
2023-08-31 16:44:08,409:INFO:Finalizing model
2023-08-31 16:44:08,487:INFO:Uploading results into container
2023-08-31 16:44:08,489:INFO:Uploading model into container now
2023-08-31 16:44:08,489:INFO:_master_model_container: 6
2023-08-31 16:44:08,489:INFO:_display_container: 6
2023-08-31 16:44:08,490:INFO:BayesianRidge(alpha_1=0.15, alpha_2=0.2, lambda_1=0.3, lambda_2=0.3)
2023-08-31 16:44:08,490:INFO:create_model() successfully completed......................................
2023-08-31 16:44:08,599:INFO:SubProcess create_model() end ==================================
2023-08-31 16:44:08,599:INFO:choose_better activated
2023-08-31 16:44:08,601:INFO:SubProcess create_model() called ==================================
2023-08-31 16:44:08,601:INFO:Initializing create_model()
2023-08-31 16:44:08,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:44:08,602:INFO:Checking exceptions
2023-08-31 16:44:08,603:INFO:Importing libraries
2023-08-31 16:44:08,603:INFO:Copying training dataset
2023-08-31 16:44:08,605:INFO:Defining folds
2023-08-31 16:44:08,605:INFO:Declaring metric variables
2023-08-31 16:44:08,605:INFO:Importing untrained model
2023-08-31 16:44:08,605:INFO:Declaring custom model
2023-08-31 16:44:08,605:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:44:08,605:INFO:Starting cross validation
2023-08-31 16:44:08,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:44:08,686:INFO:Calculating mean and std
2023-08-31 16:44:08,686:INFO:Creating metrics dataframe
2023-08-31 16:44:08,688:INFO:Finalizing model
2023-08-31 16:44:08,699:INFO:Uploading results into container
2023-08-31 16:44:08,699:INFO:Uploading model into container now
2023-08-31 16:44:08,699:INFO:_master_model_container: 7
2023-08-31 16:44:08,699:INFO:_display_container: 7
2023-08-31 16:44:08,700:INFO:BayesianRidge()
2023-08-31 16:44:08,700:INFO:create_model() successfully completed......................................
2023-08-31 16:44:08,837:INFO:SubProcess create_model() end ==================================
2023-08-31 16:44:08,837:INFO:BayesianRidge() result for RMSE is 0.9358
2023-08-31 16:44:08,837:INFO:BayesianRidge(alpha_1=0.15, alpha_2=0.2, lambda_1=0.3, lambda_2=0.3) result for RMSE is 0.9358
2023-08-31 16:44:08,838:INFO:BayesianRidge() is best model
2023-08-31 16:44:08,838:INFO:choose_better completed
2023-08-31 16:44:08,838:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:44:08,843:INFO:_master_model_container: 7
2023-08-31 16:44:08,843:INFO:_display_container: 6
2023-08-31 16:44:08,844:INFO:BayesianRidge()
2023-08-31 16:44:08,844:INFO:tune_model() successfully completed......................................
2023-08-31 16:44:09,056:INFO:Initializing tune_model()
2023-08-31 16:44:09,056:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:44:09,056:INFO:Checking exceptions
2023-08-31 16:44:09,064:INFO:Copying training dataset
2023-08-31 16:44:09,066:INFO:Checking base model
2023-08-31 16:44:09,066:INFO:Base model : Least Angle Regression
2023-08-31 16:44:09,068:INFO:Declaring metric variables
2023-08-31 16:44:09,069:INFO:Defining Hyperparameters
2023-08-31 16:44:09,069:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 16:44:09,226:INFO:Tuning with n_jobs=-1
2023-08-31 16:44:09,226:INFO:Initializing GridSearchCV
2023-08-31 16:44:09,777:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': True}
2023-08-31 16:44:09,777:INFO:Hyperparameter search completed
2023-08-31 16:44:09,777:INFO:SubProcess create_model() called ==================================
2023-08-31 16:44:09,778:INFO:Initializing create_model()
2023-08-31 16:44:09,778:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2af4d2a90>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': True})
2023-08-31 16:44:09,778:INFO:Checking exceptions
2023-08-31 16:44:09,778:INFO:Importing libraries
2023-08-31 16:44:09,778:INFO:Copying training dataset
2023-08-31 16:44:09,780:INFO:Defining folds
2023-08-31 16:44:09,780:INFO:Declaring metric variables
2023-08-31 16:44:09,781:INFO:Importing untrained model
2023-08-31 16:44:09,781:INFO:Declaring custom model
2023-08-31 16:44:09,783:INFO:Least Angle Regression Imported successfully
2023-08-31 16:44:09,785:INFO:Starting cross validation
2023-08-31 16:44:09,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:44:09,830:INFO:Calculating mean and std
2023-08-31 16:44:09,830:INFO:Creating metrics dataframe
2023-08-31 16:44:09,832:INFO:Finalizing model
2023-08-31 16:44:09,845:INFO:Uploading results into container
2023-08-31 16:44:09,845:INFO:Uploading model into container now
2023-08-31 16:44:09,845:INFO:_master_model_container: 8
2023-08-31 16:44:09,846:INFO:_display_container: 7
2023-08-31 16:44:09,846:INFO:Lars(eps=1e-05, random_state=123)
2023-08-31 16:44:09,846:INFO:create_model() successfully completed......................................
2023-08-31 16:44:09,952:INFO:SubProcess create_model() end ==================================
2023-08-31 16:44:09,953:INFO:choose_better activated
2023-08-31 16:44:09,954:INFO:SubProcess create_model() called ==================================
2023-08-31 16:44:09,955:INFO:Initializing create_model()
2023-08-31 16:44:09,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:44:09,955:INFO:Checking exceptions
2023-08-31 16:44:09,956:INFO:Importing libraries
2023-08-31 16:44:09,956:INFO:Copying training dataset
2023-08-31 16:44:09,958:INFO:Defining folds
2023-08-31 16:44:09,958:INFO:Declaring metric variables
2023-08-31 16:44:09,958:INFO:Importing untrained model
2023-08-31 16:44:09,958:INFO:Declaring custom model
2023-08-31 16:44:09,958:INFO:Least Angle Regression Imported successfully
2023-08-31 16:44:09,959:INFO:Starting cross validation
2023-08-31 16:44:09,959:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:44:10,010:INFO:Calculating mean and std
2023-08-31 16:44:10,010:INFO:Creating metrics dataframe
2023-08-31 16:44:10,011:INFO:Finalizing model
2023-08-31 16:44:10,022:INFO:Uploading results into container
2023-08-31 16:44:10,022:INFO:Uploading model into container now
2023-08-31 16:44:10,022:INFO:_master_model_container: 9
2023-08-31 16:44:10,022:INFO:_display_container: 8
2023-08-31 16:44:10,022:INFO:Lars(random_state=123)
2023-08-31 16:44:10,022:INFO:create_model() successfully completed......................................
2023-08-31 16:44:10,124:INFO:SubProcess create_model() end ==================================
2023-08-31 16:44:10,125:INFO:Lars(random_state=123) result for RMSE is 0.9358
2023-08-31 16:44:10,125:INFO:Lars(eps=1e-05, random_state=123) result for RMSE is 0.9358
2023-08-31 16:44:10,125:INFO:Lars(random_state=123) is best model
2023-08-31 16:44:10,125:INFO:choose_better completed
2023-08-31 16:44:10,125:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:44:10,129:INFO:_master_model_container: 9
2023-08-31 16:44:10,130:INFO:_display_container: 7
2023-08-31 16:44:10,130:INFO:Lars(random_state=123)
2023-08-31 16:44:10,130:INFO:tune_model() successfully completed......................................
2023-08-31 16:44:10,244:INFO:Initializing plot_model()
2023-08-31 16:44:10,244:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:44:10,244:INFO:Checking exceptions
2023-08-31 16:44:10,246:INFO:Preloading libraries
2023-08-31 16:44:10,247:INFO:Copying training dataset
2023-08-31 16:44:10,247:INFO:Plot type: error
2023-08-31 16:44:10,283:INFO:Fitting Model
2023-08-31 16:44:10,283:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 16:44:10,284:INFO:Scoring test/hold-out set
2023-08-31 16:44:10,438:INFO:Visual Rendered Successfully
2023-08-31 16:44:10,537:INFO:plot_model() successfully completed......................................
2023-08-31 16:44:10,547:INFO:Initializing plot_model()
2023-08-31 16:44:10,547:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:44:10,547:INFO:Checking exceptions
2023-08-31 16:44:10,550:INFO:Preloading libraries
2023-08-31 16:44:10,550:INFO:Copying training dataset
2023-08-31 16:44:10,550:INFO:Plot type: feature
2023-08-31 16:44:10,608:INFO:Visual Rendered Successfully
2023-08-31 16:44:10,709:INFO:plot_model() successfully completed......................................
2023-08-31 16:44:10,720:INFO:Initializing finalize_model()
2023-08-31 16:44:10,720:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 16:44:10,720:INFO:Finalizing BayesianRidge()
2023-08-31 16:44:10,722:INFO:Initializing create_model()
2023-08-31 16:44:10,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 16:44:10,722:INFO:Checking exceptions
2023-08-31 16:44:10,723:INFO:Importing libraries
2023-08-31 16:44:10,723:INFO:Copying training dataset
2023-08-31 16:44:10,723:INFO:Defining folds
2023-08-31 16:44:10,723:INFO:Declaring metric variables
2023-08-31 16:44:10,723:INFO:Importing untrained model
2023-08-31 16:44:10,723:INFO:Declaring custom model
2023-08-31 16:44:10,724:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:44:10,724:INFO:Cross validation set to False
2023-08-31 16:44:10,724:INFO:Fitting Model
2023-08-31 16:44:10,751:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:44:10,751:INFO:create_model() successfully completed......................................
2023-08-31 16:44:10,896:INFO:_master_model_container: 9
2023-08-31 16:44:10,896:INFO:_display_container: 7
2023-08-31 16:44:10,901:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:44:10,901:INFO:finalize_model() successfully completed......................................
2023-08-31 16:44:11,051:INFO:Initializing predict_model()
2023-08-31 16:44:11,051:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2afb68610>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2b64a7f60>)
2023-08-31 16:44:11,052:INFO:Checking exceptions
2023-08-31 16:44:11,052:INFO:Preloading libraries
2023-08-31 16:44:11,053:INFO:Set up data.
2023-08-31 16:44:11,056:INFO:Set up index.
2023-08-31 16:46:35,994:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-08-31 16:48:13,351:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-08-31 16:48:42,561:INFO:PyCaret RegressionExperiment
2023-08-31 16:48:42,561:INFO:Logging name: reg-default-name
2023-08-31 16:48:42,561:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 16:48:42,561:INFO:version 3.0.2
2023-08-31 16:48:42,561:INFO:Initializing setup()
2023-08-31 16:48:42,561:INFO:self.USI: fe03
2023-08-31 16:48:42,561:INFO:self._variable_keys: {'seed', 'X_test', 'fold_generator', 'target_param', 'logging_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'data', 'log_plots_param', 'idx', 'X', 'y_train', 'html_param', 'y', 'gpu_param', 'n_jobs_param', 'exp_name_log', 'pipeline', 'gpu_n_jobs_param', 'memory', 'USI', 'exp_id', 'X_train', 'y_test', 'fold_shuffle_param', 'transform_target_param'}
2023-08-31 16:48:42,561:INFO:Checking environment
2023-08-31 16:48:42,561:INFO:python_version: 3.11.4
2023-08-31 16:48:42,561:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 16:48:42,561:INFO:machine: arm64
2023-08-31 16:48:42,561:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:48:42,562:INFO:Memory: svmem(total=17179869184, available=3475816448, percent=79.8, used=5574377472, free=165658624, active=3535601664, inactive=3302719488, wired=2038775808)
2023-08-31 16:48:42,562:INFO:Physical Core: 12
2023-08-31 16:48:42,562:INFO:Logical Core: 12
2023-08-31 16:48:42,562:INFO:Checking libraries
2023-08-31 16:48:42,562:INFO:System:
2023-08-31 16:48:42,562:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 16:48:42,562:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 16:48:42,562:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:48:42,562:INFO:PyCaret required dependencies:
2023-08-31 16:48:42,562:INFO:                 pip: 23.2.1
2023-08-31 16:48:42,562:INFO:          setuptools: 68.0.0
2023-08-31 16:48:42,562:INFO:             pycaret: 3.0.2
2023-08-31 16:48:42,562:INFO:             IPython: 8.14.0
2023-08-31 16:48:42,562:INFO:          ipywidgets: 8.1.0
2023-08-31 16:48:42,562:INFO:                tqdm: 4.64.1
2023-08-31 16:48:42,562:INFO:               numpy: 1.25.2
2023-08-31 16:48:42,562:INFO:              pandas: 1.5.0
2023-08-31 16:48:42,562:INFO:              jinja2: 3.1.2
2023-08-31 16:48:42,562:INFO:               scipy: 1.9.3
2023-08-31 16:48:42,562:INFO:              joblib: 1.2.0
2023-08-31 16:48:42,562:INFO:             sklearn: 1.2.2
2023-08-31 16:48:42,562:INFO:                pyod: 1.0.9
2023-08-31 16:48:42,562:INFO:            imblearn: 0.10.1
2023-08-31 16:48:42,562:INFO:   category_encoders: 2.6.1
2023-08-31 16:48:42,562:INFO:            lightgbm: 3.3.5
2023-08-31 16:48:42,562:INFO:               numba: 0.57.0
2023-08-31 16:48:42,562:INFO:            requests: 2.28.0
2023-08-31 16:48:42,562:INFO:          matplotlib: 3.6.2
2023-08-31 16:48:42,562:INFO:          scikitplot: 0.3.7
2023-08-31 16:48:42,562:INFO:         yellowbrick: 1.5
2023-08-31 16:48:42,562:INFO:              plotly: 5.9.0
2023-08-31 16:48:42,562:INFO:             kaleido: 0.2.1
2023-08-31 16:48:42,562:INFO:         statsmodels: 0.13.5
2023-08-31 16:48:42,562:INFO:              sktime: 0.17.0
2023-08-31 16:48:42,562:INFO:               tbats: 1.1.3
2023-08-31 16:48:42,562:INFO:            pmdarima: 2.0.3
2023-08-31 16:48:42,562:INFO:              psutil: 5.9.0
2023-08-31 16:48:42,562:INFO:PyCaret optional dependencies:
2023-08-31 16:48:42,562:INFO:                shap: Not installed
2023-08-31 16:48:42,562:INFO:           interpret: Not installed
2023-08-31 16:48:42,562:INFO:                umap: Not installed
2023-08-31 16:48:42,562:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 16:48:42,562:INFO:  explainerdashboard: Not installed
2023-08-31 16:48:42,562:INFO:             autoviz: Not installed
2023-08-31 16:48:42,562:INFO:           fairlearn: Not installed
2023-08-31 16:48:42,562:INFO:             xgboost: Not installed
2023-08-31 16:48:42,562:INFO:            catboost: Not installed
2023-08-31 16:48:42,562:INFO:              kmodes: Not installed
2023-08-31 16:48:42,562:INFO:             mlxtend: Not installed
2023-08-31 16:48:42,562:INFO:       statsforecast: Not installed
2023-08-31 16:48:42,562:INFO:        tune_sklearn: Not installed
2023-08-31 16:48:42,562:INFO:                 ray: Not installed
2023-08-31 16:48:42,562:INFO:            hyperopt: Not installed
2023-08-31 16:48:42,562:INFO:              optuna: Not installed
2023-08-31 16:48:42,562:INFO:               skopt: Not installed
2023-08-31 16:48:42,562:INFO:              mlflow: Not installed
2023-08-31 16:48:42,562:INFO:              gradio: Not installed
2023-08-31 16:48:42,562:INFO:             fastapi: Not installed
2023-08-31 16:48:42,562:INFO:             uvicorn: Not installed
2023-08-31 16:48:42,562:INFO:              m2cgen: Not installed
2023-08-31 16:48:42,562:INFO:           evidently: Not installed
2023-08-31 16:48:42,562:INFO:               fugue: Not installed
2023-08-31 16:48:42,562:INFO:           streamlit: Not installed
2023-08-31 16:48:42,562:INFO:             prophet: Not installed
2023-08-31 16:48:42,562:INFO:None
2023-08-31 16:48:42,563:INFO:Set up data.
2023-08-31 16:48:42,566:INFO:Set up train/test split.
2023-08-31 16:48:42,567:INFO:Set up index.
2023-08-31 16:48:42,567:INFO:Set up folding strategy.
2023-08-31 16:48:42,567:INFO:Assigning column types.
2023-08-31 16:48:42,569:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 16:48:42,569:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,571:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,574:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,601:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,622:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,622:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,624:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,626:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,653:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,674:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 16:48:42,676:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,678:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,725:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,728:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,730:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,756:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,778:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 16:48:42,782:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,833:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,879:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,879:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 16:48:42,910:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,930:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:48:42,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:42,982:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 16:48:43,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:43,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,063:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:48:43,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,084:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 16:48:43,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,189:INFO:Preparing preprocessing pipeline...
2023-08-31 16:48:43,189:INFO:Set up simple imputation.
2023-08-31 16:48:43,189:INFO:Set up column name cleaning.
2023-08-31 16:48:43,199:INFO:Finished creating preprocessing pipeline.
2023-08-31 16:48:43,200:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Adj Close',
                                             'Volume', 'Close_Shift', 'Return',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-08-31 16:48:43,200:INFO:Creating final display dataframe.
2023-08-31 16:48:43,227:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape        (3486, 10)
4        Transformed data shape        (3486, 10)
5   Transformed train set shape        (2440, 10)
6    Transformed test set shape        (1046, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              fe03
2023-08-31 16:48:43,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:48:43,334:INFO:setup() successfully completed in 0.78s...............
2023-08-31 16:48:45,927:INFO:Initializing create_model()
2023-08-31 16:48:45,927:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:48:45,927:INFO:Checking exceptions
2023-08-31 16:48:45,933:INFO:Importing libraries
2023-08-31 16:48:45,933:INFO:Copying training dataset
2023-08-31 16:48:45,936:INFO:Defining folds
2023-08-31 16:48:45,936:INFO:Declaring metric variables
2023-08-31 16:48:45,937:INFO:Importing untrained model
2023-08-31 16:48:45,939:INFO:Ridge Regression Imported successfully
2023-08-31 16:48:45,942:INFO:Starting cross validation
2023-08-31 16:48:45,942:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:48:46,017:INFO:Calculating mean and std
2023-08-31 16:48:46,017:INFO:Creating metrics dataframe
2023-08-31 16:48:46,019:INFO:Finalizing model
2023-08-31 16:48:46,033:INFO:Uploading results into container
2023-08-31 16:48:46,033:INFO:Uploading model into container now
2023-08-31 16:48:46,037:INFO:_master_model_container: 1
2023-08-31 16:48:46,037:INFO:_display_container: 2
2023-08-31 16:48:46,037:INFO:Ridge(random_state=123)
2023-08-31 16:48:46,037:INFO:create_model() successfully completed......................................
2023-08-31 16:48:50,641:INFO:Initializing create_model()
2023-08-31 16:48:50,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:48:50,642:INFO:Checking exceptions
2023-08-31 16:48:50,649:INFO:Importing libraries
2023-08-31 16:48:50,649:INFO:Copying training dataset
2023-08-31 16:48:50,652:INFO:Defining folds
2023-08-31 16:48:50,652:INFO:Declaring metric variables
2023-08-31 16:48:50,653:INFO:Importing untrained model
2023-08-31 16:48:50,655:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:48:50,658:INFO:Starting cross validation
2023-08-31 16:48:50,659:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:48:50,743:INFO:Calculating mean and std
2023-08-31 16:48:50,743:INFO:Creating metrics dataframe
2023-08-31 16:48:50,745:INFO:Finalizing model
2023-08-31 16:48:50,822:INFO:Uploading results into container
2023-08-31 16:48:50,823:INFO:Uploading model into container now
2023-08-31 16:48:50,830:INFO:_master_model_container: 2
2023-08-31 16:48:50,830:INFO:_display_container: 3
2023-08-31 16:48:50,831:INFO:BayesianRidge()
2023-08-31 16:48:50,831:INFO:create_model() successfully completed......................................
2023-08-31 16:48:51,315:INFO:Initializing create_model()
2023-08-31 16:48:51,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:48:51,315:INFO:Checking exceptions
2023-08-31 16:48:51,321:INFO:Importing libraries
2023-08-31 16:48:51,322:INFO:Copying training dataset
2023-08-31 16:48:51,325:INFO:Defining folds
2023-08-31 16:48:51,325:INFO:Declaring metric variables
2023-08-31 16:48:51,326:INFO:Importing untrained model
2023-08-31 16:48:51,328:INFO:Least Angle Regression Imported successfully
2023-08-31 16:48:51,331:INFO:Starting cross validation
2023-08-31 16:48:51,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:48:51,424:INFO:Calculating mean and std
2023-08-31 16:48:51,424:INFO:Creating metrics dataframe
2023-08-31 16:48:51,426:INFO:Finalizing model
2023-08-31 16:48:51,439:INFO:Uploading results into container
2023-08-31 16:48:51,439:INFO:Uploading model into container now
2023-08-31 16:48:51,443:INFO:_master_model_container: 3
2023-08-31 16:48:51,443:INFO:_display_container: 4
2023-08-31 16:48:51,443:INFO:Lars(random_state=123)
2023-08-31 16:48:51,444:INFO:create_model() successfully completed......................................
2023-08-31 16:48:56,387:INFO:Initializing tune_model()
2023-08-31 16:48:56,388:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:48:56,388:INFO:Checking exceptions
2023-08-31 16:48:56,396:INFO:Copying training dataset
2023-08-31 16:48:56,398:INFO:Checking base model
2023-08-31 16:48:56,398:INFO:Base model : Ridge Regression
2023-08-31 16:48:56,400:INFO:Declaring metric variables
2023-08-31 16:48:56,401:INFO:Defining Hyperparameters
2023-08-31 16:48:56,557:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 16:48:56,557:INFO:Tuning with n_jobs=-1
2023-08-31 16:48:56,557:INFO:Initializing RandomizedSearchCV
2023-08-31 16:48:56,559:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 16:48:56,719:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 16:48:56,720:INFO:Hyperparameter search completed
2023-08-31 16:48:56,720:INFO:SubProcess create_model() called ==================================
2023-08-31 16:48:56,720:INFO:Initializing create_model()
2023-08-31 16:48:56,720:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b938fc50>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 16:48:56,720:INFO:Checking exceptions
2023-08-31 16:48:56,720:INFO:Importing libraries
2023-08-31 16:48:56,720:INFO:Copying training dataset
2023-08-31 16:48:56,722:INFO:Defining folds
2023-08-31 16:48:56,722:INFO:Declaring metric variables
2023-08-31 16:48:56,723:INFO:Importing untrained model
2023-08-31 16:48:56,723:INFO:Declaring custom model
2023-08-31 16:48:56,725:INFO:Ridge Regression Imported successfully
2023-08-31 16:48:56,727:INFO:Starting cross validation
2023-08-31 16:48:56,727:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:48:56,780:INFO:Calculating mean and std
2023-08-31 16:48:56,780:INFO:Creating metrics dataframe
2023-08-31 16:48:56,782:INFO:Finalizing model
2023-08-31 16:48:56,795:INFO:Uploading results into container
2023-08-31 16:48:56,795:INFO:Uploading model into container now
2023-08-31 16:48:56,795:INFO:_master_model_container: 4
2023-08-31 16:48:56,795:INFO:_display_container: 5
2023-08-31 16:48:56,795:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 16:48:56,796:INFO:create_model() successfully completed......................................
2023-08-31 16:48:56,928:INFO:SubProcess create_model() end ==================================
2023-08-31 16:48:56,928:INFO:choose_better activated
2023-08-31 16:48:56,929:INFO:SubProcess create_model() called ==================================
2023-08-31 16:48:56,930:INFO:Initializing create_model()
2023-08-31 16:48:56,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:48:56,930:INFO:Checking exceptions
2023-08-31 16:48:56,930:INFO:Importing libraries
2023-08-31 16:48:56,930:INFO:Copying training dataset
2023-08-31 16:48:56,933:INFO:Defining folds
2023-08-31 16:48:56,933:INFO:Declaring metric variables
2023-08-31 16:48:56,933:INFO:Importing untrained model
2023-08-31 16:48:56,933:INFO:Declaring custom model
2023-08-31 16:48:56,933:INFO:Ridge Regression Imported successfully
2023-08-31 16:48:56,933:INFO:Starting cross validation
2023-08-31 16:48:56,934:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:48:56,985:INFO:Calculating mean and std
2023-08-31 16:48:56,985:INFO:Creating metrics dataframe
2023-08-31 16:48:56,986:INFO:Finalizing model
2023-08-31 16:48:56,997:INFO:Uploading results into container
2023-08-31 16:48:56,997:INFO:Uploading model into container now
2023-08-31 16:48:56,997:INFO:_master_model_container: 5
2023-08-31 16:48:56,997:INFO:_display_container: 6
2023-08-31 16:48:56,997:INFO:Ridge(random_state=123)
2023-08-31 16:48:56,997:INFO:create_model() successfully completed......................................
2023-08-31 16:48:57,121:INFO:SubProcess create_model() end ==================================
2023-08-31 16:48:57,121:INFO:Ridge(random_state=123) result for RMSE is 0.9211
2023-08-31 16:48:57,121:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 0.9211
2023-08-31 16:48:57,121:INFO:Ridge(random_state=123) is best model
2023-08-31 16:48:57,122:INFO:choose_better completed
2023-08-31 16:48:57,122:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:48:57,126:INFO:_master_model_container: 5
2023-08-31 16:48:57,126:INFO:_display_container: 5
2023-08-31 16:48:57,126:INFO:Ridge(random_state=123)
2023-08-31 16:48:57,126:INFO:tune_model() successfully completed......................................
2023-08-31 16:48:57,295:INFO:Initializing tune_model()
2023-08-31 16:48:57,295:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:48:57,295:INFO:Checking exceptions
2023-08-31 16:48:57,301:INFO:Copying training dataset
2023-08-31 16:48:57,303:INFO:Checking base model
2023-08-31 16:48:57,303:INFO:Base model : Bayesian Ridge
2023-08-31 16:48:57,304:INFO:Declaring metric variables
2023-08-31 16:48:57,306:INFO:Defining Hyperparameters
2023-08-31 16:48:57,462:INFO:Tuning with n_jobs=-1
2023-08-31 16:48:57,462:INFO:Initializing RandomizedSearchCV
2023-08-31 16:49:18,976:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-06, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.05, 'actual_estimator__alpha_1': 0.2}
2023-08-31 16:49:18,977:INFO:Hyperparameter search completed
2023-08-31 16:49:18,978:INFO:SubProcess create_model() called ==================================
2023-08-31 16:49:18,978:INFO:Initializing create_model()
2023-08-31 16:49:18,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2d1a29210>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 1e-06, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 0.05, 'alpha_1': 0.2})
2023-08-31 16:49:18,978:INFO:Checking exceptions
2023-08-31 16:49:18,978:INFO:Importing libraries
2023-08-31 16:49:18,978:INFO:Copying training dataset
2023-08-31 16:49:18,981:INFO:Defining folds
2023-08-31 16:49:18,982:INFO:Declaring metric variables
2023-08-31 16:49:18,984:INFO:Importing untrained model
2023-08-31 16:49:18,984:INFO:Declaring custom model
2023-08-31 16:49:18,985:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:49:18,988:INFO:Starting cross validation
2023-08-31 16:49:18,988:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:49:19,046:INFO:Calculating mean and std
2023-08-31 16:49:19,046:INFO:Creating metrics dataframe
2023-08-31 16:49:19,048:INFO:Finalizing model
2023-08-31 16:49:19,107:INFO:Uploading results into container
2023-08-31 16:49:19,108:INFO:Uploading model into container now
2023-08-31 16:49:19,108:INFO:_master_model_container: 6
2023-08-31 16:49:19,108:INFO:_display_container: 6
2023-08-31 16:49:19,109:INFO:BayesianRidge(alpha_1=0.2, alpha_2=0.05, compute_score=True, lambda_2=0.3)
2023-08-31 16:49:19,109:INFO:create_model() successfully completed......................................
2023-08-31 16:49:19,327:INFO:SubProcess create_model() end ==================================
2023-08-31 16:49:19,327:INFO:choose_better activated
2023-08-31 16:49:19,329:INFO:SubProcess create_model() called ==================================
2023-08-31 16:49:19,331:INFO:Initializing create_model()
2023-08-31 16:49:19,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:49:19,331:INFO:Checking exceptions
2023-08-31 16:49:19,332:INFO:Importing libraries
2023-08-31 16:49:19,332:INFO:Copying training dataset
2023-08-31 16:49:19,334:INFO:Defining folds
2023-08-31 16:49:19,334:INFO:Declaring metric variables
2023-08-31 16:49:19,334:INFO:Importing untrained model
2023-08-31 16:49:19,334:INFO:Declaring custom model
2023-08-31 16:49:19,334:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:49:19,334:INFO:Starting cross validation
2023-08-31 16:49:19,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:49:19,391:INFO:Calculating mean and std
2023-08-31 16:49:19,392:INFO:Creating metrics dataframe
2023-08-31 16:49:19,393:INFO:Finalizing model
2023-08-31 16:49:19,427:INFO:Uploading results into container
2023-08-31 16:49:19,427:INFO:Uploading model into container now
2023-08-31 16:49:19,427:INFO:_master_model_container: 7
2023-08-31 16:49:19,427:INFO:_display_container: 7
2023-08-31 16:49:19,428:INFO:BayesianRidge()
2023-08-31 16:49:19,428:INFO:create_model() successfully completed......................................
2023-08-31 16:49:19,618:INFO:SubProcess create_model() end ==================================
2023-08-31 16:49:19,618:INFO:BayesianRidge() result for RMSE is 0.9211
2023-08-31 16:49:19,618:INFO:BayesianRidge(alpha_1=0.2, alpha_2=0.05, compute_score=True, lambda_2=0.3) result for RMSE is 0.9211
2023-08-31 16:49:19,619:INFO:BayesianRidge() is best model
2023-08-31 16:49:19,619:INFO:choose_better completed
2023-08-31 16:49:19,619:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:49:19,634:INFO:_master_model_container: 7
2023-08-31 16:49:19,634:INFO:_display_container: 6
2023-08-31 16:49:19,635:INFO:BayesianRidge()
2023-08-31 16:49:19,635:INFO:tune_model() successfully completed......................................
2023-08-31 16:49:30,409:INFO:Initializing tune_model()
2023-08-31 16:49:30,409:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:49:30,410:INFO:Checking exceptions
2023-08-31 16:49:30,417:INFO:Copying training dataset
2023-08-31 16:49:30,419:INFO:Checking base model
2023-08-31 16:49:30,419:INFO:Base model : Least Angle Regression
2023-08-31 16:49:30,421:INFO:Declaring metric variables
2023-08-31 16:49:30,422:INFO:Defining Hyperparameters
2023-08-31 16:49:30,422:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 16:49:30,584:INFO:Tuning with n_jobs=-1
2023-08-31 16:49:30,585:INFO:Initializing GridSearchCV
2023-08-31 16:49:31,196:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 16:49:31,196:INFO:Hyperparameter search completed
2023-08-31 16:49:31,197:INFO:SubProcess create_model() called ==================================
2023-08-31 16:49:31,197:INFO:Initializing create_model()
2023-08-31 16:49:31,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2cf06ed10>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 16:49:31,197:INFO:Checking exceptions
2023-08-31 16:49:31,197:INFO:Importing libraries
2023-08-31 16:49:31,197:INFO:Copying training dataset
2023-08-31 16:49:31,199:INFO:Defining folds
2023-08-31 16:49:31,199:INFO:Declaring metric variables
2023-08-31 16:49:31,201:INFO:Importing untrained model
2023-08-31 16:49:31,201:INFO:Declaring custom model
2023-08-31 16:49:31,202:INFO:Least Angle Regression Imported successfully
2023-08-31 16:49:31,205:INFO:Starting cross validation
2023-08-31 16:49:31,205:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:49:31,255:INFO:Calculating mean and std
2023-08-31 16:49:31,256:INFO:Creating metrics dataframe
2023-08-31 16:49:31,258:INFO:Finalizing model
2023-08-31 16:49:31,271:INFO:Uploading results into container
2023-08-31 16:49:31,272:INFO:Uploading model into container now
2023-08-31 16:49:31,272:INFO:_master_model_container: 8
2023-08-31 16:49:31,272:INFO:_display_container: 7
2023-08-31 16:49:31,272:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 16:49:31,272:INFO:create_model() successfully completed......................................
2023-08-31 16:49:31,412:INFO:SubProcess create_model() end ==================================
2023-08-31 16:49:31,412:INFO:choose_better activated
2023-08-31 16:49:31,414:INFO:SubProcess create_model() called ==================================
2023-08-31 16:49:31,414:INFO:Initializing create_model()
2023-08-31 16:49:31,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:49:31,414:INFO:Checking exceptions
2023-08-31 16:49:31,415:INFO:Importing libraries
2023-08-31 16:49:31,415:INFO:Copying training dataset
2023-08-31 16:49:31,417:INFO:Defining folds
2023-08-31 16:49:31,417:INFO:Declaring metric variables
2023-08-31 16:49:31,417:INFO:Importing untrained model
2023-08-31 16:49:31,417:INFO:Declaring custom model
2023-08-31 16:49:31,417:INFO:Least Angle Regression Imported successfully
2023-08-31 16:49:31,417:INFO:Starting cross validation
2023-08-31 16:49:31,417:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:49:31,469:INFO:Calculating mean and std
2023-08-31 16:49:31,469:INFO:Creating metrics dataframe
2023-08-31 16:49:31,470:INFO:Finalizing model
2023-08-31 16:49:31,481:INFO:Uploading results into container
2023-08-31 16:49:31,481:INFO:Uploading model into container now
2023-08-31 16:49:31,481:INFO:_master_model_container: 9
2023-08-31 16:49:31,481:INFO:_display_container: 8
2023-08-31 16:49:31,481:INFO:Lars(random_state=123)
2023-08-31 16:49:31,482:INFO:create_model() successfully completed......................................
2023-08-31 16:49:31,607:INFO:SubProcess create_model() end ==================================
2023-08-31 16:49:31,607:INFO:Lars(random_state=123) result for RMSE is 2.7026
2023-08-31 16:49:31,608:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 1.8162
2023-08-31 16:49:31,608:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 16:49:31,608:INFO:choose_better completed
2023-08-31 16:49:31,611:INFO:_master_model_container: 9
2023-08-31 16:49:31,612:INFO:_display_container: 7
2023-08-31 16:49:31,612:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 16:49:31,612:INFO:tune_model() successfully completed......................................
2023-08-31 16:49:33,650:INFO:Initializing plot_model()
2023-08-31 16:49:33,650:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:49:33,650:INFO:Checking exceptions
2023-08-31 16:49:33,653:INFO:Preloading libraries
2023-08-31 16:49:33,653:INFO:Copying training dataset
2023-08-31 16:49:33,653:INFO:Plot type: error
2023-08-31 16:49:33,684:INFO:Fitting Model
2023-08-31 16:49:33,684:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 16:49:33,684:INFO:Scoring test/hold-out set
2023-08-31 16:49:33,802:INFO:Visual Rendered Successfully
2023-08-31 16:49:33,979:INFO:plot_model() successfully completed......................................
2023-08-31 16:49:37,570:INFO:Initializing plot_model()
2023-08-31 16:49:37,570:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:49:37,570:INFO:Checking exceptions
2023-08-31 16:49:37,574:INFO:Preloading libraries
2023-08-31 16:49:37,575:INFO:Copying training dataset
2023-08-31 16:49:37,575:INFO:Plot type: feature
2023-08-31 16:49:37,645:INFO:Visual Rendered Successfully
2023-08-31 16:49:37,780:INFO:plot_model() successfully completed......................................
2023-08-31 16:50:32,689:INFO:Initializing finalize_model()
2023-08-31 16:50:32,689:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 16:50:32,689:INFO:Finalizing BayesianRidge()
2023-08-31 16:50:32,691:INFO:Initializing create_model()
2023-08-31 16:50:32,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 16:50:32,691:INFO:Checking exceptions
2023-08-31 16:50:32,692:INFO:Importing libraries
2023-08-31 16:50:32,692:INFO:Copying training dataset
2023-08-31 16:50:32,692:INFO:Defining folds
2023-08-31 16:50:32,693:INFO:Declaring metric variables
2023-08-31 16:50:32,693:INFO:Importing untrained model
2023-08-31 16:50:32,693:INFO:Declaring custom model
2023-08-31 16:50:32,693:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:50:32,693:INFO:Cross validation set to False
2023-08-31 16:50:32,693:INFO:Fitting Model
2023-08-31 16:50:32,772:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Adj Close',
                                             'Volume', 'Close_Shift', 'Return',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:50:32,772:INFO:create_model() successfully completed......................................
2023-08-31 16:50:33,036:INFO:_master_model_container: 9
2023-08-31 16:50:33,036:INFO:_display_container: 7
2023-08-31 16:50:33,038:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Adj Close',
                                             'Volume', 'Close_Shift', 'Return',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:50:33,038:INFO:finalize_model() successfully completed......................................
2023-08-31 16:50:35,046:INFO:Initializing predict_model()
2023-08-31 16:50:35,047:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cda1eb90>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Adj Close',
                                             'Volume', 'Close_Shift', 'Return',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x10bfdd6c0>)
2023-08-31 16:50:35,047:INFO:Checking exceptions
2023-08-31 16:50:35,047:INFO:Preloading libraries
2023-08-31 16:50:35,049:INFO:Set up data.
2023-08-31 16:50:35,053:INFO:Set up index.
2023-08-31 16:51:47,063:INFO:PyCaret RegressionExperiment
2023-08-31 16:51:47,063:INFO:Logging name: reg-default-name
2023-08-31 16:51:47,063:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 16:51:47,063:INFO:version 3.0.2
2023-08-31 16:51:47,063:INFO:Initializing setup()
2023-08-31 16:51:47,063:INFO:self.USI: c36b
2023-08-31 16:51:47,063:INFO:self._variable_keys: {'seed', 'X_test', 'fold_generator', 'target_param', 'logging_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'data', 'log_plots_param', 'idx', 'X', 'y_train', 'html_param', 'y', 'gpu_param', 'n_jobs_param', 'exp_name_log', 'pipeline', 'gpu_n_jobs_param', 'memory', 'USI', 'exp_id', 'X_train', 'y_test', 'fold_shuffle_param', 'transform_target_param'}
2023-08-31 16:51:47,063:INFO:Checking environment
2023-08-31 16:51:47,063:INFO:python_version: 3.11.4
2023-08-31 16:51:47,063:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 16:51:47,063:INFO:machine: arm64
2023-08-31 16:51:47,063:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:51:47,063:INFO:Memory: svmem(total=17179869184, available=3855024128, percent=77.6, used=5854380032, free=219299840, active=3643441152, inactive=3625566208, wired=2210938880)
2023-08-31 16:51:47,063:INFO:Physical Core: 12
2023-08-31 16:51:47,063:INFO:Logical Core: 12
2023-08-31 16:51:47,063:INFO:Checking libraries
2023-08-31 16:51:47,063:INFO:System:
2023-08-31 16:51:47,063:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 16:51:47,063:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 16:51:47,063:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 16:51:47,063:INFO:PyCaret required dependencies:
2023-08-31 16:51:47,063:INFO:                 pip: 23.2.1
2023-08-31 16:51:47,063:INFO:          setuptools: 68.0.0
2023-08-31 16:51:47,063:INFO:             pycaret: 3.0.2
2023-08-31 16:51:47,063:INFO:             IPython: 8.14.0
2023-08-31 16:51:47,063:INFO:          ipywidgets: 8.1.0
2023-08-31 16:51:47,064:INFO:                tqdm: 4.64.1
2023-08-31 16:51:47,064:INFO:               numpy: 1.25.2
2023-08-31 16:51:47,064:INFO:              pandas: 1.5.0
2023-08-31 16:51:47,064:INFO:              jinja2: 3.1.2
2023-08-31 16:51:47,064:INFO:               scipy: 1.9.3
2023-08-31 16:51:47,064:INFO:              joblib: 1.2.0
2023-08-31 16:51:47,064:INFO:             sklearn: 1.2.2
2023-08-31 16:51:47,064:INFO:                pyod: 1.0.9
2023-08-31 16:51:47,064:INFO:            imblearn: 0.10.1
2023-08-31 16:51:47,064:INFO:   category_encoders: 2.6.1
2023-08-31 16:51:47,064:INFO:            lightgbm: 3.3.5
2023-08-31 16:51:47,064:INFO:               numba: 0.57.0
2023-08-31 16:51:47,064:INFO:            requests: 2.28.0
2023-08-31 16:51:47,064:INFO:          matplotlib: 3.6.2
2023-08-31 16:51:47,064:INFO:          scikitplot: 0.3.7
2023-08-31 16:51:47,064:INFO:         yellowbrick: 1.5
2023-08-31 16:51:47,064:INFO:              plotly: 5.9.0
2023-08-31 16:51:47,064:INFO:             kaleido: 0.2.1
2023-08-31 16:51:47,064:INFO:         statsmodels: 0.13.5
2023-08-31 16:51:47,064:INFO:              sktime: 0.17.0
2023-08-31 16:51:47,064:INFO:               tbats: 1.1.3
2023-08-31 16:51:47,064:INFO:            pmdarima: 2.0.3
2023-08-31 16:51:47,064:INFO:              psutil: 5.9.0
2023-08-31 16:51:47,064:INFO:PyCaret optional dependencies:
2023-08-31 16:51:47,064:INFO:                shap: Not installed
2023-08-31 16:51:47,064:INFO:           interpret: Not installed
2023-08-31 16:51:47,064:INFO:                umap: Not installed
2023-08-31 16:51:47,064:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 16:51:47,064:INFO:  explainerdashboard: Not installed
2023-08-31 16:51:47,064:INFO:             autoviz: Not installed
2023-08-31 16:51:47,064:INFO:           fairlearn: Not installed
2023-08-31 16:51:47,064:INFO:             xgboost: Not installed
2023-08-31 16:51:47,064:INFO:            catboost: Not installed
2023-08-31 16:51:47,064:INFO:              kmodes: Not installed
2023-08-31 16:51:47,064:INFO:             mlxtend: Not installed
2023-08-31 16:51:47,064:INFO:       statsforecast: Not installed
2023-08-31 16:51:47,064:INFO:        tune_sklearn: Not installed
2023-08-31 16:51:47,064:INFO:                 ray: Not installed
2023-08-31 16:51:47,064:INFO:            hyperopt: Not installed
2023-08-31 16:51:47,064:INFO:              optuna: Not installed
2023-08-31 16:51:47,064:INFO:               skopt: Not installed
2023-08-31 16:51:47,064:INFO:              mlflow: Not installed
2023-08-31 16:51:47,064:INFO:              gradio: Not installed
2023-08-31 16:51:47,064:INFO:             fastapi: Not installed
2023-08-31 16:51:47,064:INFO:             uvicorn: Not installed
2023-08-31 16:51:47,064:INFO:              m2cgen: Not installed
2023-08-31 16:51:47,064:INFO:           evidently: Not installed
2023-08-31 16:51:47,064:INFO:               fugue: Not installed
2023-08-31 16:51:47,064:INFO:           streamlit: Not installed
2023-08-31 16:51:47,064:INFO:             prophet: Not installed
2023-08-31 16:51:47,064:INFO:None
2023-08-31 16:51:47,064:INFO:Set up data.
2023-08-31 16:51:47,066:INFO:Set up train/test split.
2023-08-31 16:51:47,068:INFO:Set up index.
2023-08-31 16:51:47,068:INFO:Set up folding strategy.
2023-08-31 16:51:47,068:INFO:Assigning column types.
2023-08-31 16:51:47,069:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 16:51:47,070:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,072:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,074:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,101:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,121:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,121:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,122:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,124:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,126:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,152:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,173:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 16:51:47,176:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,178:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,225:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,227:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,229:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,255:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,276:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 16:51:47,281:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,307:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,327:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,331:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,378:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,378:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 16:51:47,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,458:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,478:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,479:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 16:51:47,509:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,560:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 16:51:47,581:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,581:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,581:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 16:51:47,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,632:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,688:INFO:Preparing preprocessing pipeline...
2023-08-31 16:51:47,688:INFO:Set up simple imputation.
2023-08-31 16:51:47,688:INFO:Set up column name cleaning.
2023-08-31 16:51:47,698:INFO:Finished creating preprocessing pipeline.
2023-08-31 16:51:47,699:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Adj Close', 'Volume',
                                             'Close_Shift', 'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-08-31 16:51:47,699:INFO:Creating final display dataframe.
2023-08-31 16:51:47,724:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            Return
2                   Target type        Regression
3           Original data shape         (986, 10)
4        Transformed data shape         (986, 10)
5   Transformed train set shape         (690, 10)
6    Transformed test set shape         (296, 10)
7              Numeric features                 9
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c36b
2023-08-31 16:51:47,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 16:51:47,831:INFO:setup() successfully completed in 0.77s...............
2023-08-31 16:51:49,330:INFO:Initializing create_model()
2023-08-31 16:51:49,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:51:49,331:INFO:Checking exceptions
2023-08-31 16:51:49,336:INFO:Importing libraries
2023-08-31 16:51:49,336:INFO:Copying training dataset
2023-08-31 16:51:49,339:INFO:Defining folds
2023-08-31 16:51:49,339:INFO:Declaring metric variables
2023-08-31 16:51:49,340:INFO:Importing untrained model
2023-08-31 16:51:49,341:INFO:Ridge Regression Imported successfully
2023-08-31 16:51:49,344:INFO:Starting cross validation
2023-08-31 16:51:49,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:51:49,444:INFO:Calculating mean and std
2023-08-31 16:51:49,444:INFO:Creating metrics dataframe
2023-08-31 16:51:49,446:INFO:Finalizing model
2023-08-31 16:51:49,459:INFO:Uploading results into container
2023-08-31 16:51:49,459:INFO:Uploading model into container now
2023-08-31 16:51:49,463:INFO:_master_model_container: 1
2023-08-31 16:51:49,463:INFO:_display_container: 2
2023-08-31 16:51:49,463:INFO:Ridge(random_state=123)
2023-08-31 16:51:49,464:INFO:create_model() successfully completed......................................
2023-08-31 16:51:51,283:INFO:Initializing create_model()
2023-08-31 16:51:51,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:51:51,284:INFO:Checking exceptions
2023-08-31 16:51:51,289:INFO:Importing libraries
2023-08-31 16:51:51,289:INFO:Copying training dataset
2023-08-31 16:51:51,291:INFO:Defining folds
2023-08-31 16:51:51,292:INFO:Declaring metric variables
2023-08-31 16:51:51,293:INFO:Importing untrained model
2023-08-31 16:51:51,294:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:51:51,297:INFO:Starting cross validation
2023-08-31 16:51:51,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:51:51,358:INFO:Calculating mean and std
2023-08-31 16:51:51,359:INFO:Creating metrics dataframe
2023-08-31 16:51:51,361:INFO:Finalizing model
2023-08-31 16:51:51,374:INFO:Uploading results into container
2023-08-31 16:51:51,375:INFO:Uploading model into container now
2023-08-31 16:51:51,379:INFO:_master_model_container: 2
2023-08-31 16:51:51,379:INFO:_display_container: 3
2023-08-31 16:51:51,379:INFO:BayesianRidge()
2023-08-31 16:51:51,379:INFO:create_model() successfully completed......................................
2023-08-31 16:51:53,141:INFO:Initializing create_model()
2023-08-31 16:51:53,141:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:51:53,141:INFO:Checking exceptions
2023-08-31 16:51:53,148:INFO:Importing libraries
2023-08-31 16:51:53,148:INFO:Copying training dataset
2023-08-31 16:51:53,150:INFO:Defining folds
2023-08-31 16:51:53,150:INFO:Declaring metric variables
2023-08-31 16:51:53,152:INFO:Importing untrained model
2023-08-31 16:51:53,153:INFO:Least Angle Regression Imported successfully
2023-08-31 16:51:53,156:INFO:Starting cross validation
2023-08-31 16:51:53,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:51:53,225:INFO:Calculating mean and std
2023-08-31 16:51:53,225:INFO:Creating metrics dataframe
2023-08-31 16:51:53,228:INFO:Finalizing model
2023-08-31 16:51:53,242:INFO:Uploading results into container
2023-08-31 16:51:53,242:INFO:Uploading model into container now
2023-08-31 16:51:53,246:INFO:_master_model_container: 3
2023-08-31 16:51:53,247:INFO:_display_container: 4
2023-08-31 16:51:53,247:INFO:Lars(random_state=123)
2023-08-31 16:51:53,247:INFO:create_model() successfully completed......................................
2023-08-31 16:51:58,672:INFO:Initializing tune_model()
2023-08-31 16:51:58,672:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:51:58,672:INFO:Checking exceptions
2023-08-31 16:51:58,678:INFO:Copying training dataset
2023-08-31 16:51:58,680:INFO:Checking base model
2023-08-31 16:51:58,680:INFO:Base model : Ridge Regression
2023-08-31 16:51:58,681:INFO:Declaring metric variables
2023-08-31 16:51:58,683:INFO:Defining Hyperparameters
2023-08-31 16:51:58,847:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 16:51:58,847:INFO:Tuning with n_jobs=-1
2023-08-31 16:51:58,847:INFO:Initializing RandomizedSearchCV
2023-08-31 16:51:58,850:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 16:51:59,006:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 16:51:59,006:INFO:Hyperparameter search completed
2023-08-31 16:51:59,006:INFO:SubProcess create_model() called ==================================
2023-08-31 16:51:59,006:INFO:Initializing create_model()
2023-08-31 16:51:59,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ce5b8650>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 16:51:59,006:INFO:Checking exceptions
2023-08-31 16:51:59,006:INFO:Importing libraries
2023-08-31 16:51:59,006:INFO:Copying training dataset
2023-08-31 16:51:59,008:INFO:Defining folds
2023-08-31 16:51:59,008:INFO:Declaring metric variables
2023-08-31 16:51:59,009:INFO:Importing untrained model
2023-08-31 16:51:59,009:INFO:Declaring custom model
2023-08-31 16:51:59,011:INFO:Ridge Regression Imported successfully
2023-08-31 16:51:59,013:INFO:Starting cross validation
2023-08-31 16:51:59,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:51:59,062:INFO:Calculating mean and std
2023-08-31 16:51:59,063:INFO:Creating metrics dataframe
2023-08-31 16:51:59,065:INFO:Finalizing model
2023-08-31 16:51:59,080:INFO:Uploading results into container
2023-08-31 16:51:59,080:INFO:Uploading model into container now
2023-08-31 16:51:59,080:INFO:_master_model_container: 4
2023-08-31 16:51:59,080:INFO:_display_container: 5
2023-08-31 16:51:59,080:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 16:51:59,081:INFO:create_model() successfully completed......................................
2023-08-31 16:51:59,266:INFO:SubProcess create_model() end ==================================
2023-08-31 16:51:59,266:INFO:choose_better activated
2023-08-31 16:51:59,268:INFO:SubProcess create_model() called ==================================
2023-08-31 16:51:59,269:INFO:Initializing create_model()
2023-08-31 16:51:59,269:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:51:59,269:INFO:Checking exceptions
2023-08-31 16:51:59,270:INFO:Importing libraries
2023-08-31 16:51:59,270:INFO:Copying training dataset
2023-08-31 16:51:59,272:INFO:Defining folds
2023-08-31 16:51:59,272:INFO:Declaring metric variables
2023-08-31 16:51:59,272:INFO:Importing untrained model
2023-08-31 16:51:59,272:INFO:Declaring custom model
2023-08-31 16:51:59,272:INFO:Ridge Regression Imported successfully
2023-08-31 16:51:59,272:INFO:Starting cross validation
2023-08-31 16:51:59,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:51:59,324:INFO:Calculating mean and std
2023-08-31 16:51:59,324:INFO:Creating metrics dataframe
2023-08-31 16:51:59,325:INFO:Finalizing model
2023-08-31 16:51:59,337:INFO:Uploading results into container
2023-08-31 16:51:59,337:INFO:Uploading model into container now
2023-08-31 16:51:59,337:INFO:_master_model_container: 5
2023-08-31 16:51:59,337:INFO:_display_container: 6
2023-08-31 16:51:59,337:INFO:Ridge(random_state=123)
2023-08-31 16:51:59,337:INFO:create_model() successfully completed......................................
2023-08-31 16:51:59,613:INFO:SubProcess create_model() end ==================================
2023-08-31 16:51:59,614:INFO:Ridge(random_state=123) result for RMSE is 0.565
2023-08-31 16:51:59,614:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 0.5613
2023-08-31 16:51:59,614:INFO:Ridge(alpha=0.02, random_state=123) is best model
2023-08-31 16:51:59,614:INFO:choose_better completed
2023-08-31 16:51:59,619:INFO:_master_model_container: 5
2023-08-31 16:51:59,619:INFO:_display_container: 5
2023-08-31 16:51:59,620:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 16:51:59,620:INFO:tune_model() successfully completed......................................
2023-08-31 16:52:06,451:INFO:Initializing tune_model()
2023-08-31 16:52:06,452:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:52:06,452:INFO:Checking exceptions
2023-08-31 16:52:06,458:INFO:Copying training dataset
2023-08-31 16:52:06,460:INFO:Checking base model
2023-08-31 16:52:06,460:INFO:Base model : Bayesian Ridge
2023-08-31 16:52:06,461:INFO:Declaring metric variables
2023-08-31 16:52:06,463:INFO:Defining Hyperparameters
2023-08-31 16:52:06,628:INFO:Tuning with n_jobs=-1
2023-08-31 16:52:06,628:INFO:Initializing RandomizedSearchCV
2023-08-31 16:52:29,742:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 0.001, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.0001, 'actual_estimator__alpha_1': 0.3}
2023-08-31 16:52:29,743:INFO:Hyperparameter search completed
2023-08-31 16:52:29,743:INFO:SubProcess create_model() called ==================================
2023-08-31 16:52:29,744:INFO:Initializing create_model()
2023-08-31 16:52:29,744:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ce4afa50>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 0.001, 'fit_intercept': True, 'compute_score': False, 'alpha_2': 0.0001, 'alpha_1': 0.3})
2023-08-31 16:52:29,744:INFO:Checking exceptions
2023-08-31 16:52:29,744:INFO:Importing libraries
2023-08-31 16:52:29,744:INFO:Copying training dataset
2023-08-31 16:52:29,746:INFO:Defining folds
2023-08-31 16:52:29,746:INFO:Declaring metric variables
2023-08-31 16:52:29,747:INFO:Importing untrained model
2023-08-31 16:52:29,747:INFO:Declaring custom model
2023-08-31 16:52:29,749:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:52:29,751:INFO:Starting cross validation
2023-08-31 16:52:29,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:52:29,797:INFO:Calculating mean and std
2023-08-31 16:52:29,797:INFO:Creating metrics dataframe
2023-08-31 16:52:29,799:INFO:Finalizing model
2023-08-31 16:52:29,811:INFO:Uploading results into container
2023-08-31 16:52:29,812:INFO:Uploading model into container now
2023-08-31 16:52:29,812:INFO:_master_model_container: 6
2023-08-31 16:52:29,812:INFO:_display_container: 6
2023-08-31 16:52:29,812:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0001, lambda_1=0.001, lambda_2=0.3)
2023-08-31 16:52:29,812:INFO:create_model() successfully completed......................................
2023-08-31 16:52:29,984:INFO:SubProcess create_model() end ==================================
2023-08-31 16:52:29,984:INFO:choose_better activated
2023-08-31 16:52:29,986:INFO:SubProcess create_model() called ==================================
2023-08-31 16:52:29,986:INFO:Initializing create_model()
2023-08-31 16:52:29,986:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:52:29,986:INFO:Checking exceptions
2023-08-31 16:52:29,987:INFO:Importing libraries
2023-08-31 16:52:29,988:INFO:Copying training dataset
2023-08-31 16:52:29,989:INFO:Defining folds
2023-08-31 16:52:29,989:INFO:Declaring metric variables
2023-08-31 16:52:29,989:INFO:Importing untrained model
2023-08-31 16:52:29,989:INFO:Declaring custom model
2023-08-31 16:52:29,990:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:52:29,990:INFO:Starting cross validation
2023-08-31 16:52:29,990:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:52:30,041:INFO:Calculating mean and std
2023-08-31 16:52:30,041:INFO:Creating metrics dataframe
2023-08-31 16:52:30,042:INFO:Finalizing model
2023-08-31 16:52:30,055:INFO:Uploading results into container
2023-08-31 16:52:30,055:INFO:Uploading model into container now
2023-08-31 16:52:30,055:INFO:_master_model_container: 7
2023-08-31 16:52:30,055:INFO:_display_container: 7
2023-08-31 16:52:30,056:INFO:BayesianRidge()
2023-08-31 16:52:30,056:INFO:create_model() successfully completed......................................
2023-08-31 16:52:30,322:INFO:SubProcess create_model() end ==================================
2023-08-31 16:52:30,322:INFO:BayesianRidge() result for RMSE is 0.5616
2023-08-31 16:52:30,323:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0001, lambda_1=0.001, lambda_2=0.3) result for RMSE is 0.5616
2023-08-31 16:52:30,323:INFO:BayesianRidge() is best model
2023-08-31 16:52:30,323:INFO:choose_better completed
2023-08-31 16:52:30,323:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:52:30,328:INFO:_master_model_container: 7
2023-08-31 16:52:30,328:INFO:_display_container: 6
2023-08-31 16:52:30,329:INFO:BayesianRidge()
2023-08-31 16:52:30,329:INFO:tune_model() successfully completed......................................
2023-08-31 16:52:42,354:INFO:Initializing tune_model()
2023-08-31 16:52:42,355:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 16:52:42,355:INFO:Checking exceptions
2023-08-31 16:52:42,369:INFO:Copying training dataset
2023-08-31 16:52:42,371:INFO:Checking base model
2023-08-31 16:52:42,371:INFO:Base model : Least Angle Regression
2023-08-31 16:52:42,373:INFO:Declaring metric variables
2023-08-31 16:52:42,374:INFO:Defining Hyperparameters
2023-08-31 16:52:42,374:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 16:52:42,598:INFO:Tuning with n_jobs=-1
2023-08-31 16:52:42,598:INFO:Initializing GridSearchCV
2023-08-31 16:52:43,175:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': True}
2023-08-31 16:52:43,175:INFO:Hyperparameter search completed
2023-08-31 16:52:43,175:INFO:SubProcess create_model() called ==================================
2023-08-31 16:52:43,175:INFO:Initializing create_model()
2023-08-31 16:52:43,175:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ce390690>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': True})
2023-08-31 16:52:43,175:INFO:Checking exceptions
2023-08-31 16:52:43,175:INFO:Importing libraries
2023-08-31 16:52:43,175:INFO:Copying training dataset
2023-08-31 16:52:43,177:INFO:Defining folds
2023-08-31 16:52:43,177:INFO:Declaring metric variables
2023-08-31 16:52:43,178:INFO:Importing untrained model
2023-08-31 16:52:43,178:INFO:Declaring custom model
2023-08-31 16:52:43,180:INFO:Least Angle Regression Imported successfully
2023-08-31 16:52:43,182:INFO:Starting cross validation
2023-08-31 16:52:43,182:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:52:43,230:INFO:Calculating mean and std
2023-08-31 16:52:43,230:INFO:Creating metrics dataframe
2023-08-31 16:52:43,232:INFO:Finalizing model
2023-08-31 16:52:43,245:INFO:Uploading results into container
2023-08-31 16:52:43,246:INFO:Uploading model into container now
2023-08-31 16:52:43,246:INFO:_master_model_container: 8
2023-08-31 16:52:43,246:INFO:_display_container: 7
2023-08-31 16:52:43,246:INFO:Lars(eps=1e-05, random_state=123)
2023-08-31 16:52:43,246:INFO:create_model() successfully completed......................................
2023-08-31 16:52:43,379:INFO:SubProcess create_model() end ==================================
2023-08-31 16:52:43,379:INFO:choose_better activated
2023-08-31 16:52:43,381:INFO:SubProcess create_model() called ==================================
2023-08-31 16:52:43,381:INFO:Initializing create_model()
2023-08-31 16:52:43,381:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 16:52:43,382:INFO:Checking exceptions
2023-08-31 16:52:43,382:INFO:Importing libraries
2023-08-31 16:52:43,382:INFO:Copying training dataset
2023-08-31 16:52:43,384:INFO:Defining folds
2023-08-31 16:52:43,384:INFO:Declaring metric variables
2023-08-31 16:52:43,384:INFO:Importing untrained model
2023-08-31 16:52:43,384:INFO:Declaring custom model
2023-08-31 16:52:43,385:INFO:Least Angle Regression Imported successfully
2023-08-31 16:52:43,385:INFO:Starting cross validation
2023-08-31 16:52:43,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 16:52:43,435:INFO:Calculating mean and std
2023-08-31 16:52:43,435:INFO:Creating metrics dataframe
2023-08-31 16:52:43,436:INFO:Finalizing model
2023-08-31 16:52:43,448:INFO:Uploading results into container
2023-08-31 16:52:43,448:INFO:Uploading model into container now
2023-08-31 16:52:43,449:INFO:_master_model_container: 9
2023-08-31 16:52:43,449:INFO:_display_container: 8
2023-08-31 16:52:43,449:INFO:Lars(random_state=123)
2023-08-31 16:52:43,449:INFO:create_model() successfully completed......................................
2023-08-31 16:52:43,584:INFO:SubProcess create_model() end ==================================
2023-08-31 16:52:43,584:INFO:Lars(random_state=123) result for RMSE is 0.6633
2023-08-31 16:52:43,584:INFO:Lars(eps=1e-05, random_state=123) result for RMSE is 0.6633
2023-08-31 16:52:43,584:INFO:Lars(random_state=123) is best model
2023-08-31 16:52:43,584:INFO:choose_better completed
2023-08-31 16:52:43,584:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 16:52:43,589:INFO:_master_model_container: 9
2023-08-31 16:52:43,589:INFO:_display_container: 7
2023-08-31 16:52:43,589:INFO:Lars(random_state=123)
2023-08-31 16:52:43,589:INFO:tune_model() successfully completed......................................
2023-08-31 16:52:46,521:INFO:Initializing plot_model()
2023-08-31 16:52:46,521:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:52:46,521:INFO:Checking exceptions
2023-08-31 16:52:46,523:INFO:Preloading libraries
2023-08-31 16:52:46,524:INFO:Copying training dataset
2023-08-31 16:52:46,524:INFO:Plot type: error
2023-08-31 16:52:46,555:INFO:Fitting Model
2023-08-31 16:52:46,555:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 16:52:46,555:INFO:Scoring test/hold-out set
2023-08-31 16:52:46,644:INFO:Visual Rendered Successfully
2023-08-31 16:52:46,788:INFO:plot_model() successfully completed......................................
2023-08-31 16:52:51,320:INFO:Initializing plot_model()
2023-08-31 16:52:51,320:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 16:52:51,320:INFO:Checking exceptions
2023-08-31 16:52:51,322:INFO:Preloading libraries
2023-08-31 16:52:51,322:INFO:Copying training dataset
2023-08-31 16:52:51,322:INFO:Plot type: feature
2023-08-31 16:52:51,386:INFO:Visual Rendered Successfully
2023-08-31 16:52:51,519:INFO:plot_model() successfully completed......................................
2023-08-31 16:53:00,297:INFO:Initializing finalize_model()
2023-08-31 16:53:00,297:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 16:53:00,297:INFO:Finalizing BayesianRidge()
2023-08-31 16:53:00,299:INFO:Initializing create_model()
2023-08-31 16:53:00,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 16:53:00,299:INFO:Checking exceptions
2023-08-31 16:53:00,300:INFO:Importing libraries
2023-08-31 16:53:00,300:INFO:Copying training dataset
2023-08-31 16:53:00,300:INFO:Defining folds
2023-08-31 16:53:00,300:INFO:Declaring metric variables
2023-08-31 16:53:00,300:INFO:Importing untrained model
2023-08-31 16:53:00,300:INFO:Declaring custom model
2023-08-31 16:53:00,300:INFO:Bayesian Ridge Imported successfully
2023-08-31 16:53:00,301:INFO:Cross validation set to False
2023-08-31 16:53:00,301:INFO:Fitting Model
2023-08-31 16:53:00,315:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Adj Close', 'Volume',
                                             'Close_Shift', 'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:53:00,315:INFO:create_model() successfully completed......................................
2023-08-31 16:53:00,514:INFO:_master_model_container: 9
2023-08-31 16:53:00,514:INFO:_display_container: 7
2023-08-31 16:53:00,516:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Adj Close', 'Volume',
                                             'Close_Shift', 'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())])
2023-08-31 16:53:00,516:INFO:finalize_model() successfully completed......................................
2023-08-31 16:53:01,695:INFO:Initializing predict_model()
2023-08-31 16:53:01,696:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2cf032d10>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Adj Close', 'Volume',
                                             'Close_Shift', 'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2ce7ec220>)
2023-08-31 16:53:01,696:INFO:Checking exceptions
2023-08-31 16:53:01,696:INFO:Preloading libraries
2023-08-31 16:53:01,697:INFO:Set up data.
2023-08-31 16:53:01,699:INFO:Set up index.
2023-08-31 17:23:57,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 17:23:57,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 17:23:57,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 17:23:57,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 17:23:57,822:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 17:23:57,873:INFO:PyCaret RegressionExperiment
2023-08-31 17:23:57,873:INFO:Logging name: reg-default-name
2023-08-31 17:23:57,873:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 17:23:57,873:INFO:version 3.0.2
2023-08-31 17:23:57,873:INFO:Initializing setup()
2023-08-31 17:23:57,873:INFO:self.USI: c462
2023-08-31 17:23:57,873:INFO:self._variable_keys: {'seed', 'html_param', 'target_param', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', 'USI', 'n_jobs_param', 'y_train', '_available_plots', 'X_train', '_ml_usecase', 'fold_generator', 'logging_param', 'y', 'memory', 'X', 'X_test', 'exp_id', 'idx', 'exp_name_log', 'y_test', 'data', 'log_plots_param', 'fold_groups_param'}
2023-08-31 17:23:57,873:INFO:Checking environment
2023-08-31 17:23:57,873:INFO:python_version: 3.11.4
2023-08-31 17:23:57,873:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 17:23:57,873:INFO:machine: arm64
2023-08-31 17:23:57,873:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 17:23:57,873:INFO:Memory: svmem(total=17179869184, available=4545216512, percent=73.5, used=7030538240, free=26361856, active=4516675584, inactive=4475142144, wired=2513862656)
2023-08-31 17:23:57,873:INFO:Physical Core: 12
2023-08-31 17:23:57,873:INFO:Logical Core: 12
2023-08-31 17:23:57,873:INFO:Checking libraries
2023-08-31 17:23:57,873:INFO:System:
2023-08-31 17:23:57,873:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 17:23:57,873:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 17:23:57,873:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 17:23:57,873:INFO:PyCaret required dependencies:
2023-08-31 17:23:57,873:INFO:                 pip: 23.2.1
2023-08-31 17:23:57,873:INFO:          setuptools: 68.0.0
2023-08-31 17:23:57,873:INFO:             pycaret: 3.0.2
2023-08-31 17:23:57,873:INFO:             IPython: 8.14.0
2023-08-31 17:23:57,873:INFO:          ipywidgets: 8.1.0
2023-08-31 17:23:57,873:INFO:                tqdm: 4.64.1
2023-08-31 17:23:57,873:INFO:               numpy: 1.25.2
2023-08-31 17:23:57,873:INFO:              pandas: 1.5.0
2023-08-31 17:23:57,873:INFO:              jinja2: 3.1.2
2023-08-31 17:23:57,873:INFO:               scipy: 1.9.3
2023-08-31 17:23:57,873:INFO:              joblib: 1.2.0
2023-08-31 17:23:57,873:INFO:             sklearn: 1.2.2
2023-08-31 17:23:57,873:INFO:                pyod: 1.0.9
2023-08-31 17:23:57,873:INFO:            imblearn: 0.10.1
2023-08-31 17:23:57,873:INFO:   category_encoders: 2.6.1
2023-08-31 17:23:57,873:INFO:            lightgbm: 3.3.5
2023-08-31 17:23:57,873:INFO:               numba: 0.57.0
2023-08-31 17:23:57,873:INFO:            requests: 2.28.0
2023-08-31 17:23:57,873:INFO:          matplotlib: 3.6.2
2023-08-31 17:23:57,873:INFO:          scikitplot: 0.3.7
2023-08-31 17:23:57,873:INFO:         yellowbrick: 1.5
2023-08-31 17:23:57,874:INFO:              plotly: 5.9.0
2023-08-31 17:23:57,874:INFO:             kaleido: 0.2.1
2023-08-31 17:23:57,874:INFO:         statsmodels: 0.13.5
2023-08-31 17:23:57,874:INFO:              sktime: 0.17.0
2023-08-31 17:23:57,874:INFO:               tbats: 1.1.3
2023-08-31 17:23:57,874:INFO:            pmdarima: 2.0.3
2023-08-31 17:23:57,874:INFO:              psutil: 5.9.0
2023-08-31 17:23:57,874:INFO:PyCaret optional dependencies:
2023-08-31 17:23:57,885:INFO:                shap: Not installed
2023-08-31 17:23:57,885:INFO:           interpret: Not installed
2023-08-31 17:23:57,885:INFO:                umap: Not installed
2023-08-31 17:23:57,885:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 17:23:57,885:INFO:  explainerdashboard: Not installed
2023-08-31 17:23:57,885:INFO:             autoviz: Not installed
2023-08-31 17:23:57,885:INFO:           fairlearn: Not installed
2023-08-31 17:23:57,885:INFO:             xgboost: Not installed
2023-08-31 17:23:57,885:INFO:            catboost: Not installed
2023-08-31 17:23:57,886:INFO:              kmodes: Not installed
2023-08-31 17:23:57,886:INFO:             mlxtend: Not installed
2023-08-31 17:23:57,886:INFO:       statsforecast: Not installed
2023-08-31 17:23:57,886:INFO:        tune_sklearn: Not installed
2023-08-31 17:23:57,886:INFO:                 ray: Not installed
2023-08-31 17:23:57,886:INFO:            hyperopt: Not installed
2023-08-31 17:23:57,886:INFO:              optuna: Not installed
2023-08-31 17:23:57,886:INFO:               skopt: Not installed
2023-08-31 17:23:57,886:INFO:              mlflow: Not installed
2023-08-31 17:23:57,886:INFO:              gradio: Not installed
2023-08-31 17:23:57,886:INFO:             fastapi: Not installed
2023-08-31 17:23:57,886:INFO:             uvicorn: Not installed
2023-08-31 17:23:57,886:INFO:              m2cgen: Not installed
2023-08-31 17:23:57,886:INFO:           evidently: Not installed
2023-08-31 17:23:57,886:INFO:               fugue: Not installed
2023-08-31 17:23:57,886:INFO:           streamlit: Not installed
2023-08-31 17:23:57,886:INFO:             prophet: Not installed
2023-08-31 17:23:57,886:INFO:None
2023-08-31 17:23:57,886:INFO:Set up data.
2023-08-31 17:23:57,890:INFO:Set up train/test split.
2023-08-31 17:23:57,893:INFO:Set up index.
2023-08-31 17:23:57,893:INFO:Set up folding strategy.
2023-08-31 17:23:57,893:INFO:Assigning column types.
2023-08-31 17:23:57,895:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 17:23:57,895:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,897:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,899:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,929:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,953:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:57,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:57,979:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,981:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:23:57,983:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,035:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 17:23:58,037:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,039:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,068:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,092:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,095:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,124:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,146:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 17:23:58,151:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,201:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,206:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,258:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 17:23:58,291:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,313:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,347:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,370:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 17:23:58,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:23:58,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,482:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 17:23:58,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,595:INFO:Preparing preprocessing pipeline...
2023-08-31 17:23:58,595:INFO:Set up simple imputation.
2023-08-31 17:23:58,605:INFO:Finished creating preprocessing pipeline.
2023-08-31 17:23:58,607:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 17:23:58,607:INFO:Creating final display dataframe.
2023-08-31 17:23:58,634:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              c462
2023-08-31 17:23:58,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,750:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,750:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:23:58,751:INFO:setup() successfully completed in 0.88s...............
2023-08-31 17:23:58,764:INFO:Initializing create_model()
2023-08-31 17:23:58,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:23:58,765:INFO:Checking exceptions
2023-08-31 17:23:58,771:INFO:Importing libraries
2023-08-31 17:23:58,771:INFO:Copying training dataset
2023-08-31 17:23:58,773:INFO:Defining folds
2023-08-31 17:23:58,774:INFO:Declaring metric variables
2023-08-31 17:23:58,779:INFO:Importing untrained model
2023-08-31 17:23:58,780:INFO:Ridge Regression Imported successfully
2023-08-31 17:23:58,783:INFO:Starting cross validation
2023-08-31 17:23:58,787:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:00,494:INFO:Calculating mean and std
2023-08-31 17:24:00,496:INFO:Creating metrics dataframe
2023-08-31 17:24:00,502:INFO:Finalizing model
2023-08-31 17:24:00,542:INFO:Uploading results into container
2023-08-31 17:24:00,543:INFO:Uploading model into container now
2023-08-31 17:24:00,582:INFO:_master_model_container: 1
2023-08-31 17:24:00,582:INFO:_display_container: 2
2023-08-31 17:24:00,583:INFO:Ridge(random_state=123)
2023-08-31 17:24:00,583:INFO:create_model() successfully completed......................................
2023-08-31 17:24:00,727:INFO:Initializing create_model()
2023-08-31 17:24:00,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:24:00,728:INFO:Checking exceptions
2023-08-31 17:24:00,739:INFO:Importing libraries
2023-08-31 17:24:00,739:INFO:Copying training dataset
2023-08-31 17:24:00,745:INFO:Defining folds
2023-08-31 17:24:00,745:INFO:Declaring metric variables
2023-08-31 17:24:00,748:INFO:Importing untrained model
2023-08-31 17:24:00,752:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:24:00,757:INFO:Starting cross validation
2023-08-31 17:24:00,757:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:01,571:INFO:Calculating mean and std
2023-08-31 17:24:01,572:INFO:Creating metrics dataframe
2023-08-31 17:24:01,574:INFO:Finalizing model
2023-08-31 17:24:01,708:INFO:Uploading results into container
2023-08-31 17:24:01,709:INFO:Uploading model into container now
2023-08-31 17:24:01,717:INFO:_master_model_container: 2
2023-08-31 17:24:01,717:INFO:_display_container: 3
2023-08-31 17:24:01,718:INFO:BayesianRidge()
2023-08-31 17:24:01,718:INFO:create_model() successfully completed......................................
2023-08-31 17:24:01,916:INFO:Initializing create_model()
2023-08-31 17:24:01,916:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:24:01,916:INFO:Checking exceptions
2023-08-31 17:24:01,922:INFO:Importing libraries
2023-08-31 17:24:01,922:INFO:Copying training dataset
2023-08-31 17:24:01,925:INFO:Defining folds
2023-08-31 17:24:01,926:INFO:Declaring metric variables
2023-08-31 17:24:01,927:INFO:Importing untrained model
2023-08-31 17:24:01,929:INFO:Least Angle Regression Imported successfully
2023-08-31 17:24:01,931:INFO:Starting cross validation
2023-08-31 17:24:01,932:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:02,000:INFO:Calculating mean and std
2023-08-31 17:24:02,000:INFO:Creating metrics dataframe
2023-08-31 17:24:02,003:INFO:Finalizing model
2023-08-31 17:24:02,019:INFO:Uploading results into container
2023-08-31 17:24:02,020:INFO:Uploading model into container now
2023-08-31 17:24:02,024:INFO:_master_model_container: 3
2023-08-31 17:24:02,024:INFO:_display_container: 4
2023-08-31 17:24:02,024:INFO:Lars(random_state=123)
2023-08-31 17:24:02,025:INFO:create_model() successfully completed......................................
2023-08-31 17:24:02,135:INFO:Initializing tune_model()
2023-08-31 17:24:02,136:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:24:02,136:INFO:Checking exceptions
2023-08-31 17:24:02,143:INFO:Copying training dataset
2023-08-31 17:24:02,145:INFO:Checking base model
2023-08-31 17:24:02,145:INFO:Base model : Ridge Regression
2023-08-31 17:24:02,146:INFO:Declaring metric variables
2023-08-31 17:24:02,148:INFO:Defining Hyperparameters
2023-08-31 17:24:02,255:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 17:24:02,255:INFO:Tuning with n_jobs=-1
2023-08-31 17:24:02,255:INFO:Initializing RandomizedSearchCV
2023-08-31 17:24:02,258:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 17:24:02,412:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 17:24:02,412:INFO:Hyperparameter search completed
2023-08-31 17:24:02,413:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:02,413:INFO:Initializing create_model()
2023-08-31 17:24:02,413:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2be9fc650>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 17:24:02,413:INFO:Checking exceptions
2023-08-31 17:24:02,413:INFO:Importing libraries
2023-08-31 17:24:02,413:INFO:Copying training dataset
2023-08-31 17:24:02,415:INFO:Defining folds
2023-08-31 17:24:02,415:INFO:Declaring metric variables
2023-08-31 17:24:02,417:INFO:Importing untrained model
2023-08-31 17:24:02,417:INFO:Declaring custom model
2023-08-31 17:24:02,418:INFO:Ridge Regression Imported successfully
2023-08-31 17:24:02,421:INFO:Starting cross validation
2023-08-31 17:24:02,421:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:02,471:INFO:Calculating mean and std
2023-08-31 17:24:02,471:INFO:Creating metrics dataframe
2023-08-31 17:24:02,473:INFO:Finalizing model
2023-08-31 17:24:02,484:INFO:Uploading results into container
2023-08-31 17:24:02,484:INFO:Uploading model into container now
2023-08-31 17:24:02,485:INFO:_master_model_container: 4
2023-08-31 17:24:02,485:INFO:_display_container: 5
2023-08-31 17:24:02,485:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 17:24:02,485:INFO:create_model() successfully completed......................................
2023-08-31 17:24:02,575:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:02,575:INFO:choose_better activated
2023-08-31 17:24:02,577:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:02,577:INFO:Initializing create_model()
2023-08-31 17:24:02,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:24:02,577:INFO:Checking exceptions
2023-08-31 17:24:02,578:INFO:Importing libraries
2023-08-31 17:24:02,578:INFO:Copying training dataset
2023-08-31 17:24:02,580:INFO:Defining folds
2023-08-31 17:24:02,580:INFO:Declaring metric variables
2023-08-31 17:24:02,580:INFO:Importing untrained model
2023-08-31 17:24:02,580:INFO:Declaring custom model
2023-08-31 17:24:02,580:INFO:Ridge Regression Imported successfully
2023-08-31 17:24:02,580:INFO:Starting cross validation
2023-08-31 17:24:02,581:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:02,628:INFO:Calculating mean and std
2023-08-31 17:24:02,628:INFO:Creating metrics dataframe
2023-08-31 17:24:02,629:INFO:Finalizing model
2023-08-31 17:24:02,640:INFO:Uploading results into container
2023-08-31 17:24:02,640:INFO:Uploading model into container now
2023-08-31 17:24:02,640:INFO:_master_model_container: 5
2023-08-31 17:24:02,640:INFO:_display_container: 6
2023-08-31 17:24:02,641:INFO:Ridge(random_state=123)
2023-08-31 17:24:02,641:INFO:create_model() successfully completed......................................
2023-08-31 17:24:02,737:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:02,737:INFO:Ridge(random_state=123) result for RMSE is 1.6159
2023-08-31 17:24:02,737:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 1.6158
2023-08-31 17:24:02,738:INFO:Ridge(alpha=0.02, random_state=123) is best model
2023-08-31 17:24:02,738:INFO:choose_better completed
2023-08-31 17:24:02,742:INFO:_master_model_container: 5
2023-08-31 17:24:02,742:INFO:_display_container: 5
2023-08-31 17:24:02,742:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 17:24:02,742:INFO:tune_model() successfully completed......................................
2023-08-31 17:24:02,867:INFO:Initializing tune_model()
2023-08-31 17:24:02,867:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:24:02,867:INFO:Checking exceptions
2023-08-31 17:24:02,874:INFO:Copying training dataset
2023-08-31 17:24:02,876:INFO:Checking base model
2023-08-31 17:24:02,876:INFO:Base model : Bayesian Ridge
2023-08-31 17:24:02,878:INFO:Declaring metric variables
2023-08-31 17:24:02,880:INFO:Defining Hyperparameters
2023-08-31 17:24:02,991:INFO:Tuning with n_jobs=-1
2023-08-31 17:24:02,991:INFO:Initializing RandomizedSearchCV
2023-08-31 17:24:21,627:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-07, 'actual_estimator__fit_intercept': False, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.0005, 'actual_estimator__alpha_1': 0.3}
2023-08-31 17:24:21,628:INFO:Hyperparameter search completed
2023-08-31 17:24:21,628:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:21,628:INFO:Initializing create_model()
2023-08-31 17:24:21,628:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2be9fc650>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 1e-07, 'fit_intercept': False, 'compute_score': True, 'alpha_2': 0.0005, 'alpha_1': 0.3})
2023-08-31 17:24:21,628:INFO:Checking exceptions
2023-08-31 17:24:21,628:INFO:Importing libraries
2023-08-31 17:24:21,628:INFO:Copying training dataset
2023-08-31 17:24:21,631:INFO:Defining folds
2023-08-31 17:24:21,631:INFO:Declaring metric variables
2023-08-31 17:24:21,632:INFO:Importing untrained model
2023-08-31 17:24:21,632:INFO:Declaring custom model
2023-08-31 17:24:21,634:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:24:21,636:INFO:Starting cross validation
2023-08-31 17:24:21,637:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:21,682:INFO:Calculating mean and std
2023-08-31 17:24:21,683:INFO:Creating metrics dataframe
2023-08-31 17:24:21,685:INFO:Finalizing model
2023-08-31 17:24:21,719:INFO:Uploading results into container
2023-08-31 17:24:21,719:INFO:Uploading model into container now
2023-08-31 17:24:21,720:INFO:_master_model_container: 6
2023-08-31 17:24:21,720:INFO:_display_container: 6
2023-08-31 17:24:21,720:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 17:24:21,720:INFO:create_model() successfully completed......................................
2023-08-31 17:24:21,832:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:21,832:INFO:choose_better activated
2023-08-31 17:24:21,836:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:21,837:INFO:Initializing create_model()
2023-08-31 17:24:21,837:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:24:21,837:INFO:Checking exceptions
2023-08-31 17:24:21,838:INFO:Importing libraries
2023-08-31 17:24:21,838:INFO:Copying training dataset
2023-08-31 17:24:21,842:INFO:Defining folds
2023-08-31 17:24:21,842:INFO:Declaring metric variables
2023-08-31 17:24:21,842:INFO:Importing untrained model
2023-08-31 17:24:21,842:INFO:Declaring custom model
2023-08-31 17:24:21,843:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:24:21,843:INFO:Starting cross validation
2023-08-31 17:24:21,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:21,923:INFO:Calculating mean and std
2023-08-31 17:24:21,923:INFO:Creating metrics dataframe
2023-08-31 17:24:21,925:INFO:Finalizing model
2023-08-31 17:24:21,947:INFO:Uploading results into container
2023-08-31 17:24:21,948:INFO:Uploading model into container now
2023-08-31 17:24:21,948:INFO:_master_model_container: 7
2023-08-31 17:24:21,948:INFO:_display_container: 7
2023-08-31 17:24:21,948:INFO:BayesianRidge()
2023-08-31 17:24:21,948:INFO:create_model() successfully completed......................................
2023-08-31 17:24:22,044:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:22,044:INFO:BayesianRidge() result for RMSE is 1.6159
2023-08-31 17:24:22,045:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) result for RMSE is 1.6157
2023-08-31 17:24:22,045:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) is best model
2023-08-31 17:24:22,045:INFO:choose_better completed
2023-08-31 17:24:22,052:INFO:_master_model_container: 7
2023-08-31 17:24:22,052:INFO:_display_container: 6
2023-08-31 17:24:22,053:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 17:24:22,053:INFO:tune_model() successfully completed......................................
2023-08-31 17:24:22,181:INFO:Initializing tune_model()
2023-08-31 17:24:22,181:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:24:22,181:INFO:Checking exceptions
2023-08-31 17:24:22,192:INFO:Copying training dataset
2023-08-31 17:24:22,196:INFO:Checking base model
2023-08-31 17:24:22,196:INFO:Base model : Least Angle Regression
2023-08-31 17:24:22,199:INFO:Declaring metric variables
2023-08-31 17:24:22,202:INFO:Defining Hyperparameters
2023-08-31 17:24:22,202:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 17:24:22,312:INFO:Tuning with n_jobs=-1
2023-08-31 17:24:22,313:INFO:Initializing GridSearchCV
2023-08-31 17:24:22,792:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 17:24:22,792:INFO:Hyperparameter search completed
2023-08-31 17:24:22,792:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:22,792:INFO:Initializing create_model()
2023-08-31 17:24:22,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2be9fc650>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 17:24:22,792:INFO:Checking exceptions
2023-08-31 17:24:22,792:INFO:Importing libraries
2023-08-31 17:24:22,792:INFO:Copying training dataset
2023-08-31 17:24:22,794:INFO:Defining folds
2023-08-31 17:24:22,794:INFO:Declaring metric variables
2023-08-31 17:24:22,796:INFO:Importing untrained model
2023-08-31 17:24:22,796:INFO:Declaring custom model
2023-08-31 17:24:22,797:INFO:Least Angle Regression Imported successfully
2023-08-31 17:24:22,800:INFO:Starting cross validation
2023-08-31 17:24:22,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:22,841:INFO:Calculating mean and std
2023-08-31 17:24:22,841:INFO:Creating metrics dataframe
2023-08-31 17:24:22,844:INFO:Finalizing model
2023-08-31 17:24:22,855:INFO:Uploading results into container
2023-08-31 17:24:22,855:INFO:Uploading model into container now
2023-08-31 17:24:22,855:INFO:_master_model_container: 8
2023-08-31 17:24:22,855:INFO:_display_container: 7
2023-08-31 17:24:22,856:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 17:24:22,856:INFO:create_model() successfully completed......................................
2023-08-31 17:24:22,947:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:22,947:INFO:choose_better activated
2023-08-31 17:24:22,949:INFO:SubProcess create_model() called ==================================
2023-08-31 17:24:22,949:INFO:Initializing create_model()
2023-08-31 17:24:22,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:24:22,950:INFO:Checking exceptions
2023-08-31 17:24:22,950:INFO:Importing libraries
2023-08-31 17:24:22,951:INFO:Copying training dataset
2023-08-31 17:24:22,953:INFO:Defining folds
2023-08-31 17:24:22,953:INFO:Declaring metric variables
2023-08-31 17:24:22,953:INFO:Importing untrained model
2023-08-31 17:24:22,953:INFO:Declaring custom model
2023-08-31 17:24:22,953:INFO:Least Angle Regression Imported successfully
2023-08-31 17:24:22,953:INFO:Starting cross validation
2023-08-31 17:24:22,954:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:24:23,000:INFO:Calculating mean and std
2023-08-31 17:24:23,000:INFO:Creating metrics dataframe
2023-08-31 17:24:23,001:INFO:Finalizing model
2023-08-31 17:24:23,011:INFO:Uploading results into container
2023-08-31 17:24:23,011:INFO:Uploading model into container now
2023-08-31 17:24:23,011:INFO:_master_model_container: 9
2023-08-31 17:24:23,011:INFO:_display_container: 8
2023-08-31 17:24:23,011:INFO:Lars(random_state=123)
2023-08-31 17:24:23,011:INFO:create_model() successfully completed......................................
2023-08-31 17:24:23,107:INFO:SubProcess create_model() end ==================================
2023-08-31 17:24:23,107:INFO:Lars(random_state=123) result for RMSE is 2.2877
2023-08-31 17:24:23,107:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 1.6155
2023-08-31 17:24:23,108:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 17:24:23,108:INFO:choose_better completed
2023-08-31 17:24:23,112:INFO:_master_model_container: 9
2023-08-31 17:24:23,112:INFO:_display_container: 7
2023-08-31 17:24:23,112:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 17:24:23,112:INFO:tune_model() successfully completed......................................
2023-08-31 17:24:23,226:INFO:Initializing plot_model()
2023-08-31 17:24:23,226:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 17:24:23,226:INFO:Checking exceptions
2023-08-31 17:24:23,228:INFO:Preloading libraries
2023-08-31 17:24:23,228:INFO:Copying training dataset
2023-08-31 17:24:23,228:INFO:Plot type: error
2023-08-31 17:24:23,266:INFO:Fitting Model
2023-08-31 17:24:23,266:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 17:24:23,266:INFO:Scoring test/hold-out set
2023-08-31 17:24:23,461:INFO:Visual Rendered Successfully
2023-08-31 17:24:23,560:INFO:plot_model() successfully completed......................................
2023-08-31 17:24:23,569:INFO:Initializing plot_model()
2023-08-31 17:24:23,569:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 17:24:23,570:INFO:Checking exceptions
2023-08-31 17:24:23,572:INFO:Preloading libraries
2023-08-31 17:24:23,572:INFO:Copying training dataset
2023-08-31 17:24:23,572:INFO:Plot type: feature
2023-08-31 17:24:23,628:INFO:Visual Rendered Successfully
2023-08-31 17:24:23,724:INFO:plot_model() successfully completed......................................
2023-08-31 17:24:23,732:INFO:Initializing finalize_model()
2023-08-31 17:24:23,733:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 17:24:23,733:INFO:Finalizing BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 17:24:23,734:INFO:Initializing create_model()
2023-08-31 17:24:23,735:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 17:24:23,735:INFO:Checking exceptions
2023-08-31 17:24:23,735:INFO:Importing libraries
2023-08-31 17:24:23,735:INFO:Copying training dataset
2023-08-31 17:24:23,736:INFO:Defining folds
2023-08-31 17:24:23,736:INFO:Declaring metric variables
2023-08-31 17:24:23,736:INFO:Importing untrained model
2023-08-31 17:24:23,736:INFO:Declaring custom model
2023-08-31 17:24:23,736:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:24:23,736:INFO:Cross validation set to False
2023-08-31 17:24:23,736:INFO:Fitting Model
2023-08-31 17:24:23,771:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 17:24:23,771:INFO:create_model() successfully completed......................................
2023-08-31 17:24:23,884:INFO:_master_model_container: 9
2023-08-31 17:24:23,884:INFO:_display_container: 7
2023-08-31 17:24:23,889:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 17:24:23,889:INFO:finalize_model() successfully completed......................................
2023-08-31 17:24:24,022:INFO:Initializing predict_model()
2023-08-31 17:24:24,022:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2beaa1890>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2bf6f07c0>)
2023-08-31 17:24:24,022:INFO:Checking exceptions
2023-08-31 17:24:24,022:INFO:Preloading libraries
2023-08-31 17:24:24,023:INFO:Set up data.
2023-08-31 17:24:24,025:INFO:Set up index.
2023-08-31 17:25:31,169:INFO:PyCaret RegressionExperiment
2023-08-31 17:25:31,169:INFO:Logging name: reg-default-name
2023-08-31 17:25:31,169:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 17:25:31,169:INFO:version 3.0.2
2023-08-31 17:25:31,170:INFO:Initializing setup()
2023-08-31 17:25:31,170:INFO:self.USI: e9f9
2023-08-31 17:25:31,170:INFO:self._variable_keys: {'seed', 'html_param', 'target_param', 'fold_shuffle_param', 'gpu_param', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', 'USI', 'n_jobs_param', 'y_train', '_available_plots', 'X_train', '_ml_usecase', 'fold_generator', 'logging_param', 'y', 'memory', 'X', 'X_test', 'exp_id', 'idx', 'exp_name_log', 'y_test', 'data', 'log_plots_param', 'fold_groups_param'}
2023-08-31 17:25:31,170:INFO:Checking environment
2023-08-31 17:25:31,170:INFO:python_version: 3.11.4
2023-08-31 17:25:31,170:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 17:25:31,170:INFO:machine: arm64
2023-08-31 17:25:31,170:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 17:25:31,170:INFO:Memory: svmem(total=17179869184, available=3581902848, percent=79.2, used=5861457920, free=34865152, active=3565174784, inactive=3536470016, wired=2296283136)
2023-08-31 17:25:31,170:INFO:Physical Core: 12
2023-08-31 17:25:31,170:INFO:Logical Core: 12
2023-08-31 17:25:31,170:INFO:Checking libraries
2023-08-31 17:25:31,170:INFO:System:
2023-08-31 17:25:31,170:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 17:25:31,170:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 17:25:31,170:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 17:25:31,170:INFO:PyCaret required dependencies:
2023-08-31 17:25:31,170:INFO:                 pip: 23.2.1
2023-08-31 17:25:31,170:INFO:          setuptools: 68.0.0
2023-08-31 17:25:31,170:INFO:             pycaret: 3.0.2
2023-08-31 17:25:31,170:INFO:             IPython: 8.14.0
2023-08-31 17:25:31,170:INFO:          ipywidgets: 8.1.0
2023-08-31 17:25:31,170:INFO:                tqdm: 4.64.1
2023-08-31 17:25:31,170:INFO:               numpy: 1.25.2
2023-08-31 17:25:31,170:INFO:              pandas: 1.5.0
2023-08-31 17:25:31,170:INFO:              jinja2: 3.1.2
2023-08-31 17:25:31,170:INFO:               scipy: 1.9.3
2023-08-31 17:25:31,170:INFO:              joblib: 1.2.0
2023-08-31 17:25:31,170:INFO:             sklearn: 1.2.2
2023-08-31 17:25:31,170:INFO:                pyod: 1.0.9
2023-08-31 17:25:31,170:INFO:            imblearn: 0.10.1
2023-08-31 17:25:31,170:INFO:   category_encoders: 2.6.1
2023-08-31 17:25:31,170:INFO:            lightgbm: 3.3.5
2023-08-31 17:25:31,170:INFO:               numba: 0.57.0
2023-08-31 17:25:31,170:INFO:            requests: 2.28.0
2023-08-31 17:25:31,170:INFO:          matplotlib: 3.6.2
2023-08-31 17:25:31,170:INFO:          scikitplot: 0.3.7
2023-08-31 17:25:31,170:INFO:         yellowbrick: 1.5
2023-08-31 17:25:31,170:INFO:              plotly: 5.9.0
2023-08-31 17:25:31,170:INFO:             kaleido: 0.2.1
2023-08-31 17:25:31,170:INFO:         statsmodels: 0.13.5
2023-08-31 17:25:31,170:INFO:              sktime: 0.17.0
2023-08-31 17:25:31,170:INFO:               tbats: 1.1.3
2023-08-31 17:25:31,170:INFO:            pmdarima: 2.0.3
2023-08-31 17:25:31,170:INFO:              psutil: 5.9.0
2023-08-31 17:25:31,170:INFO:PyCaret optional dependencies:
2023-08-31 17:25:31,170:INFO:                shap: Not installed
2023-08-31 17:25:31,170:INFO:           interpret: Not installed
2023-08-31 17:25:31,170:INFO:                umap: Not installed
2023-08-31 17:25:31,170:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 17:25:31,170:INFO:  explainerdashboard: Not installed
2023-08-31 17:25:31,170:INFO:             autoviz: Not installed
2023-08-31 17:25:31,170:INFO:           fairlearn: Not installed
2023-08-31 17:25:31,170:INFO:             xgboost: Not installed
2023-08-31 17:25:31,170:INFO:            catboost: Not installed
2023-08-31 17:25:31,171:INFO:              kmodes: Not installed
2023-08-31 17:25:31,171:INFO:             mlxtend: Not installed
2023-08-31 17:25:31,171:INFO:       statsforecast: Not installed
2023-08-31 17:25:31,171:INFO:        tune_sklearn: Not installed
2023-08-31 17:25:31,171:INFO:                 ray: Not installed
2023-08-31 17:25:31,171:INFO:            hyperopt: Not installed
2023-08-31 17:25:31,171:INFO:              optuna: Not installed
2023-08-31 17:25:31,171:INFO:               skopt: Not installed
2023-08-31 17:25:31,171:INFO:              mlflow: Not installed
2023-08-31 17:25:31,171:INFO:              gradio: Not installed
2023-08-31 17:25:31,171:INFO:             fastapi: Not installed
2023-08-31 17:25:31,171:INFO:             uvicorn: Not installed
2023-08-31 17:25:31,171:INFO:              m2cgen: Not installed
2023-08-31 17:25:31,171:INFO:           evidently: Not installed
2023-08-31 17:25:31,171:INFO:               fugue: Not installed
2023-08-31 17:25:31,171:INFO:           streamlit: Not installed
2023-08-31 17:25:31,171:INFO:             prophet: Not installed
2023-08-31 17:25:31,171:INFO:None
2023-08-31 17:25:31,171:INFO:Set up data.
2023-08-31 17:25:31,177:INFO:Set up train/test split.
2023-08-31 17:25:31,180:INFO:Set up index.
2023-08-31 17:25:31,180:INFO:Set up folding strategy.
2023-08-31 17:25:31,180:INFO:Assigning column types.
2023-08-31 17:25:31,183:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 17:25:31,187:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,190:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,192:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,244:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,246:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,248:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,277:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,300:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 17:25:31,302:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,305:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,333:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,358:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,360:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,411:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 17:25:31,415:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,444:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,471:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,499:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,521:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 17:25:31,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,575:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,631:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 17:25:31,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,720:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 17:25:31,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,742:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 17:25:31,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,852:INFO:Preparing preprocessing pipeline...
2023-08-31 17:25:31,852:INFO:Set up simple imputation.
2023-08-31 17:25:31,861:INFO:Finished creating preprocessing pipeline.
2023-08-31 17:25:31,863:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 17:25:31,863:INFO:Creating final display dataframe.
2023-08-31 17:25:31,886:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target              SMA7
2                   Target type        Regression
3           Original data shape         (5483, 7)
4        Transformed data shape         (5483, 7)
5   Transformed train set shape         (3838, 7)
6    Transformed test set shape         (1645, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              e9f9
2023-08-31 17:25:31,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:31,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:32,000:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:32,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 17:25:32,001:INFO:setup() successfully completed in 0.83s...............
2023-08-31 17:25:32,884:INFO:Initializing create_model()
2023-08-31 17:25:32,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:25:32,884:INFO:Checking exceptions
2023-08-31 17:25:32,891:INFO:Importing libraries
2023-08-31 17:25:32,892:INFO:Copying training dataset
2023-08-31 17:25:32,895:INFO:Defining folds
2023-08-31 17:25:32,895:INFO:Declaring metric variables
2023-08-31 17:25:32,896:INFO:Importing untrained model
2023-08-31 17:25:32,898:INFO:Ridge Regression Imported successfully
2023-08-31 17:25:32,901:INFO:Starting cross validation
2023-08-31 17:25:32,901:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:32,983:INFO:Calculating mean and std
2023-08-31 17:25:32,984:INFO:Creating metrics dataframe
2023-08-31 17:25:32,986:INFO:Finalizing model
2023-08-31 17:25:32,998:INFO:Uploading results into container
2023-08-31 17:25:32,999:INFO:Uploading model into container now
2023-08-31 17:25:33,003:INFO:_master_model_container: 1
2023-08-31 17:25:33,003:INFO:_display_container: 2
2023-08-31 17:25:33,003:INFO:Ridge(random_state=123)
2023-08-31 17:25:33,003:INFO:create_model() successfully completed......................................
2023-08-31 17:25:34,827:INFO:Initializing create_model()
2023-08-31 17:25:34,827:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:25:34,827:INFO:Checking exceptions
2023-08-31 17:25:34,833:INFO:Importing libraries
2023-08-31 17:25:34,833:INFO:Copying training dataset
2023-08-31 17:25:34,836:INFO:Defining folds
2023-08-31 17:25:34,836:INFO:Declaring metric variables
2023-08-31 17:25:34,838:INFO:Importing untrained model
2023-08-31 17:25:34,839:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:25:34,841:INFO:Starting cross validation
2023-08-31 17:25:34,842:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:34,902:INFO:Calculating mean and std
2023-08-31 17:25:34,902:INFO:Creating metrics dataframe
2023-08-31 17:25:34,905:INFO:Finalizing model
2023-08-31 17:25:34,958:INFO:Uploading results into container
2023-08-31 17:25:34,959:INFO:Uploading model into container now
2023-08-31 17:25:34,966:INFO:_master_model_container: 2
2023-08-31 17:25:34,966:INFO:_display_container: 3
2023-08-31 17:25:34,967:INFO:BayesianRidge()
2023-08-31 17:25:34,967:INFO:create_model() successfully completed......................................
2023-08-31 17:25:35,505:INFO:Initializing create_model()
2023-08-31 17:25:35,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:25:35,506:INFO:Checking exceptions
2023-08-31 17:25:35,512:INFO:Importing libraries
2023-08-31 17:25:35,512:INFO:Copying training dataset
2023-08-31 17:25:35,515:INFO:Defining folds
2023-08-31 17:25:35,515:INFO:Declaring metric variables
2023-08-31 17:25:35,516:INFO:Importing untrained model
2023-08-31 17:25:35,518:INFO:Least Angle Regression Imported successfully
2023-08-31 17:25:35,520:INFO:Starting cross validation
2023-08-31 17:25:35,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:35,589:INFO:Calculating mean and std
2023-08-31 17:25:35,590:INFO:Creating metrics dataframe
2023-08-31 17:25:35,592:INFO:Finalizing model
2023-08-31 17:25:35,604:INFO:Uploading results into container
2023-08-31 17:25:35,604:INFO:Uploading model into container now
2023-08-31 17:25:35,608:INFO:_master_model_container: 3
2023-08-31 17:25:35,608:INFO:_display_container: 4
2023-08-31 17:25:35,608:INFO:Lars(random_state=123)
2023-08-31 17:25:35,608:INFO:create_model() successfully completed......................................
2023-08-31 17:25:37,039:INFO:Initializing tune_model()
2023-08-31 17:25:37,040:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:25:37,040:INFO:Checking exceptions
2023-08-31 17:25:37,047:INFO:Copying training dataset
2023-08-31 17:25:37,048:INFO:Checking base model
2023-08-31 17:25:37,049:INFO:Base model : Ridge Regression
2023-08-31 17:25:37,050:INFO:Declaring metric variables
2023-08-31 17:25:37,051:INFO:Defining Hyperparameters
2023-08-31 17:25:37,165:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 17:25:37,165:INFO:Tuning with n_jobs=-1
2023-08-31 17:25:37,165:INFO:Initializing RandomizedSearchCV
2023-08-31 17:25:37,167:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 17:25:37,308:INFO:best_params: {'actual_estimator__alpha': 0.03}
2023-08-31 17:25:37,308:INFO:Hyperparameter search completed
2023-08-31 17:25:37,308:INFO:SubProcess create_model() called ==================================
2023-08-31 17:25:37,308:INFO:Initializing create_model()
2023-08-31 17:25:37,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b9d0c650>, model_only=True, return_train_score=False, kwargs={'alpha': 0.03})
2023-08-31 17:25:37,309:INFO:Checking exceptions
2023-08-31 17:25:37,309:INFO:Importing libraries
2023-08-31 17:25:37,309:INFO:Copying training dataset
2023-08-31 17:25:37,311:INFO:Defining folds
2023-08-31 17:25:37,311:INFO:Declaring metric variables
2023-08-31 17:25:37,312:INFO:Importing untrained model
2023-08-31 17:25:37,312:INFO:Declaring custom model
2023-08-31 17:25:37,313:INFO:Ridge Regression Imported successfully
2023-08-31 17:25:37,316:INFO:Starting cross validation
2023-08-31 17:25:37,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:37,361:INFO:Calculating mean and std
2023-08-31 17:25:37,361:INFO:Creating metrics dataframe
2023-08-31 17:25:37,363:INFO:Finalizing model
2023-08-31 17:25:37,374:INFO:Uploading results into container
2023-08-31 17:25:37,374:INFO:Uploading model into container now
2023-08-31 17:25:37,374:INFO:_master_model_container: 4
2023-08-31 17:25:37,375:INFO:_display_container: 5
2023-08-31 17:25:37,375:INFO:Ridge(alpha=0.03, random_state=123)
2023-08-31 17:25:37,375:INFO:create_model() successfully completed......................................
2023-08-31 17:25:37,474:INFO:SubProcess create_model() end ==================================
2023-08-31 17:25:37,474:INFO:choose_better activated
2023-08-31 17:25:37,476:INFO:SubProcess create_model() called ==================================
2023-08-31 17:25:37,476:INFO:Initializing create_model()
2023-08-31 17:25:37,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:25:37,476:INFO:Checking exceptions
2023-08-31 17:25:37,477:INFO:Importing libraries
2023-08-31 17:25:37,477:INFO:Copying training dataset
2023-08-31 17:25:37,479:INFO:Defining folds
2023-08-31 17:25:37,479:INFO:Declaring metric variables
2023-08-31 17:25:37,479:INFO:Importing untrained model
2023-08-31 17:25:37,479:INFO:Declaring custom model
2023-08-31 17:25:37,480:INFO:Ridge Regression Imported successfully
2023-08-31 17:25:37,480:INFO:Starting cross validation
2023-08-31 17:25:37,480:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:37,524:INFO:Calculating mean and std
2023-08-31 17:25:37,525:INFO:Creating metrics dataframe
2023-08-31 17:25:37,525:INFO:Finalizing model
2023-08-31 17:25:37,534:INFO:Uploading results into container
2023-08-31 17:25:37,535:INFO:Uploading model into container now
2023-08-31 17:25:37,535:INFO:_master_model_container: 5
2023-08-31 17:25:37,535:INFO:_display_container: 6
2023-08-31 17:25:37,535:INFO:Ridge(random_state=123)
2023-08-31 17:25:37,535:INFO:create_model() successfully completed......................................
2023-08-31 17:25:37,636:INFO:SubProcess create_model() end ==================================
2023-08-31 17:25:37,636:INFO:Ridge(random_state=123) result for RMSE is 3.8118
2023-08-31 17:25:37,636:INFO:Ridge(alpha=0.03, random_state=123) result for RMSE is 3.8118
2023-08-31 17:25:37,636:INFO:Ridge(random_state=123) is best model
2023-08-31 17:25:37,636:INFO:choose_better completed
2023-08-31 17:25:37,637:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 17:25:37,641:INFO:_master_model_container: 5
2023-08-31 17:25:37,641:INFO:_display_container: 5
2023-08-31 17:25:37,641:INFO:Ridge(random_state=123)
2023-08-31 17:25:37,641:INFO:tune_model() successfully completed......................................
2023-08-31 17:25:39,424:INFO:Initializing tune_model()
2023-08-31 17:25:39,424:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:25:39,425:INFO:Checking exceptions
2023-08-31 17:25:39,432:INFO:Copying training dataset
2023-08-31 17:25:39,434:INFO:Checking base model
2023-08-31 17:25:39,434:INFO:Base model : Bayesian Ridge
2023-08-31 17:25:39,435:INFO:Declaring metric variables
2023-08-31 17:25:39,437:INFO:Defining Hyperparameters
2023-08-31 17:25:39,553:INFO:Tuning with n_jobs=-1
2023-08-31 17:25:39,554:INFO:Initializing RandomizedSearchCV
2023-08-31 17:25:59,126:INFO:best_params: {'actual_estimator__lambda_2': 1e-07, 'actual_estimator__lambda_1': 0.3, 'actual_estimator__fit_intercept': False, 'actual_estimator__compute_score': False, 'actual_estimator__alpha_2': 0.0001, 'actual_estimator__alpha_1': 0.001}
2023-08-31 17:25:59,127:INFO:Hyperparameter search completed
2023-08-31 17:25:59,127:INFO:SubProcess create_model() called ==================================
2023-08-31 17:25:59,127:INFO:Initializing create_model()
2023-08-31 17:25:59,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2b9d0c650>, model_only=True, return_train_score=False, kwargs={'lambda_2': 1e-07, 'lambda_1': 0.3, 'fit_intercept': False, 'compute_score': False, 'alpha_2': 0.0001, 'alpha_1': 0.001})
2023-08-31 17:25:59,127:INFO:Checking exceptions
2023-08-31 17:25:59,127:INFO:Importing libraries
2023-08-31 17:25:59,127:INFO:Copying training dataset
2023-08-31 17:25:59,130:INFO:Defining folds
2023-08-31 17:25:59,130:INFO:Declaring metric variables
2023-08-31 17:25:59,132:INFO:Importing untrained model
2023-08-31 17:25:59,132:INFO:Declaring custom model
2023-08-31 17:25:59,133:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:25:59,136:INFO:Starting cross validation
2023-08-31 17:25:59,136:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:59,183:INFO:Calculating mean and std
2023-08-31 17:25:59,183:INFO:Creating metrics dataframe
2023-08-31 17:25:59,185:INFO:Finalizing model
2023-08-31 17:25:59,230:INFO:Uploading results into container
2023-08-31 17:25:59,231:INFO:Uploading model into container now
2023-08-31 17:25:59,232:INFO:_master_model_container: 6
2023-08-31 17:25:59,232:INFO:_display_container: 6
2023-08-31 17:25:59,232:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07)
2023-08-31 17:25:59,232:INFO:create_model() successfully completed......................................
2023-08-31 17:25:59,362:INFO:SubProcess create_model() end ==================================
2023-08-31 17:25:59,362:INFO:choose_better activated
2023-08-31 17:25:59,365:INFO:SubProcess create_model() called ==================================
2023-08-31 17:25:59,365:INFO:Initializing create_model()
2023-08-31 17:25:59,366:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:25:59,366:INFO:Checking exceptions
2023-08-31 17:25:59,367:INFO:Importing libraries
2023-08-31 17:25:59,367:INFO:Copying training dataset
2023-08-31 17:25:59,371:INFO:Defining folds
2023-08-31 17:25:59,371:INFO:Declaring metric variables
2023-08-31 17:25:59,371:INFO:Importing untrained model
2023-08-31 17:25:59,372:INFO:Declaring custom model
2023-08-31 17:25:59,372:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:25:59,372:INFO:Starting cross validation
2023-08-31 17:25:59,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:25:59,461:INFO:Calculating mean and std
2023-08-31 17:25:59,461:INFO:Creating metrics dataframe
2023-08-31 17:25:59,463:INFO:Finalizing model
2023-08-31 17:25:59,497:INFO:Uploading results into container
2023-08-31 17:25:59,498:INFO:Uploading model into container now
2023-08-31 17:25:59,498:INFO:_master_model_container: 7
2023-08-31 17:25:59,498:INFO:_display_container: 7
2023-08-31 17:25:59,498:INFO:BayesianRidge()
2023-08-31 17:25:59,498:INFO:create_model() successfully completed......................................
2023-08-31 17:25:59,613:INFO:SubProcess create_model() end ==================================
2023-08-31 17:25:59,614:INFO:BayesianRidge() result for RMSE is 3.8115
2023-08-31 17:25:59,615:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07) result for RMSE is 3.8096
2023-08-31 17:25:59,615:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07) is best model
2023-08-31 17:25:59,615:INFO:choose_better completed
2023-08-31 17:25:59,623:INFO:_master_model_container: 7
2023-08-31 17:25:59,623:INFO:_display_container: 6
2023-08-31 17:25:59,624:INFO:BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07)
2023-08-31 17:25:59,624:INFO:tune_model() successfully completed......................................
2023-08-31 17:26:03,115:INFO:Initializing tune_model()
2023-08-31 17:26:03,116:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 17:26:03,116:INFO:Checking exceptions
2023-08-31 17:26:03,123:INFO:Copying training dataset
2023-08-31 17:26:03,125:INFO:Checking base model
2023-08-31 17:26:03,125:INFO:Base model : Least Angle Regression
2023-08-31 17:26:03,127:INFO:Declaring metric variables
2023-08-31 17:26:03,129:INFO:Defining Hyperparameters
2023-08-31 17:26:03,129:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 17:26:03,251:INFO:Tuning with n_jobs=-1
2023-08-31 17:26:03,252:INFO:Initializing GridSearchCV
2023-08-31 17:26:03,733:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 17:26:03,733:INFO:Hyperparameter search completed
2023-08-31 17:26:03,733:INFO:SubProcess create_model() called ==================================
2023-08-31 17:26:03,733:INFO:Initializing create_model()
2023-08-31 17:26:03,733:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2ba544350>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 17:26:03,733:INFO:Checking exceptions
2023-08-31 17:26:03,733:INFO:Importing libraries
2023-08-31 17:26:03,733:INFO:Copying training dataset
2023-08-31 17:26:03,735:INFO:Defining folds
2023-08-31 17:26:03,736:INFO:Declaring metric variables
2023-08-31 17:26:03,737:INFO:Importing untrained model
2023-08-31 17:26:03,737:INFO:Declaring custom model
2023-08-31 17:26:03,738:INFO:Least Angle Regression Imported successfully
2023-08-31 17:26:03,741:INFO:Starting cross validation
2023-08-31 17:26:03,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:26:03,789:INFO:Calculating mean and std
2023-08-31 17:26:03,789:INFO:Creating metrics dataframe
2023-08-31 17:26:03,791:INFO:Finalizing model
2023-08-31 17:26:03,803:INFO:Uploading results into container
2023-08-31 17:26:03,803:INFO:Uploading model into container now
2023-08-31 17:26:03,803:INFO:_master_model_container: 8
2023-08-31 17:26:03,804:INFO:_display_container: 7
2023-08-31 17:26:03,804:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 17:26:03,804:INFO:create_model() successfully completed......................................
2023-08-31 17:26:03,899:INFO:SubProcess create_model() end ==================================
2023-08-31 17:26:03,899:INFO:choose_better activated
2023-08-31 17:26:03,901:INFO:SubProcess create_model() called ==================================
2023-08-31 17:26:03,901:INFO:Initializing create_model()
2023-08-31 17:26:03,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 17:26:03,901:INFO:Checking exceptions
2023-08-31 17:26:03,902:INFO:Importing libraries
2023-08-31 17:26:03,902:INFO:Copying training dataset
2023-08-31 17:26:03,904:INFO:Defining folds
2023-08-31 17:26:03,904:INFO:Declaring metric variables
2023-08-31 17:26:03,905:INFO:Importing untrained model
2023-08-31 17:26:03,905:INFO:Declaring custom model
2023-08-31 17:26:03,905:INFO:Least Angle Regression Imported successfully
2023-08-31 17:26:03,905:INFO:Starting cross validation
2023-08-31 17:26:03,905:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 17:26:03,952:INFO:Calculating mean and std
2023-08-31 17:26:03,952:INFO:Creating metrics dataframe
2023-08-31 17:26:03,953:INFO:Finalizing model
2023-08-31 17:26:03,963:INFO:Uploading results into container
2023-08-31 17:26:03,963:INFO:Uploading model into container now
2023-08-31 17:26:03,963:INFO:_master_model_container: 9
2023-08-31 17:26:03,963:INFO:_display_container: 8
2023-08-31 17:26:03,963:INFO:Lars(random_state=123)
2023-08-31 17:26:03,964:INFO:create_model() successfully completed......................................
2023-08-31 17:26:04,062:INFO:SubProcess create_model() end ==================================
2023-08-31 17:26:04,062:INFO:Lars(random_state=123) result for RMSE is 3.8195
2023-08-31 17:26:04,063:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 3.8153
2023-08-31 17:26:04,063:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 17:26:04,063:INFO:choose_better completed
2023-08-31 17:26:04,067:INFO:_master_model_container: 9
2023-08-31 17:26:04,067:INFO:_display_container: 7
2023-08-31 17:26:04,067:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 17:26:04,067:INFO:tune_model() successfully completed......................................
2023-08-31 17:26:05,039:INFO:Initializing plot_model()
2023-08-31 17:26:05,039:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 17:26:05,039:INFO:Checking exceptions
2023-08-31 17:26:05,042:INFO:Preloading libraries
2023-08-31 17:26:05,042:INFO:Copying training dataset
2023-08-31 17:26:05,042:INFO:Plot type: error
2023-08-31 17:26:05,068:INFO:Fitting Model
2023-08-31 17:26:05,068:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 17:26:05,068:INFO:Scoring test/hold-out set
2023-08-31 17:26:05,187:INFO:Visual Rendered Successfully
2023-08-31 17:26:05,329:INFO:plot_model() successfully completed......................................
2023-08-31 17:26:08,755:INFO:Initializing plot_model()
2023-08-31 17:26:08,756:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 17:26:08,756:INFO:Checking exceptions
2023-08-31 17:26:08,758:INFO:Preloading libraries
2023-08-31 17:26:08,758:INFO:Copying training dataset
2023-08-31 17:26:08,758:INFO:Plot type: error
2023-08-31 17:26:08,785:INFO:Fitting Model
2023-08-31 17:26:08,785:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 17:26:08,785:INFO:Scoring test/hold-out set
2023-08-31 17:26:08,908:INFO:Visual Rendered Successfully
2023-08-31 17:26:09,033:INFO:plot_model() successfully completed......................................
2023-08-31 17:26:12,029:INFO:Initializing plot_model()
2023-08-31 17:26:12,029:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 17:26:12,030:INFO:Checking exceptions
2023-08-31 17:26:12,032:INFO:Preloading libraries
2023-08-31 17:26:12,032:INFO:Copying training dataset
2023-08-31 17:26:12,033:INFO:Plot type: feature
2023-08-31 17:26:12,093:INFO:Visual Rendered Successfully
2023-08-31 17:26:12,189:INFO:plot_model() successfully completed......................................
2023-08-31 17:26:25,539:INFO:Initializing finalize_model()
2023-08-31 17:26:25,539:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 17:26:25,540:INFO:Finalizing BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07)
2023-08-31 17:26:25,541:INFO:Initializing create_model()
2023-08-31 17:26:25,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=BayesianRidge(alpha_1=0.001, alpha_2=0.0001, fit_intercept=False, lambda_1=0.3,
              lambda_2=1e-07), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 17:26:25,542:INFO:Checking exceptions
2023-08-31 17:26:25,542:INFO:Importing libraries
2023-08-31 17:26:25,542:INFO:Copying training dataset
2023-08-31 17:26:25,543:INFO:Defining folds
2023-08-31 17:26:25,543:INFO:Declaring metric variables
2023-08-31 17:26:25,543:INFO:Importing untrained model
2023-08-31 17:26:25,543:INFO:Declaring custom model
2023-08-31 17:26:25,543:INFO:Bayesian Ridge Imported successfully
2023-08-31 17:26:25,543:INFO:Cross validation set to False
2023-08-31 17:26:25,543:INFO:Fitting Model
2023-08-31 17:26:25,578:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                               fit_intercept=False, lambda_1=0.3,
                               lambda_2=1e-07))])
2023-08-31 17:26:25,578:INFO:create_model() successfully completed......................................
2023-08-31 17:26:25,704:INFO:_master_model_container: 9
2023-08-31 17:26:25,704:INFO:_display_container: 7
2023-08-31 17:26:25,711:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                               fit_intercept=False, lambda_1=0.3,
                               lambda_2=1e-07))])
2023-08-31 17:26:25,711:INFO:finalize_model() successfully completed......................................
2023-08-31 17:26:27,964:INFO:Initializing predict_model()
2023-08-31 17:26:27,964:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2b9ec87d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Close',
                                             'Volume', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.001, alpha_2=0.0001,
                               fit_intercept=False, lambda_1=0.3,
                               lambda_2=1e-07))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2c02313a0>)
2023-08-31 17:26:27,964:INFO:Checking exceptions
2023-08-31 17:26:27,964:INFO:Preloading libraries
2023-08-31 17:26:27,965:INFO:Set up data.
2023-08-31 17:26:27,968:INFO:Set up index.
2023-08-31 18:15:24,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 18:15:24,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 18:15:24,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 18:15:24,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-08-31 18:15:25,283:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-08-31 18:15:25,322:INFO:PyCaret RegressionExperiment
2023-08-31 18:15:25,322:INFO:Logging name: reg-default-name
2023-08-31 18:15:25,323:INFO:ML Usecase: MLUsecase.REGRESSION
2023-08-31 18:15:25,323:INFO:version 3.0.2
2023-08-31 18:15:25,323:INFO:Initializing setup()
2023-08-31 18:15:25,323:INFO:self.USI: 2544
2023-08-31 18:15:25,323:INFO:self._variable_keys: {'memory', 'idx', 'html_param', 'seed', 'USI', 'X', 'X_test', 'transform_target_param', 'exp_id', '_available_plots', 'logging_param', 'fold_generator', 'n_jobs_param', 'gpu_n_jobs_param', 'y_train', 'y_test', 'X_train', 'fold_groups_param', 'log_plots_param', 'fold_shuffle_param', 'target_param', 'y', 'pipeline', 'data', '_ml_usecase', 'gpu_param', 'exp_name_log'}
2023-08-31 18:15:25,323:INFO:Checking environment
2023-08-31 18:15:25,323:INFO:python_version: 3.11.4
2023-08-31 18:15:25,323:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-08-31 18:15:25,323:INFO:machine: arm64
2023-08-31 18:15:25,323:INFO:platform: macOS-13.5.1-arm64-arm-64bit
2023-08-31 18:15:25,323:INFO:Memory: svmem(total=17179869184, available=4786388992, percent=72.1, used=6617088000, free=368836608, active=4403937280, inactive=4366073856, wired=2213150720)
2023-08-31 18:15:25,323:INFO:Physical Core: 12
2023-08-31 18:15:25,323:INFO:Logical Core: 12
2023-08-31 18:15:25,323:INFO:Checking libraries
2023-08-31 18:15:25,323:INFO:System:
2023-08-31 18:15:25,323:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-08-31 18:15:25,323:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-08-31 18:15:25,323:INFO:   machine: macOS-13.5.1-arm64-arm-64bit
2023-08-31 18:15:25,323:INFO:PyCaret required dependencies:
2023-08-31 18:15:25,323:INFO:                 pip: 23.2.1
2023-08-31 18:15:25,323:INFO:          setuptools: 68.0.0
2023-08-31 18:15:25,323:INFO:             pycaret: 3.0.2
2023-08-31 18:15:25,323:INFO:             IPython: 8.14.0
2023-08-31 18:15:25,323:INFO:          ipywidgets: 8.1.0
2023-08-31 18:15:25,323:INFO:                tqdm: 4.64.1
2023-08-31 18:15:25,323:INFO:               numpy: 1.25.2
2023-08-31 18:15:25,323:INFO:              pandas: 1.5.0
2023-08-31 18:15:25,323:INFO:              jinja2: 3.1.2
2023-08-31 18:15:25,323:INFO:               scipy: 1.9.3
2023-08-31 18:15:25,323:INFO:              joblib: 1.2.0
2023-08-31 18:15:25,323:INFO:             sklearn: 1.2.2
2023-08-31 18:15:25,323:INFO:                pyod: 1.0.9
2023-08-31 18:15:25,323:INFO:            imblearn: 0.10.1
2023-08-31 18:15:25,323:INFO:   category_encoders: 2.6.1
2023-08-31 18:15:25,323:INFO:            lightgbm: 3.3.5
2023-08-31 18:15:25,323:INFO:               numba: 0.57.0
2023-08-31 18:15:25,323:INFO:            requests: 2.28.0
2023-08-31 18:15:25,323:INFO:          matplotlib: 3.6.2
2023-08-31 18:15:25,323:INFO:          scikitplot: 0.3.7
2023-08-31 18:15:25,323:INFO:         yellowbrick: 1.5
2023-08-31 18:15:25,323:INFO:              plotly: 5.9.0
2023-08-31 18:15:25,323:INFO:             kaleido: 0.2.1
2023-08-31 18:15:25,323:INFO:         statsmodels: 0.13.5
2023-08-31 18:15:25,323:INFO:              sktime: 0.17.0
2023-08-31 18:15:25,323:INFO:               tbats: 1.1.3
2023-08-31 18:15:25,323:INFO:            pmdarima: 2.0.3
2023-08-31 18:15:25,323:INFO:              psutil: 5.9.0
2023-08-31 18:15:25,323:INFO:PyCaret optional dependencies:
2023-08-31 18:15:25,329:INFO:                shap: Not installed
2023-08-31 18:15:25,329:INFO:           interpret: Not installed
2023-08-31 18:15:25,329:INFO:                umap: Not installed
2023-08-31 18:15:25,329:INFO:    pandas_profiling: 0.0.dev0
2023-08-31 18:15:25,329:INFO:  explainerdashboard: Not installed
2023-08-31 18:15:25,329:INFO:             autoviz: Not installed
2023-08-31 18:15:25,329:INFO:           fairlearn: Not installed
2023-08-31 18:15:25,329:INFO:             xgboost: Not installed
2023-08-31 18:15:25,329:INFO:            catboost: Not installed
2023-08-31 18:15:25,329:INFO:              kmodes: Not installed
2023-08-31 18:15:25,329:INFO:             mlxtend: Not installed
2023-08-31 18:15:25,329:INFO:       statsforecast: Not installed
2023-08-31 18:15:25,329:INFO:        tune_sklearn: Not installed
2023-08-31 18:15:25,329:INFO:                 ray: Not installed
2023-08-31 18:15:25,329:INFO:            hyperopt: Not installed
2023-08-31 18:15:25,329:INFO:              optuna: Not installed
2023-08-31 18:15:25,329:INFO:               skopt: Not installed
2023-08-31 18:15:25,330:INFO:              mlflow: Not installed
2023-08-31 18:15:25,330:INFO:              gradio: Not installed
2023-08-31 18:15:25,330:INFO:             fastapi: Not installed
2023-08-31 18:15:25,330:INFO:             uvicorn: Not installed
2023-08-31 18:15:25,330:INFO:              m2cgen: Not installed
2023-08-31 18:15:25,330:INFO:           evidently: Not installed
2023-08-31 18:15:25,330:INFO:               fugue: Not installed
2023-08-31 18:15:25,330:INFO:           streamlit: Not installed
2023-08-31 18:15:25,330:INFO:             prophet: Not installed
2023-08-31 18:15:25,330:INFO:None
2023-08-31 18:15:25,330:INFO:Set up data.
2023-08-31 18:15:25,332:INFO:Set up train/test split.
2023-08-31 18:15:25,335:INFO:Set up index.
2023-08-31 18:15:25,335:INFO:Set up folding strategy.
2023-08-31 18:15:25,335:INFO:Assigning column types.
2023-08-31 18:15:25,336:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-08-31 18:15:25,336:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,338:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,340:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,367:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,413:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,416:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,418:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,445:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,465:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,466:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-08-31 18:15:25,468:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,470:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,497:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,521:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,523:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,550:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,571:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,571:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-08-31 18:15:25,575:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,602:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,622:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,627:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,654:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,674:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,675:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,675:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-08-31 18:15:25,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,777:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,777:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,777:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-08-31 18:15:25,808:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,859:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-08-31 18:15:25,879:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,880:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-08-31 18:15:25,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:25,988:INFO:Preparing preprocessing pipeline...
2023-08-31 18:15:25,988:INFO:Set up simple imputation.
2023-08-31 18:15:25,996:INFO:Finished creating preprocessing pipeline.
2023-08-31 18:15:25,998:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-08-31 18:15:25,998:INFO:Creating final display dataframe.
2023-08-31 18:15:26,020:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (2989, 7)
4        Transformed data shape         (2989, 7)
5   Transformed train set shape         (2092, 7)
6    Transformed test set shape          (897, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              2544
2023-08-31 18:15:26,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:26,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:26,127:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:26,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-08-31 18:15:26,127:INFO:setup() successfully completed in 0.81s...............
2023-08-31 18:15:27,928:INFO:Initializing create_model()
2023-08-31 18:15:27,928:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:15:27,928:INFO:Checking exceptions
2023-08-31 18:15:27,935:INFO:Importing libraries
2023-08-31 18:15:27,935:INFO:Copying training dataset
2023-08-31 18:15:27,938:INFO:Defining folds
2023-08-31 18:15:27,938:INFO:Declaring metric variables
2023-08-31 18:15:27,939:INFO:Importing untrained model
2023-08-31 18:15:27,941:INFO:Ridge Regression Imported successfully
2023-08-31 18:15:27,944:INFO:Starting cross validation
2023-08-31 18:15:27,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:29,491:INFO:Calculating mean and std
2023-08-31 18:15:29,494:INFO:Creating metrics dataframe
2023-08-31 18:15:29,501:INFO:Finalizing model
2023-08-31 18:15:29,539:INFO:Uploading results into container
2023-08-31 18:15:29,539:INFO:Uploading model into container now
2023-08-31 18:15:29,577:INFO:_master_model_container: 1
2023-08-31 18:15:29,577:INFO:_display_container: 2
2023-08-31 18:15:29,577:INFO:Ridge(random_state=123)
2023-08-31 18:15:29,577:INFO:create_model() successfully completed......................................
2023-08-31 18:15:31,193:INFO:Initializing create_model()
2023-08-31 18:15:31,193:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:15:31,194:INFO:Checking exceptions
2023-08-31 18:15:31,200:INFO:Importing libraries
2023-08-31 18:15:31,200:INFO:Copying training dataset
2023-08-31 18:15:31,203:INFO:Defining folds
2023-08-31 18:15:31,203:INFO:Declaring metric variables
2023-08-31 18:15:31,204:INFO:Importing untrained model
2023-08-31 18:15:31,206:INFO:Bayesian Ridge Imported successfully
2023-08-31 18:15:31,209:INFO:Starting cross validation
2023-08-31 18:15:31,211:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:32,041:INFO:Calculating mean and std
2023-08-31 18:15:32,041:INFO:Creating metrics dataframe
2023-08-31 18:15:32,044:INFO:Finalizing model
2023-08-31 18:15:32,127:INFO:Uploading results into container
2023-08-31 18:15:32,128:INFO:Uploading model into container now
2023-08-31 18:15:32,134:INFO:_master_model_container: 2
2023-08-31 18:15:32,134:INFO:_display_container: 3
2023-08-31 18:15:32,134:INFO:BayesianRidge()
2023-08-31 18:15:32,135:INFO:create_model() successfully completed......................................
2023-08-31 18:15:34,028:INFO:Initializing create_model()
2023-08-31 18:15:34,028:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:15:34,028:INFO:Checking exceptions
2023-08-31 18:15:34,036:INFO:Importing libraries
2023-08-31 18:15:34,036:INFO:Copying training dataset
2023-08-31 18:15:34,039:INFO:Defining folds
2023-08-31 18:15:34,039:INFO:Declaring metric variables
2023-08-31 18:15:34,041:INFO:Importing untrained model
2023-08-31 18:15:34,043:INFO:Least Angle Regression Imported successfully
2023-08-31 18:15:34,045:INFO:Starting cross validation
2023-08-31 18:15:34,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:34,837:INFO:Calculating mean and std
2023-08-31 18:15:34,837:INFO:Creating metrics dataframe
2023-08-31 18:15:34,840:INFO:Finalizing model
2023-08-31 18:15:34,852:INFO:Uploading results into container
2023-08-31 18:15:34,852:INFO:Uploading model into container now
2023-08-31 18:15:34,856:INFO:_master_model_container: 3
2023-08-31 18:15:34,856:INFO:_display_container: 4
2023-08-31 18:15:34,857:INFO:Lars(random_state=123)
2023-08-31 18:15:34,857:INFO:create_model() successfully completed......................................
2023-08-31 18:15:38,260:INFO:Initializing tune_model()
2023-08-31 18:15:38,260:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 18:15:38,260:INFO:Checking exceptions
2023-08-31 18:15:38,267:INFO:Copying training dataset
2023-08-31 18:15:38,269:INFO:Checking base model
2023-08-31 18:15:38,269:INFO:Base model : Ridge Regression
2023-08-31 18:15:38,271:INFO:Declaring metric variables
2023-08-31 18:15:38,273:INFO:Defining Hyperparameters
2023-08-31 18:15:38,385:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-08-31 18:15:38,386:INFO:Tuning with n_jobs=-1
2023-08-31 18:15:38,386:INFO:Initializing RandomizedSearchCV
2023-08-31 18:15:38,389:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-08-31 18:15:38,530:INFO:best_params: {'actual_estimator__alpha': 0.02}
2023-08-31 18:15:38,530:INFO:Hyperparameter search completed
2023-08-31 18:15:38,530:INFO:SubProcess create_model() called ==================================
2023-08-31 18:15:38,531:INFO:Initializing create_model()
2023-08-31 18:15:38,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2bba52e10>, model_only=True, return_train_score=False, kwargs={'alpha': 0.02})
2023-08-31 18:15:38,531:INFO:Checking exceptions
2023-08-31 18:15:38,531:INFO:Importing libraries
2023-08-31 18:15:38,531:INFO:Copying training dataset
2023-08-31 18:15:38,533:INFO:Defining folds
2023-08-31 18:15:38,533:INFO:Declaring metric variables
2023-08-31 18:15:38,534:INFO:Importing untrained model
2023-08-31 18:15:38,534:INFO:Declaring custom model
2023-08-31 18:15:38,535:INFO:Ridge Regression Imported successfully
2023-08-31 18:15:38,538:INFO:Starting cross validation
2023-08-31 18:15:38,538:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:38,583:INFO:Calculating mean and std
2023-08-31 18:15:38,583:INFO:Creating metrics dataframe
2023-08-31 18:15:38,585:INFO:Finalizing model
2023-08-31 18:15:38,596:INFO:Uploading results into container
2023-08-31 18:15:38,596:INFO:Uploading model into container now
2023-08-31 18:15:38,596:INFO:_master_model_container: 4
2023-08-31 18:15:38,596:INFO:_display_container: 5
2023-08-31 18:15:38,597:INFO:Ridge(alpha=0.02, random_state=123)
2023-08-31 18:15:38,597:INFO:create_model() successfully completed......................................
2023-08-31 18:15:38,702:INFO:SubProcess create_model() end ==================================
2023-08-31 18:15:38,702:INFO:choose_better activated
2023-08-31 18:15:38,704:INFO:SubProcess create_model() called ==================================
2023-08-31 18:15:38,704:INFO:Initializing create_model()
2023-08-31 18:15:38,704:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:15:38,704:INFO:Checking exceptions
2023-08-31 18:15:38,705:INFO:Importing libraries
2023-08-31 18:15:38,705:INFO:Copying training dataset
2023-08-31 18:15:38,707:INFO:Defining folds
2023-08-31 18:15:38,707:INFO:Declaring metric variables
2023-08-31 18:15:38,707:INFO:Importing untrained model
2023-08-31 18:15:38,707:INFO:Declaring custom model
2023-08-31 18:15:38,707:INFO:Ridge Regression Imported successfully
2023-08-31 18:15:38,707:INFO:Starting cross validation
2023-08-31 18:15:38,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:38,751:INFO:Calculating mean and std
2023-08-31 18:15:38,751:INFO:Creating metrics dataframe
2023-08-31 18:15:38,752:INFO:Finalizing model
2023-08-31 18:15:38,761:INFO:Uploading results into container
2023-08-31 18:15:38,761:INFO:Uploading model into container now
2023-08-31 18:15:38,761:INFO:_master_model_container: 5
2023-08-31 18:15:38,761:INFO:_display_container: 6
2023-08-31 18:15:38,761:INFO:Ridge(random_state=123)
2023-08-31 18:15:38,761:INFO:create_model() successfully completed......................................
2023-08-31 18:15:38,864:INFO:SubProcess create_model() end ==================================
2023-08-31 18:15:38,864:INFO:Ridge(random_state=123) result for RMSE is 0.9435
2023-08-31 18:15:38,864:INFO:Ridge(alpha=0.02, random_state=123) result for RMSE is 0.9435
2023-08-31 18:15:38,865:INFO:Ridge(random_state=123) is best model
2023-08-31 18:15:38,865:INFO:choose_better completed
2023-08-31 18:15:38,865:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-08-31 18:15:38,869:INFO:_master_model_container: 5
2023-08-31 18:15:38,869:INFO:_display_container: 5
2023-08-31 18:15:38,869:INFO:Ridge(random_state=123)
2023-08-31 18:15:38,869:INFO:tune_model() successfully completed......................................
2023-08-31 18:15:40,026:INFO:Initializing tune_model()
2023-08-31 18:15:40,027:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 18:15:40,027:INFO:Checking exceptions
2023-08-31 18:15:40,038:INFO:Copying training dataset
2023-08-31 18:15:40,040:INFO:Checking base model
2023-08-31 18:15:40,041:INFO:Base model : Bayesian Ridge
2023-08-31 18:15:40,042:INFO:Declaring metric variables
2023-08-31 18:15:40,043:INFO:Defining Hyperparameters
2023-08-31 18:15:40,159:INFO:Tuning with n_jobs=-1
2023-08-31 18:15:40,160:INFO:Initializing RandomizedSearchCV
2023-08-31 18:15:58,553:INFO:best_params: {'actual_estimator__lambda_2': 0.3, 'actual_estimator__lambda_1': 1e-07, 'actual_estimator__fit_intercept': False, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.0005, 'actual_estimator__alpha_1': 0.3}
2023-08-31 18:15:58,553:INFO:Hyperparameter search completed
2023-08-31 18:15:58,554:INFO:SubProcess create_model() called ==================================
2023-08-31 18:15:58,554:INFO:Initializing create_model()
2023-08-31 18:15:58,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2bb4f6b90>, model_only=True, return_train_score=False, kwargs={'lambda_2': 0.3, 'lambda_1': 1e-07, 'fit_intercept': False, 'compute_score': True, 'alpha_2': 0.0005, 'alpha_1': 0.3})
2023-08-31 18:15:58,554:INFO:Checking exceptions
2023-08-31 18:15:58,554:INFO:Importing libraries
2023-08-31 18:15:58,554:INFO:Copying training dataset
2023-08-31 18:15:58,556:INFO:Defining folds
2023-08-31 18:15:58,556:INFO:Declaring metric variables
2023-08-31 18:15:58,557:INFO:Importing untrained model
2023-08-31 18:15:58,557:INFO:Declaring custom model
2023-08-31 18:15:58,559:INFO:Bayesian Ridge Imported successfully
2023-08-31 18:15:58,561:INFO:Starting cross validation
2023-08-31 18:15:58,562:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:58,602:INFO:Calculating mean and std
2023-08-31 18:15:58,602:INFO:Creating metrics dataframe
2023-08-31 18:15:58,604:INFO:Finalizing model
2023-08-31 18:15:58,675:INFO:Uploading results into container
2023-08-31 18:15:58,676:INFO:Uploading model into container now
2023-08-31 18:15:58,676:INFO:_master_model_container: 6
2023-08-31 18:15:58,676:INFO:_display_container: 6
2023-08-31 18:15:58,677:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 18:15:58,677:INFO:create_model() successfully completed......................................
2023-08-31 18:15:58,776:INFO:SubProcess create_model() end ==================================
2023-08-31 18:15:58,776:INFO:choose_better activated
2023-08-31 18:15:58,779:INFO:SubProcess create_model() called ==================================
2023-08-31 18:15:58,779:INFO:Initializing create_model()
2023-08-31 18:15:58,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:15:58,780:INFO:Checking exceptions
2023-08-31 18:15:58,781:INFO:Importing libraries
2023-08-31 18:15:58,781:INFO:Copying training dataset
2023-08-31 18:15:58,784:INFO:Defining folds
2023-08-31 18:15:58,784:INFO:Declaring metric variables
2023-08-31 18:15:58,785:INFO:Importing untrained model
2023-08-31 18:15:58,785:INFO:Declaring custom model
2023-08-31 18:15:58,785:INFO:Bayesian Ridge Imported successfully
2023-08-31 18:15:58,785:INFO:Starting cross validation
2023-08-31 18:15:58,786:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:15:58,861:INFO:Calculating mean and std
2023-08-31 18:15:58,862:INFO:Creating metrics dataframe
2023-08-31 18:15:58,864:INFO:Finalizing model
2023-08-31 18:15:58,893:INFO:Uploading results into container
2023-08-31 18:15:58,894:INFO:Uploading model into container now
2023-08-31 18:15:58,894:INFO:_master_model_container: 7
2023-08-31 18:15:58,894:INFO:_display_container: 7
2023-08-31 18:15:58,894:INFO:BayesianRidge()
2023-08-31 18:15:58,894:INFO:create_model() successfully completed......................................
2023-08-31 18:15:58,989:INFO:SubProcess create_model() end ==================================
2023-08-31 18:15:58,990:INFO:BayesianRidge() result for RMSE is 0.9435
2023-08-31 18:15:58,990:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) result for RMSE is 0.9433
2023-08-31 18:15:58,990:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3) is best model
2023-08-31 18:15:58,990:INFO:choose_better completed
2023-08-31 18:15:58,997:INFO:_master_model_container: 7
2023-08-31 18:15:58,997:INFO:_display_container: 6
2023-08-31 18:15:58,997:INFO:BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 18:15:58,998:INFO:tune_model() successfully completed......................................
2023-08-31 18:16:14,787:INFO:Initializing tune_model()
2023-08-31 18:16:14,787:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-08-31 18:16:14,787:INFO:Checking exceptions
2023-08-31 18:16:14,803:INFO:Copying training dataset
2023-08-31 18:16:14,807:INFO:Checking base model
2023-08-31 18:16:14,807:INFO:Base model : Least Angle Regression
2023-08-31 18:16:14,809:INFO:Declaring metric variables
2023-08-31 18:16:14,810:INFO:Defining Hyperparameters
2023-08-31 18:16:14,810:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-08-31 18:16:14,997:INFO:Tuning with n_jobs=-1
2023-08-31 18:16:14,997:INFO:Initializing GridSearchCV
2023-08-31 18:16:15,593:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': False}
2023-08-31 18:16:15,593:INFO:Hyperparameter search completed
2023-08-31 18:16:15,593:INFO:SubProcess create_model() called ==================================
2023-08-31 18:16:15,594:INFO:Initializing create_model()
2023-08-31 18:16:15,594:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x2bac580d0>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': False})
2023-08-31 18:16:15,594:INFO:Checking exceptions
2023-08-31 18:16:15,594:INFO:Importing libraries
2023-08-31 18:16:15,594:INFO:Copying training dataset
2023-08-31 18:16:15,596:INFO:Defining folds
2023-08-31 18:16:15,596:INFO:Declaring metric variables
2023-08-31 18:16:15,597:INFO:Importing untrained model
2023-08-31 18:16:15,598:INFO:Declaring custom model
2023-08-31 18:16:15,599:INFO:Least Angle Regression Imported successfully
2023-08-31 18:16:15,602:INFO:Starting cross validation
2023-08-31 18:16:15,602:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:16:15,655:INFO:Calculating mean and std
2023-08-31 18:16:15,655:INFO:Creating metrics dataframe
2023-08-31 18:16:15,657:INFO:Finalizing model
2023-08-31 18:16:15,669:INFO:Uploading results into container
2023-08-31 18:16:15,670:INFO:Uploading model into container now
2023-08-31 18:16:15,670:INFO:_master_model_container: 8
2023-08-31 18:16:15,670:INFO:_display_container: 7
2023-08-31 18:16:15,670:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 18:16:15,670:INFO:create_model() successfully completed......................................
2023-08-31 18:16:15,789:INFO:SubProcess create_model() end ==================================
2023-08-31 18:16:15,789:INFO:choose_better activated
2023-08-31 18:16:15,791:INFO:SubProcess create_model() called ==================================
2023-08-31 18:16:15,792:INFO:Initializing create_model()
2023-08-31 18:16:15,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-08-31 18:16:15,792:INFO:Checking exceptions
2023-08-31 18:16:15,793:INFO:Importing libraries
2023-08-31 18:16:15,793:INFO:Copying training dataset
2023-08-31 18:16:15,795:INFO:Defining folds
2023-08-31 18:16:15,795:INFO:Declaring metric variables
2023-08-31 18:16:15,795:INFO:Importing untrained model
2023-08-31 18:16:15,795:INFO:Declaring custom model
2023-08-31 18:16:15,795:INFO:Least Angle Regression Imported successfully
2023-08-31 18:16:15,795:INFO:Starting cross validation
2023-08-31 18:16:15,796:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-08-31 18:16:15,853:INFO:Calculating mean and std
2023-08-31 18:16:15,853:INFO:Creating metrics dataframe
2023-08-31 18:16:15,854:INFO:Finalizing model
2023-08-31 18:16:15,864:INFO:Uploading results into container
2023-08-31 18:16:15,864:INFO:Uploading model into container now
2023-08-31 18:16:15,865:INFO:_master_model_container: 9
2023-08-31 18:16:15,865:INFO:_display_container: 8
2023-08-31 18:16:15,865:INFO:Lars(random_state=123)
2023-08-31 18:16:15,865:INFO:create_model() successfully completed......................................
2023-08-31 18:16:15,966:INFO:SubProcess create_model() end ==================================
2023-08-31 18:16:15,966:INFO:Lars(random_state=123) result for RMSE is 0.9435
2023-08-31 18:16:15,967:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) result for RMSE is 0.9433
2023-08-31 18:16:15,967:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123) is best model
2023-08-31 18:16:15,967:INFO:choose_better completed
2023-08-31 18:16:15,971:INFO:_master_model_container: 9
2023-08-31 18:16:15,971:INFO:_display_container: 7
2023-08-31 18:16:15,971:INFO:Lars(eps=1e-05, fit_intercept=False, random_state=123)
2023-08-31 18:16:15,971:INFO:tune_model() successfully completed......................................
2023-08-31 18:16:17,850:INFO:Initializing plot_model()
2023-08-31 18:16:17,850:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 18:16:17,850:INFO:Checking exceptions
2023-08-31 18:16:17,853:INFO:Preloading libraries
2023-08-31 18:16:17,853:INFO:Copying training dataset
2023-08-31 18:16:17,853:INFO:Plot type: error
2023-08-31 18:16:17,891:INFO:Fitting Model
2023-08-31 18:16:17,891:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-08-31 18:16:17,891:INFO:Scoring test/hold-out set
2023-08-31 18:16:18,041:INFO:Visual Rendered Successfully
2023-08-31 18:16:18,139:INFO:plot_model() successfully completed......................................
2023-08-31 18:16:22,254:INFO:Initializing plot_model()
2023-08-31 18:16:22,254:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-08-31 18:16:22,254:INFO:Checking exceptions
2023-08-31 18:16:22,258:INFO:Preloading libraries
2023-08-31 18:16:22,258:INFO:Copying training dataset
2023-08-31 18:16:22,258:INFO:Plot type: feature
2023-08-31 18:16:22,323:INFO:Visual Rendered Successfully
2023-08-31 18:16:22,423:INFO:plot_model() successfully completed......................................
2023-08-31 18:16:25,437:INFO:Initializing finalize_model()
2023-08-31 18:16:25,438:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-08-31 18:16:25,438:INFO:Finalizing BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3)
2023-08-31 18:16:25,440:INFO:Initializing create_model()
2023-08-31 18:16:25,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
              fit_intercept=False, lambda_1=1e-07, lambda_2=0.3), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-08-31 18:16:25,440:INFO:Checking exceptions
2023-08-31 18:16:25,440:INFO:Importing libraries
2023-08-31 18:16:25,441:INFO:Copying training dataset
2023-08-31 18:16:25,441:INFO:Defining folds
2023-08-31 18:16:25,441:INFO:Declaring metric variables
2023-08-31 18:16:25,441:INFO:Importing untrained model
2023-08-31 18:16:25,441:INFO:Declaring custom model
2023-08-31 18:16:25,441:INFO:Bayesian Ridge Imported successfully
2023-08-31 18:16:25,441:INFO:Cross validation set to False
2023-08-31 18:16:25,441:INFO:Fitting Model
2023-08-31 18:16:25,470:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 18:16:25,470:INFO:create_model() successfully completed......................................
2023-08-31 18:16:25,611:INFO:_master_model_container: 9
2023-08-31 18:16:25,611:INFO:_display_container: 7
2023-08-31 18:16:25,618:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))])
2023-08-31 18:16:25,619:INFO:finalize_model() successfully completed......................................
2023-08-31 18:16:26,216:INFO:Initializing predict_model()
2023-08-31 18:16:26,216:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x2bbb9d990>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 BayesianRidge(alpha_1=0.3, alpha_2=0.0005, compute_score=True,
                               fit_intercept=False, lambda_1=1e-07,
                               lambda_2=0.3))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2c2a72480>)
2023-08-31 18:16:26,216:INFO:Checking exceptions
2023-08-31 18:16:26,216:INFO:Preloading libraries
2023-08-31 18:16:26,217:INFO:Set up data.
2023-08-31 18:16:26,220:INFO:Set up index.
2023-09-14 18:12:05,721:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:12:05,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:12:05,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:12:05,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:12:07,147:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-09-14 18:13:24,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:13:24,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:13:24,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:13:24,587:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-09-14 18:13:24,827:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-09-14 18:13:36,986:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-09-14 18:13:47,941:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/ydata_profiling/model/pandas/discretize_pandas.py:52: FutureWarning:

In a future version, `df.iloc[:, i] = newvals` will attempt to set the values inplace instead of always setting a new array. To retain the old behavior, use either `df[df.columns[i]] = newvals` or, if columns are non-unique, `df.isetitem(i, newvals)`


2023-09-14 18:14:06,094:INFO:PyCaret RegressionExperiment
2023-09-14 18:14:06,094:INFO:Logging name: reg-default-name
2023-09-14 18:14:06,094:INFO:ML Usecase: MLUsecase.REGRESSION
2023-09-14 18:14:06,094:INFO:version 3.0.2
2023-09-14 18:14:06,094:INFO:Initializing setup()
2023-09-14 18:14:06,094:INFO:self.USI: 426a
2023-09-14 18:14:06,094:INFO:self._variable_keys: {'X', 'fold_shuffle_param', 'data', 'memory', 'USI', 'idx', 'n_jobs_param', 'log_plots_param', 'y_train', 'exp_name_log', 'gpu_param', 'fold_generator', 'html_param', '_ml_usecase', 'pipeline', 'target_param', 'fold_groups_param', 'y', 'transform_target_param', 'seed', 'X_test', 'exp_id', 'gpu_n_jobs_param', 'y_test', 'X_train', '_available_plots', 'logging_param'}
2023-09-14 18:14:06,094:INFO:Checking environment
2023-09-14 18:14:06,094:INFO:python_version: 3.11.4
2023-09-14 18:14:06,094:INFO:python_build: ('main', 'Jul  5 2023 08:54:11')
2023-09-14 18:14:06,094:INFO:machine: arm64
2023-09-14 18:14:06,094:INFO:platform: macOS-13.5.2-arm64-arm-64bit
2023-09-14 18:14:06,094:INFO:Memory: svmem(total=17179869184, available=4477419520, percent=73.9, used=6345441280, free=187416576, active=4261380096, inactive=4280090624, wired=2084061184)
2023-09-14 18:14:06,094:INFO:Physical Core: 12
2023-09-14 18:14:06,094:INFO:Logical Core: 12
2023-09-14 18:14:06,094:INFO:Checking libraries
2023-09-14 18:14:06,094:INFO:System:
2023-09-14 18:14:06,094:INFO:    python: 3.11.4 (main, Jul  5 2023, 08:54:11) [Clang 14.0.6 ]
2023-09-14 18:14:06,094:INFO:executable: /Users/haochenmiao/anaconda3/bin/python
2023-09-14 18:14:06,094:INFO:   machine: macOS-13.5.2-arm64-arm-64bit
2023-09-14 18:14:06,094:INFO:PyCaret required dependencies:
2023-09-14 18:14:06,094:INFO:                 pip: 23.2.1
2023-09-14 18:14:06,094:INFO:          setuptools: 68.0.0
2023-09-14 18:14:06,094:INFO:             pycaret: 3.0.2
2023-09-14 18:14:06,094:INFO:             IPython: 8.14.0
2023-09-14 18:14:06,095:INFO:          ipywidgets: 8.1.0
2023-09-14 18:14:06,095:INFO:                tqdm: 4.64.1
2023-09-14 18:14:06,095:INFO:               numpy: 1.25.2
2023-09-14 18:14:06,095:INFO:              pandas: 1.5.0
2023-09-14 18:14:06,095:INFO:              jinja2: 3.1.2
2023-09-14 18:14:06,095:INFO:               scipy: 1.9.3
2023-09-14 18:14:06,095:INFO:              joblib: 1.2.0
2023-09-14 18:14:06,095:INFO:             sklearn: 1.2.2
2023-09-14 18:14:06,095:INFO:                pyod: 1.0.9
2023-09-14 18:14:06,095:INFO:            imblearn: 0.10.1
2023-09-14 18:14:06,095:INFO:   category_encoders: 2.6.1
2023-09-14 18:14:06,095:INFO:            lightgbm: 3.3.5
2023-09-14 18:14:06,095:INFO:               numba: 0.57.0
2023-09-14 18:14:06,095:INFO:            requests: 2.28.0
2023-09-14 18:14:06,095:INFO:          matplotlib: 3.6.2
2023-09-14 18:14:06,095:INFO:          scikitplot: 0.3.7
2023-09-14 18:14:06,095:INFO:         yellowbrick: 1.5
2023-09-14 18:14:06,095:INFO:              plotly: 5.9.0
2023-09-14 18:14:06,095:INFO:             kaleido: 0.2.1
2023-09-14 18:14:06,095:INFO:         statsmodels: 0.13.5
2023-09-14 18:14:06,095:INFO:              sktime: 0.17.0
2023-09-14 18:14:06,095:INFO:               tbats: 1.1.3
2023-09-14 18:14:06,095:INFO:            pmdarima: 2.0.3
2023-09-14 18:14:06,095:INFO:              psutil: 5.9.0
2023-09-14 18:14:06,095:INFO:PyCaret optional dependencies:
2023-09-14 18:14:06,103:INFO:                shap: Not installed
2023-09-14 18:14:06,103:INFO:           interpret: Not installed
2023-09-14 18:14:06,103:INFO:                umap: Not installed
2023-09-14 18:14:06,103:INFO:    pandas_profiling: 0.0.dev0
2023-09-14 18:14:06,103:INFO:  explainerdashboard: Not installed
2023-09-14 18:14:06,103:INFO:             autoviz: Not installed
2023-09-14 18:14:06,104:INFO:           fairlearn: Not installed
2023-09-14 18:14:06,104:INFO:             xgboost: Not installed
2023-09-14 18:14:06,104:INFO:            catboost: Not installed
2023-09-14 18:14:06,104:INFO:              kmodes: Not installed
2023-09-14 18:14:06,104:INFO:             mlxtend: Not installed
2023-09-14 18:14:06,104:INFO:       statsforecast: Not installed
2023-09-14 18:14:06,104:INFO:        tune_sklearn: Not installed
2023-09-14 18:14:06,104:INFO:                 ray: Not installed
2023-09-14 18:14:06,104:INFO:            hyperopt: Not installed
2023-09-14 18:14:06,104:INFO:              optuna: Not installed
2023-09-14 18:14:06,104:INFO:               skopt: Not installed
2023-09-14 18:14:06,104:INFO:              mlflow: Not installed
2023-09-14 18:14:06,104:INFO:              gradio: Not installed
2023-09-14 18:14:06,104:INFO:             fastapi: Not installed
2023-09-14 18:14:06,104:INFO:             uvicorn: Not installed
2023-09-14 18:14:06,104:INFO:              m2cgen: Not installed
2023-09-14 18:14:06,104:INFO:           evidently: Not installed
2023-09-14 18:14:06,104:INFO:               fugue: Not installed
2023-09-14 18:14:06,104:INFO:           streamlit: Not installed
2023-09-14 18:14:06,104:INFO:             prophet: Not installed
2023-09-14 18:14:06,104:INFO:None
2023-09-14 18:14:06,104:INFO:Set up data.
2023-09-14 18:14:06,107:INFO:Set up train/test split.
2023-09-14 18:14:06,110:INFO:Set up index.
2023-09-14 18:14:06,110:INFO:Set up folding strategy.
2023-09-14 18:14:06,110:INFO:Assigning column types.
2023-09-14 18:14:06,111:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-09-14 18:14:06,111:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,113:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,116:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,143:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,164:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,266:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,269:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,271:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,319:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-09-14 18:14:06,321:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,323:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,349:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,372:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,374:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,400:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,421:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-09-14 18:14:06,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,452:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,477:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,503:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,524:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-09-14 18:14:06,554:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,625:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,626:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-09-14 18:14:06,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,708:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-09-14 18:14:06,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,729:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-09-14 18:14:06,780:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,834:INFO:Preparing preprocessing pipeline...
2023-09-14 18:14:06,834:INFO:Set up simple imputation.
2023-09-14 18:14:06,842:INFO:Finished creating preprocessing pipeline.
2023-09-14 18:14:06,844:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-09-14 18:14:06,844:INFO:Creating final display dataframe.
2023-09-14 18:14:06,867:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target             Close
2                   Target type        Regression
3           Original data shape         (4525, 7)
4        Transformed data shape         (4525, 7)
5   Transformed train set shape         (3167, 7)
6    Transformed test set shape         (1358, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              426a
2023-09-14 18:14:06,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-09-14 18:14:06,974:INFO:setup() successfully completed in 0.88s...............
2023-09-14 18:14:18,835:INFO:Initializing create_model()
2023-09-14 18:14:18,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=ridge, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:14:18,835:INFO:Checking exceptions
2023-09-14 18:14:18,842:INFO:Importing libraries
2023-09-14 18:14:18,842:INFO:Copying training dataset
2023-09-14 18:14:18,845:INFO:Defining folds
2023-09-14 18:14:18,845:INFO:Declaring metric variables
2023-09-14 18:14:18,847:INFO:Importing untrained model
2023-09-14 18:14:18,848:INFO:Ridge Regression Imported successfully
2023-09-14 18:14:18,851:INFO:Starting cross validation
2023-09-14 18:14:18,855:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:14:20,548:INFO:Calculating mean and std
2023-09-14 18:14:20,554:INFO:Creating metrics dataframe
2023-09-14 18:14:20,562:INFO:Finalizing model
2023-09-14 18:14:20,603:INFO:Uploading results into container
2023-09-14 18:14:20,603:INFO:Uploading model into container now
2023-09-14 18:14:20,613:INFO:_master_model_container: 1
2023-09-14 18:14:20,613:INFO:_display_container: 2
2023-09-14 18:14:20,614:INFO:Ridge(random_state=123)
2023-09-14 18:14:20,614:INFO:create_model() successfully completed......................................
2023-09-14 18:14:30,293:INFO:Initializing create_model()
2023-09-14 18:14:30,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=br, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:14:30,294:INFO:Checking exceptions
2023-09-14 18:14:30,300:INFO:Importing libraries
2023-09-14 18:14:30,300:INFO:Copying training dataset
2023-09-14 18:14:30,304:INFO:Defining folds
2023-09-14 18:14:30,304:INFO:Declaring metric variables
2023-09-14 18:14:30,305:INFO:Importing untrained model
2023-09-14 18:14:30,307:INFO:Bayesian Ridge Imported successfully
2023-09-14 18:14:30,309:INFO:Starting cross validation
2023-09-14 18:14:30,310:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:14:31,267:INFO:Calculating mean and std
2023-09-14 18:14:31,267:INFO:Creating metrics dataframe
2023-09-14 18:14:31,269:INFO:Finalizing model
2023-09-14 18:14:31,386:INFO:Uploading results into container
2023-09-14 18:14:31,386:INFO:Uploading model into container now
2023-09-14 18:14:31,392:INFO:_master_model_container: 2
2023-09-14 18:14:31,392:INFO:_display_container: 3
2023-09-14 18:14:31,392:INFO:BayesianRidge()
2023-09-14 18:14:31,393:INFO:create_model() successfully completed......................................
2023-09-14 18:14:39,960:INFO:Initializing create_model()
2023-09-14 18:14:39,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=lar, fold=10, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:14:39,960:INFO:Checking exceptions
2023-09-14 18:14:39,966:INFO:Importing libraries
2023-09-14 18:14:39,966:INFO:Copying training dataset
2023-09-14 18:14:39,969:INFO:Defining folds
2023-09-14 18:14:39,970:INFO:Declaring metric variables
2023-09-14 18:14:39,971:INFO:Importing untrained model
2023-09-14 18:14:39,973:INFO:Least Angle Regression Imported successfully
2023-09-14 18:14:39,975:INFO:Starting cross validation
2023-09-14 18:14:39,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:14:40,025:INFO:Calculating mean and std
2023-09-14 18:14:40,025:INFO:Creating metrics dataframe
2023-09-14 18:14:40,027:INFO:Finalizing model
2023-09-14 18:14:40,038:INFO:Uploading results into container
2023-09-14 18:14:40,039:INFO:Uploading model into container now
2023-09-14 18:14:40,043:INFO:_master_model_container: 3
2023-09-14 18:14:40,043:INFO:_display_container: 4
2023-09-14 18:14:40,043:INFO:Lars(random_state=123)
2023-09-14 18:14:40,043:INFO:create_model() successfully completed......................................
2023-09-14 18:15:05,993:INFO:Initializing tune_model()
2023-09-14 18:15:05,993:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Ridge(random_state=123), fold=None, round=4, n_iter=1000, custom_grid={'alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-09-14 18:15:05,993:INFO:Checking exceptions
2023-09-14 18:15:06,000:INFO:Copying training dataset
2023-09-14 18:15:06,001:INFO:Checking base model
2023-09-14 18:15:06,002:INFO:Base model : Ridge Regression
2023-09-14 18:15:06,003:INFO:Declaring metric variables
2023-09-14 18:15:06,004:INFO:Defining Hyperparameters
2023-09-14 18:15:06,109:INFO:custom_grid: {'actual_estimator__alpha': [0.02, 0.024, 0.025, 0.025, 0.026, 0.03]}
2023-09-14 18:15:06,109:INFO:Tuning with n_jobs=-1
2023-09-14 18:15:06,109:INFO:Initializing RandomizedSearchCV
2023-09-14 18:15:06,112:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/model_selection/_search.py:305: UserWarning:

The total space of parameters 6 is smaller than n_iter=1000. Running 6 iterations. For exhaustive searches, use GridSearchCV.


2023-09-14 18:15:07,202:INFO:best_params: {'actual_estimator__alpha': 0.03}
2023-09-14 18:15:07,203:INFO:Hyperparameter search completed
2023-09-14 18:15:07,203:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:07,203:INFO:Initializing create_model()
2023-09-14 18:15:07,204:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28df24650>, model_only=True, return_train_score=False, kwargs={'alpha': 0.03})
2023-09-14 18:15:07,204:INFO:Checking exceptions
2023-09-14 18:15:07,204:INFO:Importing libraries
2023-09-14 18:15:07,204:INFO:Copying training dataset
2023-09-14 18:15:07,206:INFO:Defining folds
2023-09-14 18:15:07,206:INFO:Declaring metric variables
2023-09-14 18:15:07,208:INFO:Importing untrained model
2023-09-14 18:15:07,208:INFO:Declaring custom model
2023-09-14 18:15:07,210:INFO:Ridge Regression Imported successfully
2023-09-14 18:15:07,212:INFO:Starting cross validation
2023-09-14 18:15:07,212:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:07,261:INFO:Calculating mean and std
2023-09-14 18:15:07,261:INFO:Creating metrics dataframe
2023-09-14 18:15:07,263:INFO:Finalizing model
2023-09-14 18:15:07,274:INFO:Uploading results into container
2023-09-14 18:15:07,274:INFO:Uploading model into container now
2023-09-14 18:15:07,275:INFO:_master_model_container: 4
2023-09-14 18:15:07,275:INFO:_display_container: 5
2023-09-14 18:15:07,275:INFO:Ridge(alpha=0.03, random_state=123)
2023-09-14 18:15:07,275:INFO:create_model() successfully completed......................................
2023-09-14 18:15:07,369:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:07,369:INFO:choose_better activated
2023-09-14 18:15:07,371:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:07,371:INFO:Initializing create_model()
2023-09-14 18:15:07,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Ridge(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:15:07,371:INFO:Checking exceptions
2023-09-14 18:15:07,372:INFO:Importing libraries
2023-09-14 18:15:07,372:INFO:Copying training dataset
2023-09-14 18:15:07,375:INFO:Defining folds
2023-09-14 18:15:07,375:INFO:Declaring metric variables
2023-09-14 18:15:07,375:INFO:Importing untrained model
2023-09-14 18:15:07,375:INFO:Declaring custom model
2023-09-14 18:15:07,375:INFO:Ridge Regression Imported successfully
2023-09-14 18:15:07,375:INFO:Starting cross validation
2023-09-14 18:15:07,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:07,420:INFO:Calculating mean and std
2023-09-14 18:15:07,420:INFO:Creating metrics dataframe
2023-09-14 18:15:07,421:INFO:Finalizing model
2023-09-14 18:15:07,429:INFO:Uploading results into container
2023-09-14 18:15:07,429:INFO:Uploading model into container now
2023-09-14 18:15:07,429:INFO:_master_model_container: 5
2023-09-14 18:15:07,429:INFO:_display_container: 6
2023-09-14 18:15:07,429:INFO:Ridge(random_state=123)
2023-09-14 18:15:07,429:INFO:create_model() successfully completed......................................
2023-09-14 18:15:07,522:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:07,522:INFO:Ridge(random_state=123) result for RMSE is 0.2882
2023-09-14 18:15:07,523:INFO:Ridge(alpha=0.03, random_state=123) result for RMSE is 0.2882
2023-09-14 18:15:07,523:INFO:Ridge(random_state=123) is best model
2023-09-14 18:15:07,523:INFO:choose_better completed
2023-09-14 18:15:07,523:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-09-14 18:15:07,527:INFO:_master_model_container: 5
2023-09-14 18:15:07,527:INFO:_display_container: 5
2023-09-14 18:15:07,527:INFO:Ridge(random_state=123)
2023-09-14 18:15:07,528:INFO:tune_model() successfully completed......................................
2023-09-14 18:15:15,936:INFO:Initializing tune_model()
2023-09-14 18:15:15,936:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-09-14 18:15:15,936:INFO:Checking exceptions
2023-09-14 18:15:15,942:INFO:Copying training dataset
2023-09-14 18:15:15,944:INFO:Checking base model
2023-09-14 18:15:15,944:INFO:Base model : Bayesian Ridge
2023-09-14 18:15:15,946:INFO:Declaring metric variables
2023-09-14 18:15:15,947:INFO:Defining Hyperparameters
2023-09-14 18:15:16,053:INFO:Tuning with n_jobs=-1
2023-09-14 18:15:16,053:INFO:Initializing RandomizedSearchCV
2023-09-14 18:15:34,304:INFO:best_params: {'actual_estimator__lambda_2': 1e-07, 'actual_estimator__lambda_1': 0.3, 'actual_estimator__fit_intercept': True, 'actual_estimator__compute_score': True, 'actual_estimator__alpha_2': 0.3, 'actual_estimator__alpha_1': 0.01}
2023-09-14 18:15:34,306:INFO:Hyperparameter search completed
2023-09-14 18:15:34,306:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:34,306:INFO:Initializing create_model()
2023-09-14 18:15:34,306:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28df24650>, model_only=True, return_train_score=False, kwargs={'lambda_2': 1e-07, 'lambda_1': 0.3, 'fit_intercept': True, 'compute_score': True, 'alpha_2': 0.3, 'alpha_1': 0.01})
2023-09-14 18:15:34,306:INFO:Checking exceptions
2023-09-14 18:15:34,306:INFO:Importing libraries
2023-09-14 18:15:34,306:INFO:Copying training dataset
2023-09-14 18:15:34,309:INFO:Defining folds
2023-09-14 18:15:34,309:INFO:Declaring metric variables
2023-09-14 18:15:34,310:INFO:Importing untrained model
2023-09-14 18:15:34,310:INFO:Declaring custom model
2023-09-14 18:15:34,312:INFO:Bayesian Ridge Imported successfully
2023-09-14 18:15:34,314:INFO:Starting cross validation
2023-09-14 18:15:34,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:34,355:INFO:Calculating mean and std
2023-09-14 18:15:34,356:INFO:Creating metrics dataframe
2023-09-14 18:15:34,358:INFO:Finalizing model
2023-09-14 18:15:34,440:INFO:Uploading results into container
2023-09-14 18:15:34,441:INFO:Uploading model into container now
2023-09-14 18:15:34,441:INFO:_master_model_container: 6
2023-09-14 18:15:34,441:INFO:_display_container: 6
2023-09-14 18:15:34,442:INFO:BayesianRidge(alpha_1=0.01, alpha_2=0.3, compute_score=True, lambda_1=0.3,
              lambda_2=1e-07)
2023-09-14 18:15:34,442:INFO:create_model() successfully completed......................................
2023-09-14 18:15:34,576:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:34,576:INFO:choose_better activated
2023-09-14 18:15:34,578:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:34,578:INFO:Initializing create_model()
2023-09-14 18:15:34,579:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:15:34,579:INFO:Checking exceptions
2023-09-14 18:15:34,580:INFO:Importing libraries
2023-09-14 18:15:34,580:INFO:Copying training dataset
2023-09-14 18:15:34,584:INFO:Defining folds
2023-09-14 18:15:34,584:INFO:Declaring metric variables
2023-09-14 18:15:34,585:INFO:Importing untrained model
2023-09-14 18:15:34,585:INFO:Declaring custom model
2023-09-14 18:15:34,585:INFO:Bayesian Ridge Imported successfully
2023-09-14 18:15:34,585:INFO:Starting cross validation
2023-09-14 18:15:34,586:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:34,657:INFO:Calculating mean and std
2023-09-14 18:15:34,658:INFO:Creating metrics dataframe
2023-09-14 18:15:34,658:INFO:Finalizing model
2023-09-14 18:15:34,689:INFO:Uploading results into container
2023-09-14 18:15:34,689:INFO:Uploading model into container now
2023-09-14 18:15:34,689:INFO:_master_model_container: 7
2023-09-14 18:15:34,689:INFO:_display_container: 7
2023-09-14 18:15:34,689:INFO:BayesianRidge()
2023-09-14 18:15:34,689:INFO:create_model() successfully completed......................................
2023-09-14 18:15:34,781:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:34,781:INFO:BayesianRidge() result for RMSE is 0.2882
2023-09-14 18:15:34,782:INFO:BayesianRidge(alpha_1=0.01, alpha_2=0.3, compute_score=True, lambda_1=0.3,
              lambda_2=1e-07) result for RMSE is 0.2882
2023-09-14 18:15:34,782:INFO:BayesianRidge() is best model
2023-09-14 18:15:34,782:INFO:choose_better completed
2023-09-14 18:15:34,782:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-09-14 18:15:34,791:INFO:_master_model_container: 7
2023-09-14 18:15:34,791:INFO:_display_container: 6
2023-09-14 18:15:34,792:INFO:BayesianRidge()
2023-09-14 18:15:34,792:INFO:tune_model() successfully completed......................................
2023-09-14 18:15:39,514:INFO:Initializing tune_model()
2023-09-14 18:15:39,515:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Lars(random_state=123), fold=None, round=4, n_iter=1000, custom_grid=None, optimize=RMSE, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2023-09-14 18:15:39,515:INFO:Checking exceptions
2023-09-14 18:15:39,521:INFO:Copying training dataset
2023-09-14 18:15:39,523:INFO:Checking base model
2023-09-14 18:15:39,523:INFO:Base model : Least Angle Regression
2023-09-14 18:15:39,525:INFO:Declaring metric variables
2023-09-14 18:15:39,526:INFO:Defining Hyperparameters
2023-09-14 18:15:39,526:INFO:1000 is bigger than total combinations 22, setting search algorithm to grid
2023-09-14 18:15:39,632:INFO:Tuning with n_jobs=-1
2023-09-14 18:15:39,633:INFO:Initializing GridSearchCV
2023-09-14 18:15:40,103:INFO:best_params: {'actual_estimator__eps': 1e-05, 'actual_estimator__fit_intercept': True}
2023-09-14 18:15:40,103:INFO:Hyperparameter search completed
2023-09-14 18:15:40,103:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:40,103:INFO:Initializing create_model()
2023-09-14 18:15:40,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x28df24650>, model_only=True, return_train_score=False, kwargs={'eps': 1e-05, 'fit_intercept': True})
2023-09-14 18:15:40,103:INFO:Checking exceptions
2023-09-14 18:15:40,103:INFO:Importing libraries
2023-09-14 18:15:40,104:INFO:Copying training dataset
2023-09-14 18:15:40,106:INFO:Defining folds
2023-09-14 18:15:40,106:INFO:Declaring metric variables
2023-09-14 18:15:40,107:INFO:Importing untrained model
2023-09-14 18:15:40,107:INFO:Declaring custom model
2023-09-14 18:15:40,109:INFO:Least Angle Regression Imported successfully
2023-09-14 18:15:40,111:INFO:Starting cross validation
2023-09-14 18:15:40,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:40,155:INFO:Calculating mean and std
2023-09-14 18:15:40,155:INFO:Creating metrics dataframe
2023-09-14 18:15:40,158:INFO:Finalizing model
2023-09-14 18:15:40,168:INFO:Uploading results into container
2023-09-14 18:15:40,168:INFO:Uploading model into container now
2023-09-14 18:15:40,169:INFO:_master_model_container: 8
2023-09-14 18:15:40,169:INFO:_display_container: 7
2023-09-14 18:15:40,169:INFO:Lars(eps=1e-05, random_state=123)
2023-09-14 18:15:40,169:INFO:create_model() successfully completed......................................
2023-09-14 18:15:40,261:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:40,261:INFO:choose_better activated
2023-09-14 18:15:40,263:INFO:SubProcess create_model() called ==================================
2023-09-14 18:15:40,263:INFO:Initializing create_model()
2023-09-14 18:15:40,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-09-14 18:15:40,264:INFO:Checking exceptions
2023-09-14 18:15:40,265:INFO:Importing libraries
2023-09-14 18:15:40,265:INFO:Copying training dataset
2023-09-14 18:15:40,267:INFO:Defining folds
2023-09-14 18:15:40,267:INFO:Declaring metric variables
2023-09-14 18:15:40,267:INFO:Importing untrained model
2023-09-14 18:15:40,267:INFO:Declaring custom model
2023-09-14 18:15:40,267:INFO:Least Angle Regression Imported successfully
2023-09-14 18:15:40,267:INFO:Starting cross validation
2023-09-14 18:15:40,268:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-09-14 18:15:40,315:INFO:Calculating mean and std
2023-09-14 18:15:40,316:INFO:Creating metrics dataframe
2023-09-14 18:15:40,316:INFO:Finalizing model
2023-09-14 18:15:40,325:INFO:Uploading results into container
2023-09-14 18:15:40,325:INFO:Uploading model into container now
2023-09-14 18:15:40,325:INFO:_master_model_container: 9
2023-09-14 18:15:40,325:INFO:_display_container: 8
2023-09-14 18:15:40,326:INFO:Lars(random_state=123)
2023-09-14 18:15:40,326:INFO:create_model() successfully completed......................................
2023-09-14 18:15:40,420:INFO:SubProcess create_model() end ==================================
2023-09-14 18:15:40,420:INFO:Lars(random_state=123) result for RMSE is 0.2946
2023-09-14 18:15:40,420:INFO:Lars(eps=1e-05, random_state=123) result for RMSE is 0.2946
2023-09-14 18:15:40,421:INFO:Lars(random_state=123) is best model
2023-09-14 18:15:40,421:INFO:choose_better completed
2023-09-14 18:15:40,421:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-09-14 18:15:40,425:INFO:_master_model_container: 9
2023-09-14 18:15:40,425:INFO:_display_container: 7
2023-09-14 18:15:40,425:INFO:Lars(random_state=123)
2023-09-14 18:15:40,425:INFO:tune_model() successfully completed......................................
2023-09-14 18:16:08,173:INFO:Initializing plot_model()
2023-09-14 18:16:08,174:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-09-14 18:16:08,174:INFO:Checking exceptions
2023-09-14 18:16:08,176:INFO:Preloading libraries
2023-09-14 18:16:08,177:INFO:Copying training dataset
2023-09-14 18:16:08,177:INFO:Plot type: error
2023-09-14 18:16:08,220:INFO:Fitting Model
2023-09-14 18:16:08,220:WARNING:/Users/haochenmiao/anaconda3/lib/python3.11/site-packages/sklearn/base.py:439: UserWarning:

X does not have valid feature names, but BayesianRidge was fitted with feature names


2023-09-14 18:16:08,220:INFO:Scoring test/hold-out set
2023-09-14 18:16:08,362:INFO:Visual Rendered Successfully
2023-09-14 18:16:08,455:INFO:plot_model() successfully completed......................................
2023-09-14 18:16:50,600:INFO:Initializing plot_model()
2023-09-14 18:16:50,600:INFO:plot_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), plot=feature, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, use_train_data=False, verbose=True, system=True, display=None, display_format=None)
2023-09-14 18:16:50,601:INFO:Checking exceptions
2023-09-14 18:16:50,607:INFO:Preloading libraries
2023-09-14 18:16:50,608:INFO:Copying training dataset
2023-09-14 18:16:50,608:INFO:Plot type: feature
2023-09-14 18:16:50,675:INFO:Visual Rendered Successfully
2023-09-14 18:16:50,830:INFO:plot_model() successfully completed......................................
2023-09-14 18:17:14,481:INFO:Initializing finalize_model()
2023-09-14 18:17:14,481:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-09-14 18:17:14,482:INFO:Finalizing BayesianRidge()
2023-09-14 18:17:14,484:INFO:Initializing create_model()
2023-09-14 18:17:14,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-09-14 18:17:14,484:INFO:Checking exceptions
2023-09-14 18:17:14,484:INFO:Importing libraries
2023-09-14 18:17:14,484:INFO:Copying training dataset
2023-09-14 18:17:14,484:INFO:Defining folds
2023-09-14 18:17:14,484:INFO:Declaring metric variables
2023-09-14 18:17:14,485:INFO:Importing untrained model
2023-09-14 18:17:14,485:INFO:Declaring custom model
2023-09-14 18:17:14,485:INFO:Bayesian Ridge Imported successfully
2023-09-14 18:17:14,485:INFO:Cross validation set to False
2023-09-14 18:17:14,485:INFO:Fitting Model
2023-09-14 18:17:14,507:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-09-14 18:17:14,507:INFO:create_model() successfully completed......................................
2023-09-14 18:17:14,620:INFO:_master_model_container: 9
2023-09-14 18:17:14,620:INFO:_display_container: 7
2023-09-14 18:17:14,622:INFO:Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())])
2023-09-14 18:17:14,622:INFO:finalize_model() successfully completed......................................
2023-09-14 18:17:27,548:INFO:Initializing predict_model()
2023-09-14 18:17:27,548:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x28e00c5d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/82/rx54lvmd1hz_l7fcq3sc7vdc0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Open', 'High', 'Low', 'Volume',
                                             'SMA7', 'SMA30'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x2a7827f60>)
2023-09-14 18:17:27,548:INFO:Checking exceptions
2023-09-14 18:17:27,548:INFO:Preloading libraries
2023-09-14 18:17:27,549:INFO:Set up data.
2023-09-14 18:17:27,552:INFO:Set up index.
